com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.react.bridge.JSBundleLoader$5
app.notifee.core.InitProvider
com.facebook.react.fabric.GuardedFrameCallback
com.facebook.fbreact.specs.NativeTimingSpec
com.swmansion.reanimated.CopiedEvent
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.facebook.react.views.image.ReactImageManager
com.facebook.react.bridge.JavaJSExecutor$Factory
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
io.legere.pdfiumandroid.LoggerInterface
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState
com.swmansion.reanimated.sensor.ReanimatedSensorType
com.google.android.material.button.MaterialButton
com.facebook.react.modules.debug.DevSettingsModule
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.react.bridge.JSIModuleProvider
androidx.work.impl.diagnostics.DiagnosticsReceiver
com.google.firebase.datatransport.TransportRegistrar
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.yoga.annotations.DoNotStrip
com.facebook.react.bridge.JavaOnlyMap
app.notifee.core.EventSubscriber
com.facebook.react.bridge.ModuleHolder
com.horcrux.svg.SVGLength$UnitType
com.facebook.react.modules.image.ImageLoaderModule
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
androidx.versionedparcelable.ParcelImpl
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.uimanager.ViewGroupManager
com.facebook.jni.NativeRunnable
com.facebook.jni.DestructorThread$DestructorList
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
me.leolin.shortcutbadger.impl.AdwHomeBadger
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname
app.notifee.core.model.NotificationAndroidStyleModel
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.bridge.UIManagerListener
com.swmansion.reanimated.NativeMethodsHelper
com.facebook.react.bridge.JavaMethodWrapper$10
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2
com.horcrux.svg.SvgPackage
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2
com.swmansion.reanimated.ReanimatedPackage$1
androidx.transition.FragmentTransitionSupport
androidx.appcompat.widget.ActionBarOverlayLayout
com.android.installreferrer.api.ReferrerDetails
com.horcrux.svg.SvgView
com.facebook.fbreact.specs.NativeRedBoxSpec
com.horcrux.svg.R
android.support.v4.app.RemoteActionCompatParcelizer
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2
com.horcrux.svg.RenderableViewManager$PatternManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
androidx.room.MultiInstanceInvalidationService
com.facebook.react.bridge.JSIModulePackage
com.facebook.react.bridge.ReadableNativeMap
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.jni.UnknownCppException
com.facebook.react.bridge.interop.InteropModuleRegistry
com.facebook.hermes.reactexecutor.HermesExecutor
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.facebook.jni.HybridData
io.legere.pdfiumandroid.suspend.PdfiumCoreKt
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
androidx.appcompat.widget.SearchView
com.swmansion.reanimated.R
com.facebook.react.fabric.interop.InteropEvent
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.horcrux.svg.RenderableViewManager$FeFloodManager
me.leolin.shortcutbadger.impl.XiaomiHomeBadger
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
com.facebook.react.common.LifecycleState
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener
io.legere.pdfiumandroid.PdfiumCore
com.horcrux.svg.RenderableViewManager$MarkerManager
com.swmansion.reanimated.NodesManager$4
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.imagepicker.ImagePickerModule
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.shreemati.SecurityService.SecurityServiceManager
com.facebook.react.modules.toast.ToastModule
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified
com.google.android.material.appbar.AppBarLayout$Behavior
io.invertase.notifee.NotifeeEventSubscriber
com.horcrux.svg.RenderableView
com.horcrux.svg.RenderableViewManager$UseViewManager
com.swmansion.reanimated.nativeProxy.NativeProxyCommon
com.google.android.gms.common.api.GoogleApiActivity
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.proguard.annotations.KeepGettersAndSetters
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
io.legere.pdfiumandroid.util.ConfigKt$WhenMappings
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending
me.leolin.shortcutbadger.impl.DefaultBadger
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
app.notifee.core.Worker
com.facebook.react.bridge.Promise
com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator
com.swmansion.reanimated.NativeProxy
com.google.android.gms.common.util.DynamiteApi
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
io.invertase.firebase.common.ReactNativeFirebaseModule
com.swmansion.reanimated.MapUtils
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.freeraspreactnative.models.RNPackageInfo
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.util.RCTLog
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.google.firebase.messaging.FirebaseMessaging
com.facebook.react.bridge.DynamicFromMap$1
com.facebook.react.bridge.ReadableNativeMap$1$1
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.reactcommunity.rndatetimepicker.RNDatePickerDialogFragment
com.facebook.fbreact.specs.NativeVibrationSpec
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
io.legere.pdfiumandroid.Logger
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.gusparis.monthpicker.RNMPickerModule
com.facebook.react.modules.vibration.VibrationModule
com.horcrux.svg.RenderableViewManager$LineViewManager
com.google.android.material.internal.BaselineLayout
com.facebook.react.fabric.mounting.mountitems.MountItem
com.google.android.material.snackbar.SnackbarContentLayout
com.facebook.react.bridge.JavaMethodWrapper$1
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator
com.google.android.material.timepicker.ChipTextInputComboView
com.swmansion.reanimated.AndroidUIScheduler$2
io.legere.pdfiumandroid.util.AlreadyClosedBehavior
io.legere.pdfiumandroid.PdfDocument$Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback
androidx.fragment.app.DialogFragment
io.legere.pdfiumandroid.PdfPage
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer
com.horcrux.svg.CustomFilter
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$Companion
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.swmansion.reanimated.NodesManager$2
com.facebook.imagepipeline.platform.PreverificationHelper
com.horcrux.svg.RenderableViewManager$FilterManager
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
com.facebook.react.bridge.JavaMethodWrapper$6
com.horcrux.svg.RenderableViewManager$FeOffsetManager
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
androidx.work.impl.background.systemalarm.SystemAlarmService
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1
androidx.savedstate.Recreator
com.facebook.fbreact.specs.NativeDevSettingsSpec
io.legere.pdfiumandroid.util.ConfigKt
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.react.bridge.NativeArgumentsParseException
com.facebook.react.bridge.ReactBridge
androidx.emoji2.text.EmojiCompatInitializer
com.google.android.gms.common.annotation.KeepName
androidx.work.impl.WorkDatabase_Impl
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService
androidx.annotation.Keep
kotlinx.serialization.json.JsonArray
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.jni.DestructorThread
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem
com.facebook.react.config.ReactFeatureFlags
com.facebook.react.fabric.ReactNativeConfig
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2
com.google.android.material.timepicker.ClockFaceView
com.facebook.react.bridge.Arguments
app.notifee.core.BlockStateBroadcastReceiver
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner
androidx.profileinstaller.ProfileInstallerInitializer
com.swmansion.reanimated.ReanimatedUIManagerFactory
com.facebook.react.fabric.mounting.LayoutMetricsConversions
org.greenrobot.eventbus.ThreadMode
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2
com.facebook.react.fabric.SurfaceHandlerBinding
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner$Factory
com.facebook.react.bridge.MemoryPressureListener
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.swmansion.reanimated.NodesManager$3
io.legere.pdfiumandroid.R
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.facebook.react.bridge.ReadableType
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.google.android.material.datepicker.MaterialTextInputPicker
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation
com.facebook.react.fabric.FabricComponents
com.google.android.material.button.MaterialButtonToggleGroup
app.notifee.core.Notifee
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
com.facebook.react.bridge.ReactMarker
com.horcrux.svg.RNSVGRenderableManager
com.facebook.react.modules.appstate.AppStateModule
com.facebook.react.fabric.mounting.MountingManager
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint
com.facebook.yoga.YogaValue
com.shree.mati.MainActivity
androidx.recyclerview.widget.GridLayoutManager
com.google.android.material.transformation.ExpandableTransformationBehavior
com.swmansion.reanimated.ReactNativeUtils
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$Companion
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$ParsingException
com.facebook.fbreact.specs.NativeLinkingManagerSpec
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.jscexecutor.JSCExecutor
io.legere.pdfiumandroid.PdfDocument$Meta
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager
com.facebook.react.bridge.NativeArray
com.facebook.fbreact.specs.NativeModalManagerSpec
com.google.android.material.datepicker.MaterialCalendar
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
com.facebook.react.bridge.ReactApplicationContext
app.notifee.core.event.BlockStateEvent
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner
com.facebook.react.fabric.events.FabricEventEmitter
com.google.android.gms.auth.api.signin.RevocationBoundService
com.horcrux.svg.SvgViewManager
com.facebook.react.bridge.ReadableNativeMap$2
com.google.android.gms.common.GoogleApiAvailability
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler
com.facebook.soloader.SysUtil$LollipopSysdeps
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.activity.ImmLeaksCleaner
com.facebook.react.bridge.JSIModuleHolder
androidx.activity.ComponentActivity$3
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar
org.reactnative.maskedview.RNCMaskedViewManager
io.legere.pdfiumandroid.PdfDocumentKt
com.facebook.fbreact.specs.NativeAppearanceSpec
com.facebook.react.bridge.OnBatchCompleteListener
androidx.appcompat.widget.ActionBarContainer
io.legere.pdfiumandroid.PdfPasswordException
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule
com.facebook.jni.ThreadScopeSupport
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.hermes.intl.DateTimeFormat
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter
com.facebook.react.views.drawer.ReactDrawerLayoutManager
app.notifee.core.event.LogEvent
com.swmansion.reanimated.layoutReanimation.Snapshot
com.swmansion.reanimated.NodesManager$NativeUpdateOperation
androidx.appcompat.widget.AlertDialogLayout
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.swmansion.rnscreens.NativeScreensModuleSpec
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$Companion
com.facebook.react.bridge.CatalystInstanceImpl$1
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.freeraspreactnative.FreeraspReactNativeModule
com.horcrux.svg.RenderableViewManager$ImageViewManager
androidx.lifecycle.DefaultLifecycleObserverAdapter
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl
com.facebook.common.time.AwakeTimeSinceBootClock
io.legere.pdfiumandroid.PdfDocument$PageCount
me.leolin.shortcutbadger.impl.SonyHomeBadger
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
com.facebook.react.fabric.ComponentFactory
com.google.android.material.internal.TouchObserverFrameLayout
com.horcrux.svg.RenderableViewManager$GroupViewManager
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.google.android.gms.common.api.internal.zzd
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.react.bridge.MemoryPressure
androidx.core.graphics.drawable.IconCompat
com.facebook.react.modules.core.DeviceEventManagerModule
com.facebook.react.bridge.ProxyJavaScriptExecutor
org.greenrobot.eventbus.android.AndroidComponentsImpl
com.facebook.soloader.Api18TraceUtils
com.facebook.react.bridge.ReactModuleWithSpec
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver
com.facebook.jni.IteratorHelper
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.react.bridge.ReactNoCrashSoftException
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.react.common.futures.SimpleSettableFuture
io.legere.pdfiumandroid.PdfPage$Companion
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.react.fabric.FabricUIManager$4
com.facebook.react.bridge.ColorPropConverter
com.facebook.jni.CppSystemErrorException
com.reactnativecommunity.webview.RNCWebViewManager
com.swmansion.reanimated.ReanimatedPackage
com.facebook.react.bridge.JSONArguments
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.google.android.material.timepicker.TimePickerView
com.swmansion.reanimated.ReaCompatibility
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.horcrux.svg.RenderableViewManager$RectViewManager
com.swmansion.reanimated.ReanimatedModule
com.google.firebase.provider.FirebaseInitProvider
io.legere.pdfiumandroid.PdfPageKt
com.franmontiel.persistentcookiejar.cache.IdentifiableCookie
com.facebook.react.fabric.mounting.SurfaceMountingManager$4
com.reactcommunity.rndatetimepicker.NativeModuleMaterialDatePickerSpec
com.facebook.react.bridge.JavaOnlyMap$1
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2
com.google.android.gms.common.api.Status
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.react.fabric.ReactNativeConfig$Companion
com.facebook.react.bridge.ReactMarker$MarkerListener
com.horcrux.svg.RenderableViewManager$TextPathViewManager
app.notifee.core.model.NotificationModel
com.facebook.react.runtime.JSEngineInstance
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.react.uimanager.SimpleViewManager
androidx.lifecycle.SavedStateHandleController
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
io.legere.pdfiumandroid.DefaultLogger
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider
com.facebook.react.bridge.Systrace
kotlin.jvm.internal.DefaultConstructorMarker
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion
com.swmansion.reanimated.sensor.ReanimatedSensorListener
com.facebook.react.views.text.ReactRawTextManager
com.swmansion.reanimated.NativeProxy$1
com.facebook.react.bridge.InvalidIteratorException
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider
com.horcrux.svg.SvgView$Events
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2
com.google.android.gms.common.api.Scope
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion
app.notifee.core.database.NotifeeCoreDatabase
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.franmontiel.persistentcookiejar.persistence.SerializableCookie
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
io.legere.pdfiumandroid.PdfiumCore$Companion
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$Companion
com.facebook.jni.DestructorThread$Destructor
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.scottyab.rootbeer.RootBeerNative
com.facebook.react.bridge.JavaMethodWrapper$4
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.systrace.TraceListener
com.swmansion.reanimated.nativeProxy.NoopEventHandler
app.notifee.core.database.NotifeeCoreDatabase_Impl
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion
com.horcrux.svg.FilterUtils
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.react.modules.blob.FileReaderModule
app.notifee.core.interfaces.MethodCallResult
com.facebook.react.modules.permissions.PermissionsModule
io.legere.pdfiumandroid.PdfDocument$Bookmark
com.facebook.react.fabric.LongStreamingStats
com.google.firebase.components.ComponentDiscoveryService
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.swmansion.reanimated.BuildConfig
com.facebook.react.fabric.FabricUIManager$1
androidx.appcompat.widget.FitWindowsFrameLayout
app.notifee.core.KeepForSdk
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer
com.facebook.react.bridge.JSInstance
app.notifee.core.ForegroundService
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.hermes.intl.Intl
com.facebook.react.bridge.ReactMethod
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.react.bridge.Dynamic
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.module.model.ReactModuleInfo
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.google.android.material.search.SearchView$Behavior
io.invertase.notifee.NotifeePackage
com.facebook.animated.gif.GifFrame
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.bridge.CxxModuleWrapperBase
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.react.modules.intent.IntentModule
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.facebook.react.fabric.FabricUIManager$3
com.facebook.react.fabric.EmptyReactNativeConfig
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion$1
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.google.firebase.installations.FirebaseInstallationsRegistrar
io.invertase.notifee.NotifeeApiModule
com.facebook.react.bridge.ReadableMapKeySetIterator
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2
androidx.versionedparcelable.CustomVersionedParcelable
com.toyberman.RNSslPinningModule
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2
com.reactnativecommunity.checkbox.ReactCheckBoxManager
me.leolin.shortcutbadger.impl.NovaHomeBadger
com.facebook.animated.gif.GifImage
com.swmansion.reanimated.CopiedEvent$1
com.google.android.material.timepicker.MaterialTimePicker
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$Companion
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState
com.facebook.react.bridge.UIManager
com.sslpublickeypinning.SslPublicKeyPinningSpec
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types
com.learnium.RNDeviceInfo.RNDeviceModule
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$Companion
com.BV.LinearGradient.LinearGradientManager
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.swmansion.rnscreens.ScreenViewManager
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer
com.google.android.material.internal.CheckableImageButton
com.facebook.react.bridge.Arguments$2
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.bridge.FallbackJSBundleLoader
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.horcrux.svg.RenderableViewManager
io.legere.pdfiumandroid.suspend.PdfDocumentKt
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater
androidx.appcompat.widget.Toolbar
com.facebook.react.modules.blob.BlobCollector
com.google.android.material.internal.NavigationMenuView
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver
com.google.android.gms.auth.api.signin.SignInAccount
org.wonday.pdf.PdfManager
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable
com.facebook.react.bridge.NativeModule
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
androidx.fragment.app.FragmentContainerView
com.facebook.react.uimanager.UIConstantsProvider
com.facebook.react.fabric.FabricUIManager
com.swmansion.reanimated.NodesManager$OnAnimationFrame
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService
com.horcrux.svg.FilterRegion
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
androidx.activity.ComponentActivity$2
com.facebook.react.fabric.interop.InteropEventEmitter
com.facebook.react.runtime.JSCInstance
com.facebook.fbreact.specs.NativeBlobModuleSpec
io.legere.pdfiumandroid.PdfTextPage$Companion
com.horcrux.svg.RenderableViewManager$RadialGradientManager
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor
com.reactcommunity.rndatetimepicker.NativeModuleMaterialTimePickerSpec
com.google.android.material.internal.NavigationMenuItemView
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
com.facebook.react.bridge.CatalystInstanceImpl$5
com.facebook.react.fabric.events.EventBeatManager
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2
com.facebook.react.uimanager.ViewManager
com.google.android.material.timepicker.ClockHandView
com.swmansion.rnscreens.ScreenStackViewManager
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent
com.google.android.gms.common.GooglePlayServicesManifestException
com.facebook.react.modules.statusbar.StatusBarModule
com.aheaditec.talsec_security.security.Natives
kotlinx.serialization.json.JsonNull
com.facebook.react.bridge.JavaModuleWrapper
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
androidx.work.impl.workers.DiagnosticsWorker
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired
com.facebook.react.bridge.GuardedResultAsyncTask
com.horcrux.svg.NativeSvgRenderableModuleSpec
com.facebook.react.turbomodule.core.NativeModuleSoLoader
com.google.android.material.datepicker.MaterialDatePicker
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.bridge.ModuleSpec
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.swmansion.reanimated.Utils
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.facebook.react.fabric.LongStreamingStats$2
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
com.google.android.gms.iid.InstanceID
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.bridge.DefaultJSExceptionHandler
com.ReactNativeBlobUtil.Utils.FileProvider
com.facebook.react.modules.debug.SourceCodeModule
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion$1
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.android.material.snackbar.Snackbar$SnackbarLayout
app.notifee.core.interfaces.EventListener
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule
com.facebook.react.modules.dialog.DialogModule
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec
com.facebook.react.bridge.JavaMethodWrapper$8
com.franmontiel.persistentcookiejar.cache.CookieCache
com.franmontiel.persistentcookiejar.PersistentCookieJar
com.facebook.react.bridge.RuntimeScheduler
com.facebook.react.common.JavascriptException
androidx.core.util.Pools$SimplePool
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.facebook.react.bridge.ReadableNativeMap$1
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager
com.reactcommunity.rndatetimepicker.DatePickerModule
com.swmansion.reanimated.ReanimatedMessageQueueThread
javax.inject.Provider
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.uimanager.ReanimatedUIManager
com.swmansion.reanimated.AndroidUIScheduler$1
com.facebook.react.runtime.ReactHostImpl
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.runtime.JSTimerExecutor
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.facebook.soloader.DoNotOptimize
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.swmansion.reanimated.layoutReanimation.SharedElement
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract
com.facebook.react.fabric.SurfaceHandlerBinding$DisplayModeTypeDef
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer
com.aheaditec.talsec_security.security.runner.TalsecMonitoringReceiver
com.reactnativecommunity.webview.RNCWebViewFileProvider
com.facebook.react.bridge.NativeArrayInterface
kotlinx.serialization.json.JsonPrimitive
com.facebook.react.uimanager.ComponentNameResolverManager
com.facebook.react.bridge.Inspector$LocalConnection
io.legere.pdfiumandroid.util.InitLock
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner
com.google.android.material.textfield.TextInputEditText
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$Companion
com.facebook.react.bridge.JSBundleLoaderDelegate
app.notifee.core.event.NotificationEvent
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback
com.facebook.react.uimanager.RootViewManager
app.notifee.core.model.NotificationAndroidModel
com.google.firebase.messaging.FirebaseMessagingService
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion
com.facebook.jni.MapIteratorHelper
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl
com.appmattus.certificatetransparency.internal.verifier.CertificateTransparencyTrustManager
com.horcrux.svg.SvgViewModule
com.facebook.react.devsupport.HMRClient
app.notifee.core.model.NotificationAndroidPressActionModel
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.freeraspreactnative.models.RNSuspiciousAppInfo
com.facebook.react.views.view.ReactViewManager
com.horcrux.svg.events.SvgLoadEvent
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.fabric.FabricUIManager$5
com.facebook.react.fabric.FabricJSIModuleProvider
com.swmansion.rnscreens.SearchBarManager
com.swmansion.reanimated.sensor.ReanimatedSensor
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.bridge.JavaOnlyArray
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager
com.google.android.material.transformation.FabTransformationBehavior
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleanerFactory
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.reactcommunity.rndatetimepicker.RNTimePickerDialogFragment
com.rnfs.RNFSManager
com.facebook.yoga.YogaNative
app.notifee.core.event.ForegroundServiceEvent
com.facebook.yoga.YogaLogLevel
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.facebook.react.bridge.JSBundleLoader$2
com.facebook.react.modules.deviceinfo.DeviceInfoModule
androidx.work.WorkManagerInitializer
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.work.impl.workers.CombineContinuationsWorker
com.facebook.react.bridge.JavaScriptExecutorFactory
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.facebook.react.fabric.mounting.mountitems.MountItemFactory
androidx.work.impl.background.systemjob.SystemJobService
com.horcrux.svg.RenderableViewManager$CircleViewManager
com.swmansion.reanimated.layoutReanimation.AnimationsManager
com.facebook.react.bridge.UIManagerProvider
androidx.appcompat.widget.ButtonBarLayout
com.facebook.react.modules.websocket.WebSocketModule
com.facebook.react.bridge.RuntimeExecutor
com.facebook.react.fabric.Binding
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface
com.facebook.react.fabric.FabricUIManager$2
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.horcrux.svg.RenderableViewManager$DefsViewManager
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.bridge.JSCJavaScriptExecutor
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
com.facebook.react.modules.core.JavaTimerManager
kotlinx.serialization.json.JsonElement
com.facebook.react.bridge.WritableNativeArray
com.facebook.react.runtime.hermes.HermesInstance
io.legere.pdfiumandroid.util.Config
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor
app.notifee.core.AlarmPermissionBroadcastReceiver
com.facebook.jni.DestructorThread$DestructorStack
com.horcrux.svg.VirtualViewManager
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.swmansion.reanimated.ReanimatedModule$1
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.hermes.instrumentation.HermesSamplingProfiler
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
app.notifee.core.RebootBroadcastReceiver
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec
com.swmansion.reanimated.AndroidUIScheduler
com.facebook.react.bridge.GuardedRunnable
com.facebook.react.bridge.PerformanceCounter
com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor
com.google.android.material.appbar.MaterialToolbar
com.facebook.yoga.YogaNodeJNIBase
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2
com.horcrux.svg.RenderableViewManager$EllipseViewManager
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule
com.facebook.common.internal.DoNotStrip
androidx.appcompat.widget.DialogTitle
androidx.profileinstaller.ProfileInstallReceiver
com.facebook.fbreact.specs.NativeAppStateSpec
androidx.work.OverwritingInputMerger
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer
com.facebook.react.runtime.ReactInstance
com.facebook.react.modules.core.JSTimers
androidx.work.impl.background.systemalarm.RescheduleReceiver
com.shree.mati.MainApplication
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2
com.facebook.react.perflogger.NativeModulePerfLogger
com.reactcommunity.rndatetimepicker.TimePickerModule
com.facebook.react.modules.fresco.FrescoModule
com.franmontiel.persistentcookiejar.R$string
com.detectfrida.util.RootDetectorHelper
com.facebook.react.bridge.DynamicFromObject
androidx.recyclerview.widget.StaggeredGridLayoutManager
io.invertase.firebase.app.ReactNativeFirebaseAppModule
androidx.work.Worker
com.google.android.gms.common.api.internal.LifecycleCallback
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.android.installreferrer.api.InstallReferrerClient
com.facebook.react.bridge.ReactContext
com.facebook.react.ReactActivity
androidx.appcompat.widget.SearchView$SearchAutoComplete
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
androidx.appcompat.widget.ActionMenuView
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.bridge.ObjectAlreadyConsumedException
io.legere.pdfiumandroid.PdfDocument$Link
com.facebook.react.bridge.ReadableArray
com.swmansion.reanimated.NodesManager
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder
com.swmansion.rnscreens.ScreenFragment
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.yoga.YogaLogger
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator
com.facebook.react.bridge.CatalystInstanceImpl$1$1
com.google.android.gms.common.api.internal.BasePendingResult
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
androidx.recyclerview.widget.LinearLayoutManager
com.horcrux.svg.RenderableViewManager$TSpanViewManager
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer
com.facebook.react.fabric.FabricSoLoader
com.oblador.vectoricons.VectorIconsModule
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.react.bridge.JSBundleLoader
com.google.android.gms.common.SupportErrorDialogFragment
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
android.support.v4.graphics.drawable.IconCompatParcelizer
kotlinx.coroutines.android.AndroidDispatcherFactory
com.facebook.react.bridge.DynamicFromMap
com.horcrux.svg.VirtualView
com.facebook.soloader.SysUtil$Api14Utils
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.ReadableNativeArray$1
com.google.android.material.sidesheet.SideSheetBehavior
com.shreemati.sslcertcheck.SSLPinningModule
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.fbreact.specs.NativeShareModuleSpec
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer
com.facebook.soloader.SoLoader
com.facebook.fbreact.specs.NativeToastAndroidSpec
androidx.work.WorkerParameters
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.bridge.JsonWriterHelper
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner$Companion
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2
androidx.activity.ComponentActivity$4
androidx.activity.result.ActivityResultRegistry$1
com.horcrux.svg.RenderableViewManager$FeCompositeManager
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.google.android.material.transformation.ExpandableBehavior
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.google.android.material.datepicker.MaterialCalendarGridView
com.swmansion.reanimated.sensor.ReanimatedSensorContainer
app.notifee.core.NotificationAlarmReceiver
com.ReactNativeBlobUtil.ReactNativeBlobUtil
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4
com.facebook.react.bridge.BackgroundExecutor
com.franmontiel.persistentcookiejar.BuildConfig
androidx.lifecycle.SavedStateHandleAttacher
com.facebook.react.bridge.WritableArray
com.facebook.react.bridge.DimensionPropConverter
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping
com.facebook.react.ReactApplication
androidx.work.impl.foreground.SystemForegroundService
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
androidx.lifecycle.ProcessLifecycleInitializer
me.leolin.shortcutbadger.impl.NewHtcHomeBadger
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$Companion
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.facebook.react.modules.clipboard.ClipboardModule
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
androidx.appcompat.widget.ActionBarContextView
com.facebook.react.views.text.ReactTextViewManager
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$Companion
com.facebook.react.fabric.BindingImpl
com.facebook.react.uimanager.UIConstantsProviderManager
com.facebook.hermes.intl.NumberFormat
com.facebook.react.bridge.AssertionException
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.bridge.BaseJavaModule
com.facebook.react.bridge.JSIModuleType
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval
com.facebook.hermes.intl.Collator
com.sslpublickeypinning.SslPublicKeyPinningModule
com.google.android.material.carousel.CarouselLayoutManager
com.facebook.react.runtime.BindingsInstaller
com.google.android.material.internal.ClippableRoundedCornerLayout
com.facebook.react.bridge.JavaJSExecutor
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.horcrux.svg.RenderableViewManager$MaskManager
androidx.constraintlayout.helper.widget.Flow
com.facebook.react.bridge.DynamicFromArray
com.horcrux.svg.RenderableViewManager$TextViewManager
com.facebook.react.bridge.ReactMarkerConstants
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2
com.reactnativecommunity.webview.RNCWebViewMessagingModule
androidx.biometric.BiometricPrompt$ResetCallbackObserver
com.facebook.react.bridge.ReactContext$2
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.facebook.react.bridge.CatalystInstanceImpl$2
androidx.work.ArrayCreatingInputMerger
androidx.core.app.CoreComponentFactory
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.react.modules.devloading.DevLoadingModule
com.google.android.material.bottomsheet.BottomSheetBehavior
androidx.activity.ComponentActivity$6
com.swmansion.rnscreens.ScreensModule
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.facebook.react.uimanager.BaseViewManager
com.facebook.jni.DestructorThread$1
com.android.installreferrer.api.InstallReferrerStateListener
com.dieam.reactnativepushnotification.modules.RNPushNotification
com.facebook.react.defaults.DefaultComponentsRegistry
com.swmansion.reanimated.nativeProxy.SensorSetter
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2
com.facebook.react.uimanager.events.RCTEventEmitter
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.facebook.react.modules.sound.SoundManagerModule
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.fabric.DevToolsReactPerfLogger
app.notifee.core.ReceiverService
com.google.firebase.concurrent.ExecutorsRegistrar
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.horcrux.svg.NativeSvgViewModuleSpec
com.facebook.react.modules.camera.ImageStoreManager
com.imagepicker.ImagePickerProvider
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
io.legere.pdfiumandroid.suspend.PdfTextPageKt
com.horcrux.svg.RenderableViewManager$ForeignObjectManager
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.bridge.SoftAssertions
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$Companion
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.bridge.ReactIgnorableMountingException
com.facebook.react.bridge.CallbackImpl
com.reactnativecommunity.webview.RNCWebViewModule
com.facebook.react.fabric.LongStreamingStats$1
com.facebook.react.bridge.ReactCxxErrorHandler
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
me.leolin.shortcutbadger.impl.ApexHomeBadger
com.horcrux.svg.BuildConfig
com.facebook.react.animated.NativeAnimatedModule
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.common.time.RealtimeSinceBootClock
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
com.facebook.react.bridge.Callback
androidx.appcompat.widget.ContentFrameLayout
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$Companion
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
io.legere.pdfiumandroid.suspend.PdfPageKt
com.facebook.react.bridge.ReactContext$1
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.bridge.ReadableMap
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager
com.facebook.react.ReactHost
com.facebook.react.modules.i18nmanager.I18nManagerModule
androidx.recyclerview.widget.RecyclerView
com.swmansion.reanimated.nativeProxy.EventHandler
com.facebook.react.bridge.NativeModuleRegistry
com.franmontiel.persistentcookiejar.persistence.CookiePersistor
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.horcrux.svg.VirtualViewManager$SVGClass
com.swmansion.rnscreens.ModalScreenViewManager
com.google.android.material.chip.Chip
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer
com.facebook.react.bridge.CatalystInstanceImpl$3
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
app.notifee.core.model.NotificationAndroidActionModel
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.jni.CppException
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.facebook.react.modules.share.ShareModule
com.facebook.react.devsupport.JSException
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
com.horcrux.svg.RenderableViewManager$FeMergeManager
com.detectfrida.DetectFridaModule
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.modules.core.TimingModule
com.facebook.react.turbomodule.core.TurboModuleInteropUtils
com.franmontiel.persistentcookiejar.R
com.facebook.react.bridge.BaseActivityEventListener
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.fbreact.specs.NativeSoundManagerSpec
androidx.core.app.RemoteActionCompat
com.google.firebase.components.ComponentRegistrar
io.legere.pdfiumandroid.PdfTextPage
com.horcrux.svg.RenderableViewManager$LinearGradientManager
com.facebook.react.turbomodule.core.TurboModuleManager
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly
androidx.appcompat.view.menu.ActionMenuItemView
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2
io.legere.pdfiumandroid.PdfWriteCallback
io.legere.pdfiumandroid.PdfDocument
androidx.fragment.app.Fragment$6
com.google.android.gms.common.internal.ReflectedParcelable
com.facebook.react.uimanager.UIManagerModule
com.horcrux.svg.RenderableViewManager$SymbolManager
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.proguard.annotations.DoNotStrip
io.invertase.notifee.NotifeeInitProvider
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem
androidx.work.impl.WorkDatabase
androidx.core.widget.NestedScrollView
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
io.legere.pdfiumandroid.util.Size
com.google.android.datatransport.cct.CctBackendFactory
com.facebook.react.bridge.CatalystInstanceImpl$4
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname$Companion
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.bridge.Arguments$1
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead
com.facebook.react.modules.appregistry.AppRegistry
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.jni.annotations.DoNotStripAny
com.google.firebase.FirebaseCommonKtxRegistrar
com.facebook.react.modules.blob.BlobModule
com.google.android.material.textfield.TextInputLayout
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.facebook.react.bridge.JavaScriptModuleRegistry
androidx.constraintlayout.widget.ConstraintLayout
com.facebook.jni.HybridData$Destructor
androidx.appcompat.view.menu.ListMenuItemView
app.notifee.core.Logger
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint
com.facebook.react.bridge.ReactCallback
com.google.firebase.FirebaseCommonRegistrar
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.appmattus.certificatetransparency.internal.loglist.model.v3.State
com.franmontiel.persistentcookiejar.ClearableCookieJar
com.facebook.react.bridge.JavaScriptModule
app.notifee.core.NotificationReceiverActivity
com.facebook.react.bridge.Inspector
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.bridge.CatalystInstance
com.horcrux.svg.RenderableViewManager$FeBlendManager
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener
com.franmontiel.persistentcookiejar.cache.SetCookieCache
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.gantix.JailMonkey.JailMonkeyModule
com.facebook.react.bridge.WritableMap
com.facebook.fbreact.specs.NativeSourceCodeSpec
kotlinx.serialization.json.JsonObject
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.bridge.JavaMethodWrapper$3
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.facebook.react.common.mapbuffer.WritableMapBuffer
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.horcrux.svg.RenderableViewManager$PathViewManager
com.facebook.react.bridge.PromiseImpl
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.jni.HybridClassBase
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.aheaditec.talsec_security.security.api.Natives
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2
com.facebook.react.bridge.JSIModule
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener
com.facebook.react.bridge.JSExceptionHandler
com.facebook.jni.annotations.DoNotStrip
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.fbreact.specs.NativeImageEditorSpec
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8
com.facebook.react.bridge.Inspector$Page
androidx.appcompat.widget.ViewStubCompat
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
androidx.startup.InitializationProvider
com.facebook.react.devsupport.JSCHeapCapture
com.facebook.react.fabric.mounting.SurfaceMountingManager
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager
com.facebook.react.bridge.NativeMap
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$Companion
com.facebook.react.fabric.CoreComponentsRegistry
com.swmansion.rnscreens.ScreenStackFragment
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase
androidx.fragment.app.FragmentManager$6
androidx.work.impl.workers.ConstraintTrackingWorker
com.swmansion.reanimated.NodesManager$1
com.facebook.react.fabric.mounting.MountItemDispatcher
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef$volatile
com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorInfoProviderImpl$getStatus$1: com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorInfoProviderImpl this$0
com.rnfs.RNFSManager: java.lang.String RNFSExternalStorageDirectoryPath
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode MAIN_ORDERED
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState state
com.swmansion.reanimated.NodesManager$3: boolean val$trySynchronously
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
kotlin.enums.EnumEntriesSerializationProxy: long serialVersionUID
androidx.webkit.internal.WebViewFeatureInternal: int mOsVersion
com.facebook.react.fabric.interop.InteropEventEmitter: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcherOverride
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: kotlinx.serialization.KSerializer[] $childSerializers
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
kotlin.collections.builders.SetBuilder: kotlin.collections.builders.MapBuilder backing
androidx.work.impl.WorkerUpdater$enqueueUniquelyNamedPeriodic$enqueueNew$1: androidx.work.impl.WorkManagerImpl $this_enqueueUniquelyNamedPeriodic
com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl$extractSystemSettingsParam$1: com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl this$0
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: android.content.SharedPreferences mSharedPreferences
org.wonday.pdf.PdfManager: java.lang.String REACT_CLASS
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] elements
com.swmansion.reanimated.NodesManager$1: int val$viewTag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus$volatile
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int code
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.lang.String version
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mCallbacks
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderEntries entriesView
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] $VALUES
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode BACKGROUND
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] quaternion
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeColorMatrix
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mViewTagsToHide
io.legere.pdfiumandroid.PdfPage: java.util.Map pageMap
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$regionCountrySignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
app.notifee.core.model.NotificationAndroidModel: android.os.Bundle mNotificationAndroidBundle
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
androidx.webkit.internal.WebViewFeatureInternal: java.lang.String mInternalFeatureValue
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.reflect.Constructor $constructor
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.util.List email
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.GuardedFrameCallback mChoreographerCallback
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.horcrux.svg.RenderableViewManager$LineViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mTagSetForStoppedSurfaceLegacy
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: boolean mCanCoalesceEvent
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.util.List operators
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int mSurfaceId
com.horcrux.svg.RenderableView: int CAP_ROUND
kotlin.collections.builders.ListBuilder: boolean isReadOnly
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$dataRoamingEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.horcrux.svg.RenderableViewManager$FeOffsetManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.swmansion.rnscreens.ScreensModule: java.util.concurrent.atomic.AtomicBoolean isActiveTransition
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$dateFormatSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mEnteringViewTargetValues
com.horcrux.svg.RenderableView: int mCurrentColor
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
kotlinx.serialization.SealedClassSerializer$descriptor$2$1: kotlinx.serialization.SealedClassSerializer this$0
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String TAG
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.rnfs.RNFSManager: java.lang.String RNFSTemporaryDirectoryPath
kotlinx.serialization.internal.EnumSerializer$descriptor$2: kotlinx.serialization.internal.EnumSerializer this$0
io.legere.pdfiumandroid.PdfiumCore: java.lang.Object lock
com.horcrux.svg.SvgView: java.lang.Runnable toDataUrlTask
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
okhttp3.internal.connection.RealConnection$connectTls$2: okhttp3.internal.connection.RealConnection this$0
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler mReactJsExceptionHandler
kotlin.text.Regex: java.util.Set _options
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.time.Instant endDate
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isCatalystInstanceDestroyed
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState OPEN
com.facebook.react.fabric.LongStreamingStats$1: com.facebook.react.fabric.LongStreamingStats this$0
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.uimanager.IllegalViewOperationException: android.view.View mView
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList targetKeysToTransform
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$fontScaleSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String NAME
io.legere.pdfiumandroid.PdfDocument: int FPDF_REMOVE_SECURITY
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.swmansion.reanimated.NodesManager$1: java.lang.String val$commandId
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsDoneCreatingModule
com.swmansion.reanimated.NodesManager$1: com.facebook.react.bridge.ReadableArray val$commandArgs
com.gusparis.monthpicker.adapter.RNProps: java.lang.String value
com.horcrux.svg.VirtualView: int CLIP_RULE_EVENODD
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: io.legere.pdfiumandroid.util.AlreadyClosedBehavior IGNORE
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
kotlinx.serialization.json.JsonNull: java.lang.String content
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion$1: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion$1 INSTANCE
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.horcrux.svg.RenderableView: android.graphics.Path$FillType fillRule
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.horcrux.svg.TextProperties$TextDecoration: java.lang.String decoration
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
io.legere.pdfiumandroid.PdfPage: int LEFT
com.freeraspreactnative.FreeraspReactNativeModule: com.aheaditec.talsec_security.security.api.ThreatListener listener
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_LAYOUT
com.rnfs.RNFSManager: java.lang.String RNFSExternalDirectoryPath
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String NAME
com.horcrux.svg.VirtualView: java.util.ArrayList elements
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state$volatile
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithProgress
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TRANSFORM_MATRIX
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.horcrux.svg.FilterRegion: com.horcrux.svg.SVGLength mW
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: android.os.ParcelFileDescriptor $fd
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeFlood
io.legere.pdfiumandroid.PdfDocument$Bookmark: java.lang.String title
com.swmansion.reanimated.CopiedEvent: int targetTag
com.horcrux.svg.RenderableViewManager$TSpanViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.interop.InteropEvent: com.facebook.react.bridge.WritableMap mEventData
com.horcrux.svg.FilterProperties$Units: java.lang.String units
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PADDING
com.horcrux.svg.VirtualView: java.lang.String mDisplay
com.swmansion.reanimated.sensor.ReanimatedSensorListener: com.swmansion.reanimated.nativeProxy.SensorSetter setter
com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorStatus: java.lang.String stringDescription
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGLine
io.invertase.firebase.common.ReactNativeFirebaseModule: io.invertase.firebase.common.TaskExecutorService executorService
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeOffset
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION_PROGRESS
com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl$extractSecureSettingsParam$1: java.lang.String $key
com.horcrux.svg.VirtualViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
kotlin.collections.builders.MapBuilder: int maxProbeDistance
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String cppVersion
app.notifee.core.model.NotificationAndroidActionModel: android.os.Bundle mNotificationAndroidActionBundle
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener this$0
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2: androidx.lifecycle.ViewModelStoreOwner $viewModelStoreOwner
com.swmansion.reanimated.NodesManager$1: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.Executor mBGExecutor
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: io.legere.pdfiumandroid.suspend.PdfiumCoreKt this$0
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
androidx.fragment.app.strictmode.WrongFragmentContainerViolation: android.view.ViewGroup container
com.horcrux.svg.VirtualView: java.lang.String mMarkerMid
com.swmansion.reanimated.layoutReanimation.Snapshot: int height
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_DETAIL_INPUT
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: double $pageY
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ROTATION_VECTOR
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$totalInternalStorageSpaceSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_X
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.facebook.react.animated.EventAnimationDriver: int mViewTag
com.rnfs.RNFSManager: java.lang.String RNFSExternalCachesDirectoryPath
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask: java.util.concurrent.Callable callable
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_DETAIL_PRESS_ACTION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.horcrux.svg.VirtualView: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
kotlin.collections.AbstractCollection$toString$1: kotlin.collections.AbstractCollection this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$Companion Companion
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.horcrux.svg.RenderableViewManager$MaskManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map val$reactModuleInfoMap
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead finalTreeHead
androidx.activity.OnBackPressedDispatcher$2: androidx.activity.OnBackPressedDispatcher this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting$volatile
com.horcrux.svg.VirtualView: android.graphics.Path mMarkerPath
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
com.swmansion.reanimated.layoutReanimation.Snapshot: int width
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGForeignObject
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GYROSCOPE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: kotlin.jvm.functions.Function1 $block
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated$volatile
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: int label
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.horcrux.svg.events.SvgLoadEvent: float height
com.horcrux.svg.RenderableViewManager$RadialGradientManager: java.lang.String REACT_CLASS
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackException: java.lang.Throwable cause
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: java.lang.String sha256RootHash
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object[] $bindArgs
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray stroke
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.reactnativecommunity.checkbox.ReactCheckBoxManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.horcrux.svg.VirtualView: float canvasHeight
io.legere.pdfiumandroid.PdfTextPage: java.util.Map pageMap
kotlinx.coroutines.JobSupport: java.lang.Object _state$volatile
com.facebook.react.config.ReactFeatureFlags: boolean fixStoppedSurfaceTagSetLeak
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricSharedEventPipeline
com.facebook.react.fabric.mounting.MountItemDispatcher: int FRAME_TIME_MS
com.horcrux.svg.SvgView: int mMeetOrSlice
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int EXITING
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
androidx.activity.OnBackPressedDispatcher$4: androidx.activity.OnBackPressedDispatcher this$0
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState OPENING
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_CACHE_DIRECTORY
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode ASYNC
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String author
com.swmansion.reanimated.layoutReanimation.Snapshot: float borderRadius
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: android.graphics.Bitmap $bitmap
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
kotlin.collections.SlidingWindowKt$windowedIterator$1: boolean $partialWindows
com.facebook.react.config.ReactFeatureFlags: boolean enableDefaultAsyncBatchedPriority
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: double $yTolerance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType MAGNETIC_FIELD
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbHeight
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.facebook.imagepipeline.core.ProducerSequenceFactory$localResourceFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.swmansion.gesturehandler.core.GestureHandlerOrchestrator$activateNativeHandlersForView$1$1: com.swmansion.gesturehandler.core.GestureHandler $it
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: int value
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.devsupport.JSException: java.lang.String mStack
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: java.lang.String $password
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_LOCATIONS
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingSubviewCountMap
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadOnDemandFrameTask$run$nearestFrame$1: com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadOnDemandFrameTask this$0
kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.devsupport.interfaces.DevLoadingViewManager mDevLoadingViewManager
androidx.fragment.app.strictmode.FragmentTagUsageViolation: android.view.ViewGroup parentContainer
com.facebook.fresco.animation.bitmap.preparation.BalancedAnimationStrategy$prepareNextOnDemandFrame$onDemandTask$2: com.facebook.fresco.animation.bitmap.preparation.BalancedAnimationStrategy this$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.horcrux.svg.VirtualView: android.graphics.RectF mBox
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int label
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.horcrux.svg.VirtualView: android.graphics.RectF mFillBounds
com.swmansion.reanimated.BuildConfig: java.lang.String REANIMATED_VERSION_JAVA
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: int label
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$Companion Companion
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedElementsLookup
com.freeraspreactnative.models.RNPackageInfo: com.freeraspreactnative.models.RNPackageInfo$Companion Companion
com.freeraspreactnative.models.RNPackageInfo: java.lang.String appName
io.legere.pdfiumandroid.PdfDocument: int FPDF_NO_INCREMENTAL
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFilter
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: int label
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeBlend
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_END
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String NAME
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer INSTANCE
kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.coroutines.CoroutineContext[] $elements
com.facebook.react.config.ReactFeatureFlags: boolean enableCleanParagraphYogaNode
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: int $toIndex
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.facebook.imagepipeline.core.ProducerSequenceFactory$localVideoFileFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.horcrux.svg.RenderableView: int FILL_RULE_NONZERO
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
com.horcrux.svg.RenderableViewManager$PatternManager: java.lang.String REACT_CLASS
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: int $rotate
com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl$extractSystemSettingsParam$1: java.lang.String $key
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.reactnativecommunity.checkbox.ReactCheckBoxManager: java.lang.String REACT_CLASS
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.horcrux.svg.RenderableView: java.util.ArrayList mLastMergedList
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: com.reactcommunity.rndatetimepicker.MaterialDatePickerModule$Companion Companion
com.horcrux.svg.VirtualView: android.graphics.Path mStrokePath
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: int $rotate
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mDisableCleaningForViewTag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.horcrux.svg.VirtualViewManager: android.util.SparseArray mTagToRunnable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: long FRAME_TIME_MS
com.facebook.react.animated.EventAnimationDriver: java.lang.String mEventName
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.facebook.imagepipeline.core.ProducerSequenceFactory$localFileFetchToEncodedMemoryPrefetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$windowAnimationScaleSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
kotlin.collections.EmptyList: long serialVersionUID
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.Long firstUptime
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: android.graphics.RectF $rect
com.fingerprintjs.android.fingerprint.info_providers.PackageManagerDataSourceImpl$getApplicationsList$1: com.fingerprintjs.android.fingerprint.info_providers.PackageManagerDataSourceImpl this$0
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer INSTANCE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.swmansion.reanimated.layoutReanimation.Snapshot: float[] identityMatrix
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: double $x
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.sensor.ReanimatedSensorContainer reanimatedSensorContainer
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $VALUES
com.facebook.react.fabric.ReactNativeConfig: com.facebook.react.fabric.ReactNativeConfig$Companion Companion
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.fabric.ComponentFactory mComponentFactory
kotlinx.serialization.json.JsonNull: kotlinx.serialization.json.JsonNull INSTANCE
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_HEADLESS
com.facebook.react.config.ReactFeatureFlags: boolean calculateTransformedFramesEnabled
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: byte[] $data
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval temporalInterval
com.facebook.react.fabric.FabricUIManager$5: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$touchExplorationEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String NAME
io.legere.pdfiumandroid.PdfDocument$Link: android.graphics.RectF bounds
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: boolean mIsRoot
com.toyberman.RNSslPinningModule: java.lang.String DISABLE_ALL_SECURITY
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessAtomicRef mBridgelessReactContextRef
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: kotlinx.serialization.KSerializer[] $childSerializers
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.swmansion.reanimated.Utils: boolean isChromeDebugger
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: int $charIndex
com.google.android.material.datepicker.DateValidatorPointBackward: android.os.Parcelable$Creator CREATOR
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderKeys keysView
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateFabricEnabled
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.lang.ref.WeakReference mWeakNativeViewHierarchyManager
com.google.gson.JsonIOException: long serialVersionUID
com.facebook.react.runtime.ReactHostImpl: boolean mUseDevSupport
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mReactTag
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String MODULE_NAME
kotlinx.serialization.internal.MapEntrySerializer$descriptor$1: kotlinx.serialization.KSerializer $valueSerializer
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $deviceY
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
io.legere.pdfiumandroid.PdfPageKt: int THREE_BY_THREE
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EXS
com.horcrux.svg.VirtualView: int CLIP_RULE_NONZERO
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_END
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: int label
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String NAME
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: int label
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitterWrapper
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: int $sizeY
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String LOW_POWER_MODE
androidx.fragment.app.strictmode.FragmentReuseViolation: java.lang.String previousFragmentId
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_HEIGHT
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: int $length
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.String $whereClause
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
io.legere.pdfiumandroid.PdfPage: int RIGHT
com.rnfs.RNFSManager: android.util.SparseArray uploaders
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeMerge
kotlinx.serialization.internal.EnumSerializer$descriptor$2: java.lang.String $serialName
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGRect
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: int keyboardHeight
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_LIBRARY_DIRECTORY
com.gusparis.monthpicker.RNMPickerModule: java.lang.String REACT_CLASS
com.facebook.react.fabric.StateWrapperImpl: java.lang.String TAG
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.horcrux.svg.RenderableView: java.lang.String mFilter
com.facebook.react.fabric.FabricUIManager$4: int val$reactTag
io.legere.pdfiumandroid.util.InitLock: java.util.concurrent.Semaphore semaphore
com.dieam.reactnativepushnotification.modules.RNPushNotification: com.dieam.reactnativepushnotification.modules.RNPushNotificationHelper mRNPushNotificationHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String EXPIRATION_DATE_KEY
com.horcrux.svg.TextProperties$AlignmentBaseline: java.lang.String alignment
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: java.lang.String REACT_CLASS
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: kotlinx.serialization.KSerializer[] $childSerializers
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
com.facebook.react.views.view.ReactViewGroup: java.lang.String mOverflow
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.CertificatePinner $certificatePinner
com.horcrux.svg.RenderableView: int JOIN_MITER
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner$Companion Companion
com.facebook.react.fabric.mounting.MountItemDispatcher: int mReDispatchCounter
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String mMarkerName
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String NAME
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MOVIES_DIRECTORY
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$toString$1: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor this$0
okhttp3.Handshake$Companion$get$1: java.util.List $peerCertificatesCopy
kotlinx.serialization.SealedClassSerializer$descriptor$2$1$elementDescriptor$1: kotlinx.serialization.SealedClassSerializer this$0
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.common.DebugServerException: java.lang.String mOriginalMessage
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: okhttp3.HttpUrl url
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task mStartTask
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.util.HashMap sensors
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: java.lang.String NAME
com.facebook.imagepipeline.core.ProducerSequenceFactory$commonNetworkFetchToEncodedMemorySequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer$volatile
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$securityProvidersSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.horcrux.svg.SvgView: android.graphics.Bitmap mBitmap
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$availableLocalesSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String NAME
org.greenrobot.eventbus.EventBusException: long serialVersionUID
com.facebook.react.fabric.FabricUIManager$4: boolean val$blockNativeResponder
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String NAME
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModuleImpl mRNCWebViewModuleImpl
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion $$INSTANCE
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int mCounter
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType UNKNOWN
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: long MAX_TIME_IN_FRAME
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: int $startY
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: com.reactcommunity.rndatetimepicker.MaterialTimePickerModule$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.freeraspreactnative.FreeraspReactNativeModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
kotlinx.serialization.json.JsonNull: kotlin.Lazy $cachedSerializer$delegate
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.facebook.yoga.YogaMeasureMode: int mIntValue
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualViewManager$SVGClass svgClass
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $deviceX
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.fresco.animation.bitmap.preparation.BalancedAnimationStrategy$prepareNextOnDemandFrame$onDemandTask$2: java.lang.Integer $nextFrame
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$transitionAnimationScaleSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: io.legere.pdfiumandroid.PdfWriteCallback $callback
androidx.webkit.internal.WebViewFeatureInternal: java.lang.String mPublicFeatureValue
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion Companion
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvTransform
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType IN
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.google.android.material.datepicker.SingleDateSelector: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.horcrux.svg.VirtualView: android.graphics.Matrix mCTM
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String NAME
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: int label
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: java.util.Map subjectToCaCerts
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGUse
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.swmansion.reanimated.NativeProxy$1: java.lang.ref.WeakReference val$weakLayoutAnimations
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.BuildConfig: java.lang.String BUILD_TYPE
com.horcrux.svg.VirtualView: android.graphics.Region mRegion
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
okio.ByteString: byte[] data
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
com.facebook.react.config.ReactFeatureFlags: boolean enableTextSpannableCache
com.facebook.react.fabric.mounting.MountingManager: int MAX_STOPPED_SURFACE_IDS_LENGTH
app.notifee.core.event.LogEvent: java.lang.String LEVEL_DEBUG
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
kotlinx.serialization.SerializersKt__SerializersKt$serializerByKTypeImpl$contextualSerializer$1: java.util.List $typeArguments
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String NAME
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.horcrux.svg.RenderableView: int FILL_RULE_EVENODD
com.facebook.yoga.YogaPositionType: int mIntValue
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
com.horcrux.svg.SvgView: float mMinX
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$androidVersionSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String NAME
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mCurrentSharedTransitionViews
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mOverflowInset
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_TEMP_DIRECTORY
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_CREATE
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.google.common.base.Optional: long serialVersionUID
com.swmansion.reanimated.BuildConfig: int EXOPACKAGE_FLAGS
com.facebook.react.config.ReactFeatureFlags: boolean enableCloseVisibleGapBetweenPaths
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle$volatile
io.legere.pdfiumandroid.PdfiumCore: java.lang.String TAG
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.SensorManager sensorManager
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: int value
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mRemovedSharedViews
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$_hashCode$2: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor this$0
com.aheaditec.talsec_security.security.api.SuspiciousAppInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $startY
app.notifee.core.event.NotificationEvent: int TYPE_TRIGGER_NOTIFICATION_CREATED
com.horcrux.svg.VirtualView: android.graphics.Path mCachedClipPath
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.Executor mUIExecutor
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
app.notifee.core.event.BlockStateEvent: int TYPE_CHANNEL_BLOCKED
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Address $address
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType PROD
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_X
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.facebook.react.uimanager.events.Event: boolean mInitialized
com.facebook.imagepipeline.core.ProducerSequenceFactory$networkFetchToEncodedMemoryPrefetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: int $startY
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.lang.String name
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
kotlin.collections.builders.MapBuilder: java.lang.Object[] valuesArray
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
com.facebook.react.fabric.LongStreamingStats: java.util.Queue maxHeap
com.facebook.react.runtime.ReactHostImpl: java.util.Set mAttachedSurfaces
com.shreemati.SecurityService.SecurityServiceManager: java.lang.String[] X86_FILES
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.imagepipeline.core.ProducerSequenceFactory$dataFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: io.legere.pdfiumandroid.suspend.PdfPageKt $page
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement this$0
com.swmansion.reanimated.NodesManager$3: java.util.concurrent.Semaphore val$semaphore
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: com.facebook.react.bridge.ReadableArray mCommandArgs
com.horcrux.svg.VirtualView: android.graphics.Path mFillPath
com.facebook.yoga.YogaDisplay: int mIntValue
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: int label
com.horcrux.svg.RenderableView: java.util.ArrayList mAttributeList
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: android.graphics.RectF $clipRect
kotlinx.serialization.PolymorphicSerializer$descriptor$2$1: kotlinx.serialization.PolymorphicSerializer this$0
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager parentViewManager
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
app.notifee.core.model.NotificationAndroidStyleModel: java.lang.String TAG
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mQueueThreadExceptionHandler
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.lang.ref.WeakReference mWeakAndroidUIScheduler
kotlin.collections.builders.MapBuilder: int length
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.MemoryPressureListener mMemoryPressureListener
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: io.legere.pdfiumandroid.suspend.PdfiumCoreKt this$0
com.facebook.react.uimanager.events.Event: int mUniqueID
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: byte[] $data
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.facebook.react.bridge.WritableMap mNativeProps
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String MALWARE_CHANNEL_KEY
kotlin.text.Regex: java.util.regex.Pattern nativePattern
com.facebook.imagepipeline.core.ProducerSequenceFactory$localContentUriFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: java.time.Instant timestamp
kotlin.collections.builders.SerializedMap: long serialVersionUID
com.swmansion.reanimated.NodesManager$3: java.util.Queue val$copiedOperationsQueue
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: int label
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGTSpan
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: double $y
com.horcrux.svg.SvgView: float mVbHeight
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mModuleHolders
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
kotlinx.coroutines.DispatchedCoroutine: int _decision$volatile
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: com.facebook.react.bridge.WritableMap mParams
com.swmansion.reanimated.layoutReanimation.Snapshot: int originXByParent
com.facebook.react.bridge.ReactMarkerConstants: boolean mHasMatchingNameMarker
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String mCommandId
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer INSTANCE
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.horcrux.svg.FilterProperties$EdgeMode: java.lang.String edgeMode
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.time.Instant startInclusive
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.facebook.imagepipeline.core.ProducerSequenceFactory$networkFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.dieam.reactnativepushnotification.modules.RNPushNotification: com.dieam.reactnativepushnotification.modules.RNPushNotificationJsDelivery mJsDelivery
com.google.gson.JsonParseException: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsMountingEnabled
io.legere.pdfiumandroid.PdfDocument: java.lang.String TAG
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: kotlinx.serialization.KSerializer[] $childSerializers
com.BV.LinearGradient.LinearGradientManager: java.lang.String REACT_CLASS
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.dieam.reactnativepushnotification.modules.RNPushNotification: java.security.SecureRandom mRandomNumberGenerator
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$childSerializers$2: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor this$0
com.facebook.react.fabric.interop.InteropEventEmitter: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.toyberman.RNSslPinningModule: com.facebook.react.bridge.ReactApplicationContext reactContext
kotlinx.coroutines.CompletedExceptionally: int _handled$volatile
kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder backing
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ACCELEROMETER
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String SHARED_PREFERENCES_PREFIX
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap mPendingDeletionsForTag
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: int label
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.util.AlreadyClosedBehavior alreadyClosedBehavior
com.facebook.react.fabric.LongStreamingStats: long max
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.RenderableViewManager$ImageViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
org.wonday.pdf.PdfManager: android.content.Context context
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGEllipse
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNPackageInfo packageInfo
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String creationDate
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$fingerprintSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.horcrux.svg.VirtualViewManager: double[] sTransformDecompositionArray
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap toBeRemoved
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: int label
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String SSL_PINNING_ERROR_MESSAGE_EVENT_KEY
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$accessibilityEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.fingerprintjs.android.fingerprint.info_providers.DevicePersonalizationInfoProviderImpl$regionCountry$1: com.fingerprintjs.android.fingerprint.info_providers.DevicePersonalizationInfoProviderImpl this$0
kotlinx.coroutines.internal.ThreadSafeHeap: int _size$volatile
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
kotlin.collections.builders.SerializedCollection: long serialVersionUID
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.NodesManager mNodesManager
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.horcrux.svg.SvgView: java.util.Map mDefinedClipPaths
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.CallbackImpl: int mCallbackId
kotlin.jvm.internal.TypeReference$asString$args$1: kotlin.jvm.internal.TypeReference this$0
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
io.legere.pdfiumandroid.PdfPage: io.legere.pdfiumandroid.PdfDocument doc
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.swmansion.reanimated.NodesManager$2: com.swmansion.reanimated.NodesManager this$0
kotlin.InitializedLazyImpl: java.lang.Object value
com.aheaditec.talsec.security.v0$b: com.aheaditec.talsec.security.v0 a
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: int $startX
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.fingerprintjs.android.fingerprint.device_id_signals.DeviceIdSignalsProvider$gsfIdSignal$2: com.fingerprintjs.android.fingerprint.device_id_signals.DeviceIdSignalsProvider this$0
com.horcrux.svg.RenderableViewManager$FilterManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGClipPath
com.horcrux.svg.RenderableView: int CAP_SQUARE
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
io.legere.pdfiumandroid.PdfDocument: boolean isClosed
com.horcrux.svg.VirtualView: android.graphics.RectF mStrokeBounds
kotlinx.serialization.SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE$1$1: java.util.List $types
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState CLOSED
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: int $startY
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.HashMap initialNotificationMap
io.legere.pdfiumandroid.PdfTextPage: boolean isClosed
com.facebook.yoga.YogaJustify: int mIntValue
com.google.firebase.components.DependencyCycleException: java.util.List componentsInCycle
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: int number_
com.freeraspreactnative.FreeraspReactNativeModule: com.facebook.react.bridge.ReactApplicationContext appReactContext
com.facebook.react.views.view.ReactViewGroup: java.lang.String mBackfaceVisibility
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
com.swmansion.rnscreens.NativeScreensModuleSpec: java.lang.String NAME
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Field mBorderRadiusField
com.facebook.react.config.ReactFeatureFlags: boolean useNativeViewConfigsInBridgelessMode
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.Handshake$Companion$handshake$1: java.util.List $peerCertificatesCopy
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.facebook.react.config.ReactFeatureFlags: boolean excludeYogaFromRawProps
com.rnfs.RNFSManager: java.lang.String RNFSFileTypeRegular
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElements
com.horcrux.svg.SvgView: java.lang.String mAlign
kotlinx.serialization.json.internal.JsonNamesMapKt$serializationNamesIndices$1: kotlinx.serialization.descriptors.SerialDescriptor $this_serializationNamesIndices
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask$volatile
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.reflect.Constructor $constructor
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_X
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
io.legere.pdfiumandroid.suspend.PdfTextPageKt: kotlinx.coroutines.CoroutineDispatcher dispatcher
com.shreemati.SecurityService.SecurityServiceManager: android.hardware.Sensor accelerometer
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: int $screenDpi
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View sourceView
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable mCompletionRunnable
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: char[] $delimiters
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers$volatile
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: int label
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String NAME
com.swmansion.reanimated.ReanimatedModule$1: com.swmansion.reanimated.ReanimatedModule this$0
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.os.Handler sCompletionHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
kotlin.collections.EmptyMap: long serialVersionUID
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: int nextListenerId
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String NAME
kotlin.collections.builders.SerializedCollection: java.util.Collection collection
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.facebook.react.views.view.ReactViewGroup: android.graphics.Path mPath
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutCreateAnimation
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.bridge.ReadableMap mCurrentLocalData
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mIntBufferLen
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
app.notifee.core.event.LogEvent: java.lang.String LEVEL_INFO
com.swmansion.reanimated.CopiedEvent: java.lang.String eventName
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGMask
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$timezoneSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
app.notifee.core.event.LogEvent: java.lang.String LEVEL_ERROR
com.fingerprintjs.android.fingerprint.info_providers.BatteryInfoProviderImpl$batteryTotalCapacity$1: com.fingerprintjs.android.fingerprint.info_providers.BatteryInfoProviderImpl this$0
com.horcrux.svg.RenderableView: android.graphics.Paint$Cap strokeLinecap
com.horcrux.svg.RenderableView: int JOIN_ROUND
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: android.graphics.Rect $coords
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.horcrux.svg.RenderableViewManager$TextPathViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.atomic.AtomicReference mLastUsedActivity
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mRootViewAttached
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
okhttp3.internal.http2.ErrorCode: int httpCode
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInteropForAllTurboModules
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
kotlin.text.Regex$Serialized: int flags
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager viewManager
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String NAME
com.horcrux.svg.SvgView: java.util.Map mDefinedMasks
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.PdfiumCore$Companion Companion
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String keywords
com.swmansion.reanimated.ReanimatedModule$1: java.util.ArrayList val$operations
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int LAYOUT
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView mTextRoot
com.facebook.react.fabric.mounting.MountItemDispatcher: int MAX_TIME_IN_FRAME_FOR_NON_BATCHED_OPERATIONS_MS
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$Companion Companion
com.facebook.react.runtime.JSEngineInstance: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
com.horcrux.svg.SvgView: java.util.Map mDefinedTemplates
com.facebook.react.fabric.mounting.MountItemDispatcher: java.lang.String TAG
com.horcrux.svg.SvgView: float mScale
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler backgroundHandler
com.facebook.react.config.ReactFeatureFlags: boolean enableMountHooks
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_TRANSFORM_MATRIX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_X
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_RADIUS
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mSurfaceId
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: int $startIndex
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.String $sql
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Stack mReactTagsToRemove
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.reflect.Constructor $constructor
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.lang.String TAG
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.Object mCurrentProps
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.facebook.yoga.YogaUnit: int mIntValue
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager mReanimatedNativeHierarchyManager
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
io.legere.pdfiumandroid.PdfDocument$Bookmark: long mNativePtr
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
org.wonday.pdf.PdfManager: boolean $assertionsDisabled
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentLinkedQueue mOnViewAttachItems
com.horcrux.svg.RNSVGRenderableManager: java.lang.String NAME
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitter
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.swmansion.reanimated.nativeProxy.SensorSetter: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mAddedSharedViews
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
androidx.activity.OnBackPressedDispatcher$3: androidx.activity.OnBackPressedDispatcher this$0
com.learnium.RNDeviceInfo.RNDeviceModule: double mLastBatteryLevel
com.gantix.JailMonkey.JailMonkeyModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler mAndroidUIScheduler
com.ReactNativeBlobUtil.ReactNativeBlobUtil: com.ReactNativeBlobUtil.ReactNativeBlobUtilImpl delegate
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: boolean $textMask
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: com.facebook.react.fabric.FabricUIManager this$0
kotlinx.serialization.json.JsonPrimitive: kotlinx.serialization.json.JsonPrimitive$Companion Companion
io.legere.pdfiumandroid.PdfDocumentKt: int MAX_RECURSION
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactLifecycleStateManager mReactLifecycleStateManager
okhttp3.internal.cache.DiskLruCache$Editor$newSink$1$1: okhttp3.internal.cache.DiskLruCache$Editor this$1
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessReactStateTracker mBridgelessReactStateTracker
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_LEVEL
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessAtomicRef mReactInstanceTaskRef
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.UIManagerModule mUIManager
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.runtime.BindingsInstaller: com.facebook.jni.HybridData mHybridData
kotlin.collections.SlidingWindowKt$windowedIterator$1: int label
com.swmansion.reanimated.NodesManager: java.util.concurrent.ConcurrentLinkedQueue mEventQueue
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler mDefaultHardwareBackBtnHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
io.legere.pdfiumandroid.PdfTextPage: io.legere.pdfiumandroid.PdfTextPage$Companion Companion
com.facebook.hermes.intl.LocaleIdTokenizer$LocaleIdSubtagIterationFailed: com.facebook.hermes.intl.LocaleIdTokenizer this$0
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: kotlinx.serialization.KSerializer[] $childSerializers
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View mTransitionContainer
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
io.legere.pdfiumandroid.PdfDocument: int FPDF_INCREMENTAL
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: int value
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.rnfs.RNFSManager: java.lang.String RNFSDownloadDirectoryPath
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.facebook.imagepipeline.core.ProducerSequenceFactory$localContentUriFetchEncodedImageProducerSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] $VALUES
com.horcrux.svg.VirtualView: float[] sRawMatrix
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable mReactBackgroundDrawable
com.dieam.reactnativepushnotification.modules.RNPushNotification: java.lang.String LOG_TAG
com.swmansion.rnscreens.ScreensModule: java.lang.String NAME
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: java.lang.String REACT_CLASS
kotlin.text.Regex$Serialized: java.lang.String pattern
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode MAIN
com.swmansion.reanimated.NodesManager: java.util.List mFrameCallbacks
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: java.lang.ref.WeakReference reactContext
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
androidx.profileinstaller.FileSectionType: long mValue
kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer
com.fingerprintjs.android.fingerprint.info_providers.InputDevicesDataSourceImpl$getInputDeviceData$1: com.fingerprintjs.android.fingerprint.info_providers.InputDevicesDataSourceImpl this$0
kotlinx.serialization.SealedClassSerializer$descriptor$2: kotlinx.serialization.SealedClassSerializer this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.swmansion.reanimated.ReanimatedModule: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.shreemati.SecurityService.SecurityServiceManager: android.hardware.SensorManager sensorManager
com.swmansion.reanimated.NodesManager: double lastFrameTimeMs
kotlin.collections.SlidingWindowKt$windowedIterator$1: int $step
com.facebook.react.fabric.mounting.SurfaceMountingManager: androidx.collection.SparseArrayCompat mTagSetForStoppedSurface
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String subject
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.util.Map mPoints
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_BLOCKED
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginY
com.shreemati.SecurityService.SecurityServiceManager: java.lang.String[] PIPES
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
org.wonday.pdf.PdfManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.horcrux.svg.SvgView: int mCurrentColor
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
kotlinx.serialization.internal.MapEntrySerializer$descriptor$1: kotlinx.serialization.KSerializer $keySerializer
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_COLORS
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.ref.WeakReference mContext
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String mLastBatteryState
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy mNativeProxy
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
androidx.core.view.WindowInsetsAnimationCompat$Callback: android.view.WindowInsets mDispachedInsets
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: int label
com.aheaditec.talsec.security.w2: int a
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.horcrux.svg.RenderableViewManager$DefsViewManager: java.lang.String REACT_CLASS
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: int $startY
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$Companion Companion
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int mModuleId
com.facebook.react.bridge.interop.InteropModuleRegistry: java.util.HashMap supportedModules
com.fingerprintjs.android.fingerprint.info_providers.DeviceSecurityInfoProviderImpl$encryptionStatus$1: com.fingerprintjs.android.fingerprint.info_providers.DeviceSecurityInfoProviderImpl this$0
com.facebook.react.views.view.ReactViewGroup: int ARRAY_CAPACITY_INCREMENT
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_STATE
com.horcrux.svg.TextProperties$FontWeight: java.lang.String weight
kotlinx.serialization.json.internal.WriteMode: char begin
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$fingerprintSensorStatusSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
app.notifee.core.event.BlockStateEvent: int TYPE_APP_BLOCKED
com.horcrux.svg.VirtualViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver receiver
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String PUBLIC_KEY_HASHES_KEY
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_SUSPENDED
com.horcrux.svg.SvgView: boolean mRendered
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname dns
kotlin.jvm.internal.Ref$BooleanRef: boolean element
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: int label
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String HEIGHT
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.util.Queue mPendingEventQueue
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $rotate
com.freeraspreactnative.models.RNPackageInfo: java.lang.String version
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent val$viewEvent
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureNewCreateReloadDestroy
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingLayoutStats
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.ViewGroup parent
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext sMatrixDecompositionContext
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation$volatile
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String FIREBASE_TEST_LAB
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
kotlinx.serialization.json.internal.WriteMode: char end
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.lang.Object[] $this_withIndex
com.horcrux.svg.SvgView: java.util.Map mDefinedFilters
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: int label
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGImage
com.facebook.imagepipeline.core.ProducerSequenceFactory$backgroundLocalContentUriFetchToEncodeMemorySequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: android.graphics.Matrix $matrix
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
app.notifee.core.event.BlockStateEvent: int TYPE_CHANNEL_GROUP_BLOCKED
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: boolean $textMask
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: android.graphics.Bitmap $bitmap
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.util.Map sComponentNames
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvMatrix
app.notifee.core.event.NotificationEvent: int TYPE_ACTION_PRESS
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.fabric.FabricUIManager$4: int val$surfaceId
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: boolean $ignoreCase
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String NAME
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
com.gusparis.monthpicker.adapter.RNActions: java.lang.String value
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$adbEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.rnfs.RNFSManager: java.lang.String RNFSPicturesDirectoryPath
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: int number_
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
com.fingerprintjs.android.fingerprint.info_providers.DevicePersonalizationInfoProviderImpl$availableLocales$1: com.fingerprintjs.android.fingerprint.info_providers.DevicePersonalizationInfoProviderImpl this$0
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.horcrux.svg.SvgView: float mVbWidth
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
kotlin.SafePublicationLazyImpl: java.lang.Object final
com.facebook.react.config.ReactFeatureFlags: boolean enableEarlyScheduledMountItemExecution
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int sHolderCount
kotlinx.serialization.internal.EnumDescriptor$elementDescriptors$2: int $elementsCount
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderValues valuesView
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname$Companion Companion
com.swmansion.reanimated.layoutReanimation.Snapshot: int originYByParent
kotlin.collections.builders.ListBuilder: int offset
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node root
com.fingerprintjs.android.fingerprint.info_providers.DevicePersonalizationInfoProviderImpl$ringtoneSource$1: com.fingerprintjs.android.fingerprint.info_providers.DevicePersonalizationInfoProviderImpl this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer INSTANCE
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.time.Instant endExclusive
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: java.time.Instant timestamp
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$batteryHealthSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.toyberman.RNSslPinningModule: java.util.HashMap cookieStore
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGPath
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_HIDDEN
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
io.legere.pdfiumandroid.util.ConfigKt: io.legere.pdfiumandroid.util.Config pdfiumConfig
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_PROFILING_SETTINGS
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.horcrux.svg.VirtualView: android.graphics.RectF mMarkerBounds
com.swmansion.reanimated.BuildConfig: int REACT_NATIVE_MINOR_VERSION
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationManager
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneBluetoothConnectionReceiver
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String NAME
io.legere.pdfiumandroid.util.Size: int width
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.detectfrida.DetectFridaModule: com.facebook.react.bridge.ReactApplicationContext reactContext
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: int label
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.facebook.react.fabric.LongStreamingStats: java.util.Queue minHeap
io.legere.pdfiumandroid.PdfTextPage: long pagePtr
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener this$1
kotlin.collections.SlidingWindowKt$windowedIterator$1: int I$0
com.horcrux.svg.VirtualView: android.graphics.Matrix mMatrix
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsTryingToCreate
com.swmansion.reanimated.NodesManager$3: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useRuntimeSchedulerAlways
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int mEventType
com.facebook.imagepipeline.decoder.DecodeException: com.facebook.imagepipeline.image.EncodedImage encodedImage
com.facebook.react.config.ReactFeatureFlags: boolean enableBackgroundExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
io.legere.pdfiumandroid.PdfTextPage: int pageIndex
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$textAutoPunctuateSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.fabric.ReactNativeConfig: com.facebook.react.fabric.ReactNativeConfig DEFAULT_CONFIG
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String SSL_PINNING_ERROR_EVENT_NAME
kotlin.SafePublicationLazyImpl: java.lang.Object _value
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int ENTERING
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type componentType
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_TYPE
com.franmontiel.persistentcookiejar.persistence.SerializableCookie: long serialVersionUID
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String NAME
com.facebook.react.runtime.ReactHostImpl: java.util.Set mBeforeDestroyListeners
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mWeakAnimationsManager
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean slowAnimationsEnabled
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceTypeResolver deviceTypeResolver
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
androidx.room.SharedSQLiteStatement$stmt$2: androidx.room.SharedSQLiteStatement this$0
kotlinx.serialization.descriptors.SerialDescriptorImpl$_hashCode$2: kotlinx.serialization.descriptors.SerialDescriptorImpl this$0
io.legere.pdfiumandroid.PdfDocument$PageCount: int count
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.horcrux.svg.VirtualView: boolean mInvertible
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_INSERT
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_PICS_DIRECTORY
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionParent
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type upperBound
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: int number_
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: android.view.View mView
kotlin.UnsafeLazyImpl: java.lang.Object _value
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long mTimeStamp
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String THREAT_CHANNEL_KEY
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider mTurboModuleProvider
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
kotlin.jvm.internal.FunctionReference: int flags
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_DELETE
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$typeParameterDescriptors$2: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor this$0
com.horcrux.svg.VirtualView: android.graphics.Path mPath
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutDeleteAnimation
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.bridge.ReadableMap val$props
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.runtime.ReactHostImpl: java.lang.String TAG
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: int $screenDpi
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: android.graphics.RectF $coords
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer INSTANCE
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.swmansion.reanimated.BuildConfig: boolean DEBUG
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
androidx.activity.OnBackPressedDispatcher$1: androidx.activity.OnBackPressedDispatcher this$0
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PX
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.yoga.YogaEdge: int mIntValue
com.swmansion.reanimated.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType MM
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.freeraspreactnative.FreeraspReactNativeModule: com.freeraspreactnative.FreeraspReactNativeModule$lifecycleListener$1 lifecycleListener
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: int $version
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
io.legere.pdfiumandroid.PdfPage: boolean isClosed
kotlin.jvm.internal.CallableReference: java.lang.String signature
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType logType
com.facebook.react.uimanager.events.Event: int mViewTag
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: int mClipRule
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean initOk
com.facebook.react.fabric.LongStreamingStats: int len
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String NAME
androidx.work.impl.WorkerUpdater$enqueueUniquelyNamedPeriodic$enqueueNew$1: java.lang.String $name
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] $VALUES
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_RADIUS
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE_CENTER
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long mMarkerTime
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
com.swmansion.reanimated.AndroidUIScheduler: java.util.concurrent.atomic.AtomicBoolean mActive
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.horcrux.svg.RNSVGRenderableManager: int DEFAULT_BUFFER_SIZE
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String NAME
io.legere.pdfiumandroid.PdfDocument: java.util.Map pageMap
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner: android.net.http.X509TrustManagerExtensions extensions
kotlinx.serialization.internal.ObjectSerializer$descriptor$2$1: kotlinx.serialization.internal.ObjectSerializer this$0
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
kotlin.collections.builders.MapBuilder: int[] presenceArray
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$procCpuInfoV2Signal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.shreemati.SecurityService.SecurityServiceManager: java.lang.String[] NOX_FILES
io.legere.pdfiumandroid.PdfPage: io.legere.pdfiumandroid.PdfPage$Companion Companion
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
androidx.room.RoomDatabase$endTransaction$1: androidx.room.RoomDatabase this$0
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: int $pageIndex
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.BuildConfig: boolean IS_INTERNAL_BUILD
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionInParentIndex
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String logId
com.facebook.react.fabric.mounting.MountingManager: java.lang.String TAG
io.invertase.notifee.NotifeeApiModule: int NOTIFICATION_TYPE_TRIGGER
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_X
com.facebook.react.uimanager.events.TouchEventType: java.lang.String mJsName
com.horcrux.svg.RenderableView: int JOIN_BEVEL
com.horcrux.svg.SvgPackage: java.util.Map mViewManagers
app.notifee.core.event.NotificationEvent: int TYPE_DELIVERED
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceIdResolver deviceIdResolver
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.events.SvgLoadEvent: java.lang.String EVENT_NAME
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EMS
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGRadialGradient
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: double $xTolerance
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mLastQueriedSurfaceMountingManager
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler mainHandler
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap mTagToViewState
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.shreemati.SecurityService.SecurityServiceManager: java.lang.String[] ANDY_FILES
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.LifecycleEventListener mInitialURLListener
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String WIDTH
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.reactcommunity.rndatetimepicker.DatePickerModule: java.lang.String NAME
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_BORDER_RADII
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
com.horcrux.svg.SvgView: boolean mRemovalTransitionStarted
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String NAME
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] rotation
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithAnimation
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType TEST
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.horcrux.svg.NativeSvgViewModuleSpec: java.lang.String NAME
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.horcrux.svg.VirtualView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: int mReactTag
kotlin.Result: java.lang.Object value
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mModuleCleanupLock
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mViewCommandMountItems
com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl$extractGlobalSettingsParam$1: java.lang.String $key
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: java.lang.String mEventName
kotlin.jvm.internal.FunctionReference: int arity
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer INSTANCE
com.horcrux.svg.SvgView: android.graphics.Canvas mCanvas
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_RADIUS
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed$volatile
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.ReaCompatibility compatibility
com.horcrux.svg.VirtualView: float mScale
com.fingerprintjs.android.fingerprint.device_id_providers.AndroidIdProvider$getAndroidId$1: com.fingerprintjs.android.fingerprint.device_id_providers.AndroidIdProvider this$0
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.NodesManager: java.util.Set uiProps
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer INSTANCE
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.util.List listOfPreviousOperators
kotlin.jvm.internal.CallableReference: java.lang.String name
com.fingerprintjs.android.fingerprint.device_id_providers.GsfIdProvider$getGsfAndroidId$1: com.fingerprintjs.android.fingerprint.device_id_providers.GsfIdProvider this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: int $startX
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateTurboModulesEnabled
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.time.Instant logListTimestamp
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorType sensorType
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter mEventEmitter
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.fingerprintjs.android.fingerprint.Fingerprinter$Version: int intValue
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: kotlin.enums.EnumEntries $ENTRIES
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur$volatile
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.freeraspreactnative.models.RNPackageInfo: java.lang.String installerStore
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.horcrux.svg.VirtualView: double fontSize
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType CM
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: int $startX
com.horcrux.svg.SvgView: boolean mResponsible
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String TAG
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: io.legere.pdfiumandroid.util.AlreadyClosedBehavior EXCEPTION
com.learnium.RNDeviceInfo.DeviceType: java.lang.String value
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureSoftExceptions
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int mNumRetries
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.facebook.react.fabric.FabricUIManager: android.os.Handler mMainThreadHandler
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl$volatile
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.rnfs.RNFSManager: android.util.SparseArray downloaders
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int[] mIntBuffer
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: android.os.ParcelFileDescriptor $fd
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex$volatile
kotlinx.serialization.descriptors.SerialDescriptorImpl$toString$1: kotlinx.serialization.descriptors.SerialDescriptorImpl this$0
kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.jvm.internal.Ref$IntRef $index
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$manufacturerNameSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$codecListSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: boolean $renderAnnot
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModuleStableAPI
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MAIN_BUNDLE
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.horcrux.svg.RenderableViewManager$LinearGradientManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: int mViewTag
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.BuildConfig: java.lang.String BUILD_TYPE
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String title
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.freeraspreactnative.FreeraspReactNativeModule: android.os.HandlerThread backgroundHandlerThread
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String NAME
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.facebook.imagepipeline.core.ProducerSequenceFactory$localContentUriThumbnailFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.horcrux.svg.SvgView$Events: java.lang.String mName
com.fingerprintjs.android.fingerprint.info_providers.CameraInfoProviderImpl$getCameraInfo$1: com.fingerprintjs.android.fingerprint.info_providers.CameraInfoProviderImpl this$0
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
kotlinx.serialization.internal.TripleSerializer$descriptor$1: kotlinx.serialization.internal.TripleSerializer this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.horcrux.svg.VirtualView: java.lang.String mMarkerEnd
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack$volatile
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.horcrux.svg.VirtualView: boolean mResponsible
com.facebook.react.config.ReactFeatureFlags: boolean doNotSwapLeftAndRightOnAndroidInLTR
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$developmentSettingsEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: int label
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mCommitNumber
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mSurfaceId
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useFabricInterop
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_TRANSFORM_MATRIX
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.Map mFabricCommitMarkers
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_OVERFLOW_INSET
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: int $fromIndex
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task mReloadTask
kotlinx.coroutines.InvokeOnCancelling: int _invoked$volatile
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: int value
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: int mValue
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
io.legere.pdfiumandroid.PdfTextPage: java.lang.String TAG
com.facebook.react.fabric.FabricUIManager$1: com.facebook.react.fabric.FabricUIManager this$0
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
com.facebook.react.fabric.LongStreamingStats$2: com.facebook.react.fabric.LongStreamingStats this$0
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGGroup
com.facebook.jni.CppSystemErrorException: int errorCode
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
io.legere.pdfiumandroid.PdfDocument: io.legere.pdfiumandroid.PdfDocument$Companion Companion
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: int $sizeX
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
kotlinx.serialization.json.internal.AbstractJsonTreeEncoder$beginStructure$consumer$1: kotlinx.serialization.json.internal.AbstractJsonTreeEncoder this$0
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: int label
com.horcrux.svg.RenderableView: int vectorEffect
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
com.facebook.imagepipeline.core.ProducerSequenceFactory$localFileFetchEncodedImageProducerSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.swmansion.reanimated.layoutReanimation.Snapshot: int originY
com.facebook.react.uimanager.events.Event: int mSurfaceId
kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder root
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
com.horcrux.svg.SvgView: float mMinY
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: kotlin.Lazy $cachedSerializer$delegate
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.systrace.Systrace$EventScope: char mCode
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: int label
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PT
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.util.ArrayList viewsToSnapshot
okhttp3.CertificatePinner$check$1: java.lang.String $hostname
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_FLAG_MULTIPLE
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.fingerprintjs.android.fingerprint.tools.parsers.CpuInfoParserKt$parseCpuInfo$sectionsOfLines$1: java.util.List $linesWithSections
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.fabric.FabricUIManager$4: com.facebook.react.fabric.FabricUIManager this$0
okhttp3.Handshake$peerCertificates$2: kotlin.jvm.functions.Function0 $peerCertificatesFn
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_STATE
com.rnfs.RNFSManager: java.lang.String RNFSDocumentDirectoryPath
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap payload
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String NAME
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.horcrux.svg.SvgView: android.graphics.Bitmap mCurrentBitmap
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: int $sizeX
com.facebook.yoga.YogaOverflow: int mIntValue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String NAME
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
com.fingerprintjs.android.fingerprint.info_providers.CpuInfoProviderImpl$cpuInfo$1: com.fingerprintjs.android.fingerprint.info_providers.CpuInfoProviderImpl this$0
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.ConcurrentHashMap mSurfaceIdToManager
io.legere.pdfiumandroid.PdfDocument$PageCount: long pagePtr
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
kotlinx.coroutines.DefaultExecutor: int debugStatus
org.wonday.pdf.PdfManager: org.wonday.pdf.PdfView pdfView
com.facebook.react.config.ReactFeatureFlags: boolean unstable_bridgelessArchitectureMemoryPressureHackyBoltsFix
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View view
com.rnfs.RNFSManager: java.lang.String RNFSCachesDirectoryPath
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.events.RCTEventEmitter mCustomEventHandler
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.google.android.gms.common.api.ApiException: com.google.android.gms.common.api.Status mStatus
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: java.time.Instant timestamp
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.facebook.react.turbomodule.core.NativeModuleSoLoader: com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion Companion
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength strokeWidth
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: kotlin.jvm.functions.Function1 $block
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE_DELETE_TREE
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.google.android.datatransport.cct.internal.QosTier: int value
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer INSTANCE
com.facebook.react.fabric.GuardedFrameCallback: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$totalRamSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.swmansion.reanimated.AndroidUIScheduler$1: com.swmansion.reanimated.AndroidUIScheduler this$0
com.horcrux.svg.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next$volatile
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] $VALUES
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeGaussianBlur
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$kernelVersionSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
kotlin.collections.builders.SerializedMap: java.util.Map map
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PC
com.facebook.react.uimanager.events.Event: int sUniqueID
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String SSL_PINNING_ERROR_SERVER_HOSTNAME_EVENT_KEY
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: int label
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: boolean isStatusBarTranslucent
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$inputDevicesV2Signal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$defaultInputMethodSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
io.legere.pdfiumandroid.Logger: io.legere.pdfiumandroid.LoggerInterface logger
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGText
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_HEIGHT
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode[] $VALUES
io.legere.pdfiumandroid.suspend.PdfPageKt: io.legere.pdfiumandroid.PdfPage page
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue$volatile
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.horcrux.svg.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.dieam.reactnativepushnotification.modules.RNPushNotification: java.util.ArrayList IntentHandlers
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.RNInstallReferrerClient installReferrerClient
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: java.lang.Runnable mRunnable
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.views.view.ReactViewManagerWrapper mViewManager
io.legere.pdfiumandroid.suspend.PdfPageKt: kotlinx.coroutines.CoroutineDispatcher dispatcher
com.facebook.react.fabric.FabricUIManager$2: int val$reactTag
io.legere.pdfiumandroid.util.InitLock: boolean isInitialized
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec mEventAnimationDriverMatchSpec
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$lazyDelegate$1: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper this$0
com.swmansion.rnscreens.ModalScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneConnectionReceiver
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$Companion Companion
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
kotlin.collections.builders.ListBuilder: int length
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$isPinSecurityEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.views.view.ReactViewGroup: int mLayoutDirection
kotlinx.serialization.json.JsonArray: kotlinx.serialization.json.JsonArray$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GRAVITY
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
io.legere.pdfiumandroid.suspend.PdfDocumentKt: io.legere.pdfiumandroid.PdfDocument document
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_EVENT_EMITTER
com.facebook.react.runtime.ReactHostImpl: int BRIDGELESS_MARKER_INSTANCE_KEY
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$Companion Companion
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
okhttp3.internal.cache.DiskLruCache$Editor$newSink$1$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.Object mProps
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray fill
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.runtime.ReactHostImpl: int mId
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer
kotlinx.serialization.SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$1$1: java.util.List $types
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
app.notifee.core.event.NotificationEvent: int TYPE_PRESS
io.legere.pdfiumandroid.PdfDocument: long mNativeDocPtr
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGPattern
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.yoga.YogaDirection: int mIntValue
com.horcrux.svg.VirtualView: float canvasWidth
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_DOCUMENT_DIRECTORY
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
kotlin.SynchronizedLazyImpl: java.lang.Object lock
com.facebook.yoga.YogaErrata: int mIntValue
com.google.android.gms.common.api.UnsupportedApiCallException: com.google.android.gms.common.Feature zza
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mCommandId
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String NAME
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String NAME
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: int label
com.horcrux.svg.RenderableView: float fillOpacity
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.github.barteksc.pdfviewer.exception.PageRenderingException: int page
com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadFramePriorityTask$Priority: int value
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$systemApplicationsListSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$screenOffTimeoutSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.rnfs.RNFSManager: java.lang.String RNFSFileTypeDirectory
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String REACT_CLASS
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String NAME
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.reactcommunity.rndatetimepicker.TimePickerModule: java.lang.String NAME
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: int $sizeX
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.fingerprintjs.android.fingerprint.info_providers.GpuInfoProviderImpl$glesVersion$1: com.fingerprintjs.android.fingerprint.info_providers.GpuInfoProviderImpl this$0
com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl$extractGlobalSettingsParam$1: com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl this$0
com.shreemati.SecurityService.SecurityServiceManager$isEmulatorByCpuInfo$1$1: kotlin.jvm.internal.Ref$BooleanRef $isEmulator
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.swmansion.reanimated.AndroidUIScheduler$2: com.swmansion.reanimated.AndroidUIScheduler this$0
app.notifee.core.event.NotificationEvent: int TYPE_DISMISSED
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: int label
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.interop.InteropModuleRegistry mInteropModuleRegistry
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $startX
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String TAG
com.horcrux.svg.VirtualView: android.graphics.Path mClipRegionPath
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGCircle
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean mShouldAnimateLayout
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
okhttp3.TlsVersion: java.lang.String javaName
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$Companion Companion
com.horcrux.svg.SvgView: android.graphics.Matrix mInvViewBoxMatrix
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.aheaditec.talsec.security.a3$a: int b
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
io.legere.pdfiumandroid.PdfPage: long pagePtr
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: kotlinx.serialization.KSerializer[] $childSerializers
com.horcrux.svg.RenderableViewManager$FeCompositeManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.swmansion.reanimated.ReanimatedPackage$1: com.swmansion.reanimated.ReanimatedPackage this$0
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
io.legere.pdfiumandroid.PdfDocument: java.util.Map textPageMap
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int nextSensorId
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: int maximumMergeDelay
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mEnteringViews
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: com.facebook.react.defaults.DefaultNewArchitectureEntryPoint INSTANCE
com.facebook.react.config.ReactFeatureFlags: boolean useNativeState
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: int $startX
com.swmansion.reanimated.NodesManager: java.util.concurrent.atomic.AtomicBoolean mCallbackPosted
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
io.legere.pdfiumandroid.PdfTextPage: io.legere.pdfiumandroid.PdfDocument doc
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $sizeX
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: int $length
com.learnium.RNDeviceInfo.RNDeviceModule: android.view.inputmethod.InputMethodManager inputMethodManager
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mModuleCleanupStarted
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next$volatile
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.toyberman.RNSslPinningModule: okhttp3.OkHttpClient client
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.util.Iterator $iterator
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: java.time.Instant timestamp
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.facebook.react.runtime.BindingsInstaller: com.facebook.react.runtime.BindingsInstaller$Companion Companion
kotlinx.serialization.json.JsonElement: kotlinx.serialization.json.JsonElement$Companion Companion
okio.ByteString: long serialVersionUID
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.State state
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.swmansion.rnscreens.SearchBarView$onAttachedToWindow$1: com.swmansion.rnscreens.SearchBarView this$0
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double interval
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String NAME
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.atomic.AtomicBoolean mMountNotificationScheduled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.facebook.react.runtime.ReactHostImpl: java.util.Collection mReactInstanceEventListeners
com.horcrux.svg.RenderableViewManager$FeBlendManager: java.lang.String REACT_CLASS
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$cameraListSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean mInDispatch
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: int $count
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: int $index
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
com.facebook.imagepipeline.core.ProducerSequenceFactory$networkFetchEncodedImageProducerSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.uimanager.events.Event: long mTimestampMs
com.facebook.react.uimanager.NativeViewHierarchyManager: android.widget.PopupMenu mPopupMenu
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
okhttp3.internal.connection.RouteException: java.io.IOException lastConnectException
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: int $sizeY
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String NAME
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion: kotlin.Lazy androidCertificateChainCleanerFactory$delegate
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mErroneouslyReaddedReactTags
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String creator
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mPreMountItems
com.horcrux.svg.VirtualView: android.graphics.RectF mClientRect
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.NativeSvgRenderableModuleSpec: java.lang.String NAME
androidx.work.impl.WorkerUpdater$enqueueUniquelyNamedPeriodic$enqueueNew$1: androidx.work.WorkRequest $workRequest
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.yoga.YogaAlign: int mIntValue
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
com.horcrux.svg.RenderableViewManager$MarkerManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.Inspector$Page: int mId
app.notifee.core.model.NotificationAndroidStyleModel: android.os.Bundle mNotificationAndroidStyleBundle
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Handshake $unverifiedHandshake
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$encryptionStatusSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: io.legere.pdfiumandroid.PdfiumCore coreInternal
com.horcrux.svg.RenderableView: float strokeOpacity
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: boolean mIsLayoutable
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState UNKNOWN
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String THREAT_CHANNEL_NAME
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$httpProxySignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.sslpublickeypinning.SslPublicKeyPinningModule: boolean isCustomClientBuilderInitialized
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.ComponentFactory mComponentFactory
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map authDomains
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
kotlin.random.Random$Default$Serialized: long serialVersionUID
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: int jsArgCount
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mMostRecentSurfaceMountingManager
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$sdkVersionSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: int label
com.horcrux.svg.VirtualViewManager: double EPSILON
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$0
io.legere.pdfiumandroid.util.Size: int height
kotlinx.serialization.json.JsonArray: java.util.List content
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$glesVersionSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int mReactTag
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.fingerprintjs.android.fingerprint.info_providers.DeviceSecurityInfoProviderImpl$isPinSecurityEnabled$1: com.fingerprintjs.android.fingerprint.info_providers.DeviceSecurityInfoProviderImpl this$0
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$applicationsListSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXT_STORAGE_DIRECTORY
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateConcurrentReactEnabled
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String key
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginX
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.yoga.YogaGutter: int mIntValue
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.react.fabric.mounting.SurfaceMountingManager: int mSurfaceId
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener reanimatedKeyboardEventListener
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mEventType
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.toyberman.RNSslPinningModule: java.lang.String OPT_SSL_PINNING_KEY
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int mReactTag
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: int label
com.horcrux.svg.VirtualView: double M_SQRT1_2l
com.dieam.reactnativepushnotification.modules.RNPushNotification: java.lang.String KEY_TEXT_REPLY
io.legere.pdfiumandroid.PdfiumCore: int mCurrentDpi
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.ReadableMap initialNotification
kotlin.enums.EnumEntriesList: java.lang.Enum[] entries
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: io.legere.pdfiumandroid.suspend.PdfDocumentKt this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jsiReturnKind
kotlin.collections.builders.MapBuilder: java.lang.Object[] keysArray
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.gusparis.monthpicker.RNMPickerModule: boolean $assertionsDisabled
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: int label
com.horcrux.svg.SvgView: java.util.Map mDefinedMarkers
kotlinx.serialization.MissingFieldException: java.util.List missingFields
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$inputDevicesSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.toyberman.RNSslPinningModule: java.lang.String RESPONSE_TYPE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList currentKeysToTransform
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: int label
com.horcrux.svg.RenderableViewManager$GroupViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mObjBufferLen
kotlin.collections.builders.MapBuilder: int hashShift
com.google.firebase.messaging.SendException: int errorCode
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: kotlin.enums.EnumEntries $ENTRIES
com.swmansion.rnscreens.ScreensModule: com.swmansion.rnscreens.ScreensModule$Companion Companion
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: com.facebook.react.bridge.ReadableArray mCommandArgs
com.horcrux.svg.VirtualView: boolean mCTMInvertible
androidx.work.impl.WorkerUpdater$enqueueUniquelyNamedPeriodic$enqueueNew$1: androidx.work.impl.OperationImpl $operation
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.LoggerInterface logger
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node header
okhttp3.Protocol: java.lang.String protocol
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String producer
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View targetView
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.String $sql
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.rnfs.RNFSManager: java.lang.String MODULE_NAME
kotlinx.serialization.PolymorphicSerializer$descriptor$2: kotlinx.serialization.PolymorphicSerializer this$0
kotlinx.serialization.internal.ClassValueCache$get$$inlined$getOrSet$1: kotlin.reflect.KClass $key$inlined
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] orientation
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback mRemoveDeleteTreeUIFrameCallback
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_NON_SCALING_STROKE
app.notifee.core.event.NotificationEvent: int TYPE_FG_ALREADY_EXIST
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: java.lang.String NAME
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.yoga.YogaWrap: int mIntValue
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.FabricComponents: java.util.Map sComponentNames
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_CONSOLE_PATCH_SETTINGS
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: io.legere.pdfiumandroid.util.AlreadyClosedBehavior[] $VALUES
com.facebook.react.fabric.interop.InteropEvent: java.lang.String mName
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGMarker
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PERCENTAGE
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long mCommitNumber
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: int $drawSizeX
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex$volatile
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: java.lang.String REACT_CLASS
com.horcrux.svg.VirtualViewManager: java.lang.String mClassName
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData hybridData
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: java.lang.String $password
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorListener listener
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: int $sizeY
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task mDestroyTask
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.fabric.ReactNativeConfig$Companion: com.facebook.react.fabric.ReactNativeConfig$Companion $$INSTANCE
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGFeComposite
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean SHOW_CHANGED_VIEW_HIERARCHIES
com.horcrux.svg.FilterRegion: com.horcrux.svg.SVGLength mX
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: java.time.Instant timestamp
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_AFFECTED_NODES
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
com.horcrux.svg.FilterRegion: com.horcrux.svg.SVGLength mH
io.legere.pdfiumandroid.PdfDocument$Link: java.lang.Integer destPageIdx
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: int $drawSizeY
com.horcrux.svg.RenderableView: float strokeDashoffset
kotlinx.serialization.internal.EnumDescriptor$elementDescriptors$2: kotlinx.serialization.internal.EnumDescriptor this$0
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: boolean $isNewCoroutine
kotlin.Result$Failure: java.lang.Throwable exception
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState$volatile
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.lang.String TAG
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.horcrux.svg.RenderableViewManager$FeFloodManager: java.lang.String REACT_CLASS
com.horcrux.svg.RenderableView: com.horcrux.svg.RenderableView mCaller
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.shreemati.SecurityService.SecurityServiceManager: java.lang.String[] GENY_FILES
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean privateBridgelessEnabled
kotlin.Pair: java.lang.Object second
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int mSurfaceId
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
kotlin.collections.EmptySet: long serialVersionUID
kotlin.collections.builders.MapBuilder: boolean isReadOnly
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot targetViewSnapshot
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.rnfs.RNFSManager: java.lang.String RNFSDocumentDirectory
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: int MAX_SIGNERS
com.horcrux.svg.FilterProperties$FeCompositeOperator: java.lang.String type
kotlin.collections.builders.MapBuilder: int size
com.freeraspreactnative.models.RNPackageInfo: java.lang.String packageName
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
kotlin.SynchronizedLazyImpl: java.lang.Object _value
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion Companion
com.freeraspreactnative.models.RNPackageInfo: java.lang.String appIcon
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: int label
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
okhttp3.CertificatePinner$check$1: okhttp3.CertificatePinner this$0
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManagerImpl mRNCWebViewManagerImpl
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength[] strokeDasharray
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType[] $VALUES
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.CopyOnWriteArrayList mStoppedSurfaceIds
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$1
io.invertase.notifee.NotifeeApiModule: int NOTIFICATION_TYPE_ALL
com.horcrux.svg.RenderableViewManager$RectViewManager: java.lang.String REACT_CLASS
okhttp3.CertificatePinner$check$1: java.util.List $peerCertificates
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String NAME
com.imagepicker.ImagePickerModule: com.imagepicker.ImagePickerModuleImpl imagePickerModuleImpl
app.notifee.core.event.LogEvent: java.lang.String LEVEL_VERBOSE
kotlin.jvm.internal.CallableReference: boolean isTopLevel
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_DETAIL
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView svgView
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.horcrux.svg.VirtualView: java.lang.String mMask
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_DISABLE_ANIMATIONS
com.horcrux.svg.RenderableViewManager$FeMergeManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.imagepipeline.core.ProducerSequenceFactory$qualifiedResourceFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.toyberman.RNSslPinningModule: java.lang.String KEY_NOT_ADDED_ERROR
com.facebook.react.fabric.FabricUIManager$3: com.facebook.react.fabric.FabricUIManager this$0
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: int $rectIndex
io.legere.pdfiumandroid.Logger: io.legere.pdfiumandroid.Logger INSTANCE
com.swmansion.reanimated.NodesManager: java.util.Set nativeProps
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_END_POINT
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String NAME
com.horcrux.svg.RenderableView: java.util.ArrayList mPropList
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: int label
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mMountItems
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
kotlinx.serialization.internal.PairSerializer$descriptor$1: kotlinx.serialization.KSerializer $keySerializer
kotlinx.serialization.internal.PairSerializer$descriptor$1: kotlinx.serialization.KSerializer $valueSerializer
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingDiffStats
com.swmansion.reanimated.NodesManager: boolean mTryRunBatchUpdatesSynchronously
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String methodName
com.facebook.react.fabric.FabricSoLoader: boolean sDidInit
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInterop
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.imagepipeline.core.ProducerSequenceFactory$backgroundLocalFileFetchToEncodeMemorySequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
androidx.room.RoomDatabase$beginTransaction$1: androidx.room.RoomDatabase this$0
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.google.firebase.installations.FirebaseInstallationsException: com.google.firebase.installations.FirebaseInstallationsException$Status status
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mIsStopped
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.horcrux.svg.RenderableViewManager$UseViewManager: java.lang.String REACT_CLASS
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.JSEngineResolutionAlgorithm mJSEngineResolutionAlgorithm
com.horcrux.svg.RenderableViewManager$EllipseViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mReattachedViews
com.google.gson.internal.LinkedTreeMap: int modCount
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext reactContext
io.legere.pdfiumandroid.PdfPage: java.lang.String TAG
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: kotlinx.serialization.KSerializer[] $childSerializers
com.horcrux.svg.VirtualView: java.lang.String mMarkerStart
com.horcrux.svg.VirtualView: java.lang.String mName
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
kotlin.collections.builders.ListBuilder: java.lang.Object[] array
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.horcrux.svg.RNSVGRenderableManager: int EOF
com.detectfrida.DetectFridaModule: com.detectfrida.DetectFridaModule$Companion Companion
okhttp3.internal.connection.RouteException: java.io.IOException firstConnectException
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: int label
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Object[] $whereArgs
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: int label
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String TAG
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String mComponent
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String NAME
io.legere.pdfiumandroid.PdfDocument$Bookmark: java.util.List children
app.notifee.core.Notifee: int REQUEST_CODE_NOTIFICATION_PERMISSION
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.facebook.react.runtime.ReactHostImpl: android.content.Context mContext
com.horcrux.svg.FilterProperties$FeColorMatrixType: java.lang.String type
com.facebook.soloader.MinElf$ISA: java.lang.String value
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.horcrux.svg.SvgView: boolean mInvertible
kotlin.text.Regex$Serialized: long serialVersionUID
app.notifee.core.model.NotificationAndroidPressActionModel: android.os.Bundle mNotificationAndroidPressActionBundle
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingBatchExecutionStats
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas resultGuardian
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: java.lang.String value
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_X
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String NAME
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: int $index
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: int label
com.aheaditec.talsec.security.a3$a: int a
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mReactTag
com.detectfrida.DetectFridaModule: com.detectfrida.util.CheckTask mTask
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: int $drawSizeX
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PROPS
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.common.GestureHandlerStateManager gestureHandlerStateManager
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
kotlinx.serialization.internal.ObjectSerializer$descriptor$2: kotlinx.serialization.internal.ObjectSerializer this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$endButtonBehaviourSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer INSTANCE
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE
com.horcrux.svg.VirtualView: float mOpacity
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: int $drawSizeY
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.horcrux.svg.SvgViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: kotlinx.coroutines.CoroutineDispatcher dispatcher
com.horcrux.svg.VirtualView: java.lang.String mClipPath
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.BatchEventDispatchedListener mBatchEventDispatchedListener
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
kotlinx.serialization.internal.EnumDescriptor$elementDescriptors$2: java.lang.String $name
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: java.util.List val$mountItems
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: int label
com.horcrux.svg.VirtualView: double canvasDiagonal
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.horcrux.svg.SvgViewModule: java.lang.String NAME
com.horcrux.svg.FilterProperties$FeBlendMode: java.lang.String mode
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.imagepipeline.core.ProducerSequenceFactory$localAssetFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
kotlin.collections.builders.MapBuilder: int modCount
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.fingerprintjs.android.fingerprint.device_id_signals.DeviceIdSignalsProvider$androidIdSignal$2: com.fingerprintjs.android.fingerprint.device_id_signals.DeviceIdSignalsProvider this$0
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.swmansion.reanimated.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.util.List logs
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$procCpuInfoSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSnapshotRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int mSurfaceId
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_Y
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: int label
com.horcrux.svg.events.SvgLoadEvent: java.lang.String uri
com.swmansion.reanimated.sensor.ReanimatedSensorType: int type
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.google.gson.internal.LinkedTreeMap: int size
com.facebook.react.fabric.BindingImpl: com.facebook.jni.HybridData mHybridData
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$rttCallingModeSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: boolean $renderAnnot
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int mReactTag
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
io.legere.pdfiumandroid.PdfDocument$Bookmark: long pageIdx
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext mThemedReactContext
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingViews
kotlinx.serialization.json.JsonObject: kotlinx.serialization.json.JsonObject$Companion Companion
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: int $fromIndex
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: kotlinx.serialization.KSerializer[] $childSerializers
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: int treeSize
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: kotlinx.serialization.KSerializer[] $childSerializers
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer INSTANCE
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.learnium.RNDeviceInfo.RNDeviceModule: boolean mLastPowerSaveState
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String INCLUDE_SUBDOMAINS_KEY
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String modDate
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState CLOSING
io.legere.pdfiumandroid.util.ConfigKt$WhenMappings: int[] $EnumSwitchMapping$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: kotlin.Lazy $cachedSerializer$delegate
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager mSharedTransitionManager
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider mLegacyModuleProvider
com.freeraspreactnative.exceptions.TalsecException: java.lang.Exception ex
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: kotlinx.serialization.KSerializer[] $childSerializers
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
app.notifee.core.event.LogEvent: java.lang.String LEVEL_WARN
com.facebook.react.bridge.ReactMarker: java.util.Queue sNativeReactMarkerQueue
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap cleanerCallback
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: int value
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String NAME
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.runtime.JSTimerExecutor: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: java.lang.String REACT_CLASS
kotlinx.serialization.json.internal.JsonNamesMapKt$serializationNamesIndices$1: kotlinx.serialization.json.JsonNamingStrategy $strategy
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingTransactionEndStats
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$coresCountSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.horcrux.svg.VirtualView: android.graphics.Region mMarkerRegion
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String NAME
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.swmansion.reanimated.sensor.ReanimatedSensorListener: android.view.Display display
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
kotlin.collections.builders.SerializedCollection: int tag
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String NAME
com.facebook.react.config.ReactFeatureFlags: boolean reduceDeleteCreateMutationLayoutAnimation
kotlin.jvm.internal.Ref$IntRef: int element
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type lowerBound
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
io.legere.pdfiumandroid.PdfPage: int TOP
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.animated.gif.GifImage: long mNativeContext
com.facebook.animated.gif.GifFrame: long mNativeContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.horcrux.svg.RenderableView: com.horcrux.svg.RenderableView contextElement
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2 INSTANCE
com.facebook.react.devsupport.DevServerHelper$BundleType: java.lang.String mTypeID
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.VirtualView: android.graphics.Region mClipRegion
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
com.facebook.react.views.image.ReactImageView: float mBorderRadius
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$modelNameSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.fresco.ui.common.VisibilityState: int value
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.List mDevToolsReactPerfLoggerListeners
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String description
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long mMaxAnimationDuration
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder$volatile
kotlin.jvm.internal.Lambda: int arity
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_USE_ANGLE
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_VISIBLE
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.Sensor sensor
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mSurfaceId
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGDefs
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.fingerprintjs.android.fingerprint.info_providers.PackageManagerDataSourceImpl$getSystemApplicationsList$1: com.fingerprintjs.android.fingerprint.info_providers.PackageManagerDataSourceImpl this$0
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events EVENT_DATA_URL
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
com.facebook.react.runtime.ReactHostImpl: boolean mAllowPackagerServerAccess
kotlin.collections.builders.MapBuilder: int[] hashArray
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_Y
com.freeraspreactnative.FreeraspReactNativeModule: com.freeraspreactnative.FreeraspReactNativeModule$Companion Companion
com.horcrux.svg.RenderableViewManager$SymbolManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: int mEventCategory
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: int $startX
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvCTM
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$defaultLanguageSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.fingerprintjs.android.fingerprint.info_providers.MemInfoProviderImpl$totalRAM$1: com.fingerprintjs.android.fingerprint.info_providers.MemInfoProviderImpl this$0
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback mFrameCallback
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: java.util.HashMap listeners
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingCommitStats
com.swmansion.rnscreens.ModalScreenViewManager: com.swmansion.rnscreens.ModalScreenViewManager$Companion Companion
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGTextPath
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountingManager mMountingManager
kotlinx.serialization.internal.ObjectSerializer$descriptor$2: java.lang.String $serialName
com.google.gson.internal.LinkedTreeMap: java.util.Comparator comparator
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneWiredConnectionReceiver
com.swmansion.reanimated.sensor.ReanimatedSensor: int interval
com.facebook.react.fabric.FabricUIManager$4: int val$initialReactTag
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$KeySet keySet
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.MemoryPressureRouter mMemoryPressureRouter
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.Object[] mObjBuffer
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
io.legere.pdfiumandroid.PdfPage: int BOTTOM
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation mUIImplementation
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String FOREGROUND_NOTIFICATION_TASK_KEY
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.events.SvgLoadEvent: float width
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.lang.String name
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGLinearGradient
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.ComponentNameResolverManager mComponentNameResolverManager
com.swmansion.reanimated.NodesManager$4: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.String $table
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$query$cursorFactory$1: androidx.sqlite.db.SupportSQLiteQuery $query
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$abiTypeSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.rnfs.IORejectionException: java.lang.String code
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$alarmAlertPathSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$time12Or24Signal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
androidx.activity.OnBackPressedDispatcher$5: androidx.activity.OnBackPressedDispatcher this$0
com.fingerprintjs.android.fingerprint.info_providers.SensorDataSourceImpl$sensors$1: com.fingerprintjs.android.fingerprint.info_providers.SensorDataSourceImpl this$0
kotlinx.coroutines.EventLoopImplBase: int _isCompleted$volatile
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_WIDTH
kotlinx.serialization.json.internal.TreeJsonEncoderKt$writeJson$encoder$1: kotlin.jvm.internal.Ref$ObjectRef $result
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer INSTANCE
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.atomic.AtomicReference mActivity
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.freeraspreactnative.models.RNSuspiciousAppInfo: java.lang.String reason
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean mInitialized
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
kotlin.collections.SlidingWindowKt$windowedIterator$1: boolean $reuseBuffer
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.horcrux.svg.SvgView: java.util.Map mDefinedBrushes
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
com.horcrux.svg.RenderableView: java.util.ArrayList mOriginProperties
com.fingerprintjs.android.fingerprint.info_providers.CodecInfoProviderImpl$codecsList$1: com.fingerprintjs.android.fingerprint.info_providers.CodecInfoProviderImpl this$0
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.fingerprintjs.android.fingerprint.info_providers.MemInfoProviderImpl$totalInternalStorageSpace$1: com.fingerprintjs.android.fingerprint.info_providers.MemInfoProviderImpl this$0
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: io.legere.pdfiumandroid.suspend.PdfiumCoreKt this$0
com.detectfrida.DetectFridaModule: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
com.facebook.yoga.YogaFlexDirection: int mIntValue
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: int label
com.facebook.react.runtime.ReactHostImpl: java.util.concurrent.atomic.AtomicInteger mCounter
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
kotlin.collections.SlidingWindowKt$windowedIterator$1: int $size
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType NUMBER
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: double $pageX
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: int label
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.horcrux.svg.RenderableView: java.util.regex.Pattern regex
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String NAME
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: int $conflictAlgorithm
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: int label
com.fingerprintjs.android.fingerprint.info_providers.CpuInfoProviderImpl$cpuInfoV2$1: com.fingerprintjs.android.fingerprint.info_providers.CpuInfoProviderImpl this$0
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double lastRead
com.facebook.react.fabric.LongStreamingStats: double streamingAverage
com.facebook.imagepipeline.core.ProducerSequenceFactory$localImageFileFetchSequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: kotlinx.serialization.KSerializer[] $childSerializers
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule mUIManager
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String NOTIFICATION_EVENT_KEY
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: int $rotate
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.facebook.react.common.JavascriptException: java.lang.String extraDataAsJson
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: java.lang.String value
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev$volatile
com.google.android.gms.common.GooglePlayServicesManifestException: int zza
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNSuspiciousAppInfo$Companion Companion
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: io.legere.pdfiumandroid.suspend.PdfTextPageKt this$0
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: io.legere.pdfiumandroid.suspend.PdfiumCoreKt this$0
io.legere.pdfiumandroid.PdfDocument$Link: java.lang.String uri
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode POSTING
com.freeraspreactnative.FreeraspReactNativeModule: boolean talsecStarted
kotlin.enums.EnumEntriesSerializationProxy: java.lang.Class c
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_START
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String NAME
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot sourceViewSnapshot
com.facebook.react.modules.core.ReactChoreographer$CallbackType: int mOrder
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXTERNAL_DIRECTORY
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion$1: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion$1 INSTANCE
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: int label
com.facebook.react.config.ReactFeatureFlags: boolean reduceDeleteCreateMutation
com.facebook.react.config.ReactFeatureFlags: boolean enableClonelessStateProgression
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mContext
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: int $screenDpi
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.google.android.material.datepicker.CompositeDateValidator: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.facebook.fresco.ui.common.ImageLoadStatus: int value
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$2
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.freeraspreactnative.exceptions.TalsecException: java.lang.String code
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
io.legere.pdfiumandroid.PdfPage: int pageIndex
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
com.facebook.react.turbomodule.core.NativeModuleSoLoader: boolean isSoLibraryLoaded
com.facebook.react.fabric.mounting.MountItemDispatcher: long mBatchedExecutionTime
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutUpdateAnimation
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener mItemDispatchListener
com.horcrux.svg.RenderableViewManager$PathViewManager: java.lang.String REACT_CLASS
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.react.runtime.ReactHostImpl: boolean DEV
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: int label
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
kotlinx.serialization.internal.ClassValueCache$get$$inlined$getOrSet$1: kotlinx.serialization.internal.ClassValueCache this$0
com.horcrux.svg.BuildConfig: boolean DEBUG
com.facebook.react.runtime.ReactInstance: com.facebook.react.uimanager.UIConstantsProviderManager mUIConstantsProviderManager
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState val$viewState
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: int $startIndex
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.facebook.react.bridge.ReactApplicationContext mContext
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.facebook.react.fabric.mounting.MountItemDispatcher: long mRunStartTime
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray mLayoutHandlers
com.horcrux.svg.VirtualView: android.graphics.Region mStrokeRegion
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactContext mContext
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.util.Config config
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_Y
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
com.facebook.yoga.YogaLogLevel: int mIntValue
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackException: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName callbackName
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: android.graphics.RectF mClipBounds
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.List transformMatrix
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: int $toIndex
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbWidth
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_DEFAULT
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_Y
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
com.horcrux.svg.RenderableView: android.graphics.Paint$Join strokeLinejoin
io.legere.pdfiumandroid.suspend.PdfDocumentKt: kotlinx.coroutines.CoroutineDispatcher dispatcher
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: int $sizeY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.fabric.SurfaceHandlerBinding: int NO_SURFACE_ID
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGSymbol
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$batteryFullCapacitySignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$ringtoneSourceSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadImpl messageQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
com.horcrux.svg.RenderableView: float strokeMiterlimit
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask: com.google.common.util.concurrent.TrustedListenableFutureTask this$0
com.swmansion.reanimated.AndroidUIScheduler: java.lang.Runnable mUIThreadRunnable
io.invertase.notifee.NotifeeApiModule: int NOTIFICATION_TYPE_DISPLAYED
kotlinx.serialization.json.JsonObject: java.util.Map content
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String moduleName
com.horcrux.svg.SvgView: android.graphics.Paint mPaint
com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl$extractSecureSettingsParam$1: com.fingerprintjs.android.fingerprint.info_providers.SettingsDataSourceImpl this$0
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.lang.ref.WeakReference reactContext
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_Y
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.swmansion.reanimated.NodesManager: java.util.Queue mOperationsInBatch
com.facebook.react.views.view.ReactViewGroup: int DEFAULT_BACKGROUND_COLOR
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.imagepipeline.core.ProducerSequenceFactory$backgroundNetworkFetchToEncodedMemorySequence$2: com.facebook.imagepipeline.core.ProducerSequenceFactory this$0
com.swmansion.rnscreens.ScreensModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
kotlin.Pair: java.lang.Object first
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData mHybridData
com.sslpublickeypinning.SslPublicKeyPinningModule: okhttp3.CertificatePinner certificatePinner
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.util.InitLock isReady
androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment fragment
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$textAutoReplaceEnabledSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
com.horcrux.svg.VirtualView: com.horcrux.svg.GlyphContext glyphContext
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: int number_
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: java.time.Instant timestamp
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
kotlinx.serialization.SealedClassSerializer$descriptor$2: java.lang.String $serialName
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$Companion Companion
com.horcrux.svg.RenderableViewManager$CircleViewManager: java.lang.String REACT_CLASS
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: int $startY
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.fingerprintjs.android.fingerprint.device_id_providers.MediaDrmIdProvider$getMediaDrmId$1: com.fingerprintjs.android.fingerprint.device_id_providers.MediaDrmIdProvider this$0
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.horcrux.svg.RenderableView: int CAP_BUTT
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_Y
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_START_POINT
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: int label
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.toyberman.RNSslPinningModule: okhttp3.CookieJar cookieJar
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$EntrySet entrySet
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
app.notifee.core.model.NotificationAndroidModel: java.lang.String TAG
com.google.common.util.concurrent.InterruptibleTask$Blocker: com.google.common.util.concurrent.InterruptibleTask task
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
com.facebook.react.fabric.StateWrapperImpl: boolean mDestroyed
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_WIDTH
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.swmansion.rnscreens.ScreensModule: int topScreenId
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.gusparis.monthpicker.RNMPickerModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
com.facebook.fresco.animation.bitmap.preparation.BalancedAnimationStrategy$prepareNextOnDemandFrame$onDemandTask$1: com.facebook.fresco.animation.bitmap.preparation.BalancedAnimationStrategy this$0
com.swmansion.reanimated.layoutReanimation.Snapshot: int originX
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: com.facebook.react.fabric.FabricUIManager this$0
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: android.view.Surface $surface
com.horcrux.svg.VirtualViewManager: android.util.SparseArray mTagToRenderableView
io.legere.pdfiumandroid.suspend.PdfTextPageKt: io.legere.pdfiumandroid.PdfTextPage page
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.jvm.internal.Ref$ObjectRef $leftoverContext
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause$volatile
com.fingerprintjs.android.fingerprint.device_id_signals.DeviceIdSignalsProvider$mediaDrmIdSignal$2: com.fingerprintjs.android.fingerprint.device_id_signals.DeviceIdSignalsProvider this$0
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.reflect.Constructor $constructor
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mAncestorsToRemove
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: int label
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: android.content.ContentValues $values
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.ReactNativeConfig mConfig
com.toyberman.RNSslPinningModule: com.facebook.react.modules.network.ForwardingCookieHandler cookieHandler
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.horcrux.svg.RenderableViewManager$TextViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider$sensorsSignal$2: com.fingerprintjs.android.fingerprint.fingerprinting_signals.FingerprintingSignalsProvider this$0
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit timeUnit
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: int label
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: int label
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.google.gson.internal.LazilyParsedNumber: java.lang.String value
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect sHelperRect
com.horcrux.svg.FilterRegion: com.horcrux.svg.SVGLength mY
io.invertase.notifee.NotifeeEventSubscriber: java.lang.String KEY_NOTIFICATION
io.legere.pdfiumandroid.PdfDocument: android.os.ParcelFileDescriptor parcelFileDescriptor
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jniSignature
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: io.legere.pdfiumandroid.suspend.PdfPageKt this$0
com.facebook.react.uimanager.UIConstantsProviderManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostDelegate mReactHostDelegate
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
app.notifee.core.event.BlockStateEvent: int getType()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void reparentSharedViewsForCurrentTransition(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacity(com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSecurityPatchSync()
com.swmansion.reanimated.NativeProxy$1: void clearAnimationConfig(int)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
androidx.biometric.CryptoObjectUtils$Api23Impl: void setBlockModeCBC(android.security.keystore.KeyGenParameterSpec$Builder)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitStart()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getJSMessageQueueThread()
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType[] values()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDashoffset(android.view.View,float)
io.legere.pdfiumandroid.PdfiumCore: android.graphics.RectF textPageGetRect(io.legere.pdfiumandroid.PdfDocument,int,int)
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.horcrux.svg.SvgView: void drawChildren(android.graphics.Canvas)
io.invertase.notifee.NotifeeApiModule: void getDisplayedNotifications(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetGapJNI(long,int)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.sslpublickeypinning.SslPublicKeyPinningModule: SslPublicKeyPinningModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVectorEffect(android.view.View,int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setName(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String getName()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: PdfiumCoreKt(kotlinx.coroutines.CoroutineDispatcher,io.legere.pdfiumandroid.util.Config)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutEnd()
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setResult(android.view.View,java.lang.String)
com.facebook.react.TurboReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
io.invertase.notifee.NotifeeApiModule: void getChannel(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.util.Set convertProps(com.facebook.react.bridge.ReadableNativeArray)
org.wonday.pdf.PdfView: void setEnableDoubleTapZoom(boolean)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: void getAppIcon(java.lang.String,com.facebook.react.bridge.Promise)
org.wonday.pdf.PdfView: void setPage(int)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void installJSIBindings()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setDx(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: PdfPageKt$renderPageBitmap$2(io.legere.pdfiumandroid.suspend.PdfPageKt,android.graphics.Bitmap,int,int,int,int,boolean,boolean,kotlin.coroutines.Continuation)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setDisplay(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.VirtualViewManager: void setMarkerMid(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setLackPermissionToDownloadMessage(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void reset()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setName(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setToolbarElementsVisibility(int)
com.horcrux.svg.SvgViewManager: void setBorderBottomRightRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setPointerEvents(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(android.view.View,com.facebook.react.bridge.Dynamic)
com.freeraspreactnative.FreeraspReactNativeModule: void addToWhitelist(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: LayoutAnimations$Types()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
com.swmansion.reanimated.NodesManager: void handleEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.VirtualViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.jni.NativeRunnable: void run()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.rnfs.RNFSManager: java.util.Map getConstants()
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeLinecap(android.view.View,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: boolean equals(java.lang.Object)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SvgViewManager: void setBorderTopLeftRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$Companion: State$Pending$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.wonday.pdf.PdfManager: void setEnableAntialiasing(android.view.View,boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String getReanimatedJavaVersion()
com.horcrux.svg.SvgViewManager: void setBorderTopLeftRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMarkerStart(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.lifecycle.ReportFragment: ReportFragment()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected deserialize(kotlinx.serialization.encoding.Decoder)
io.legere.pdfiumandroid.PdfiumCore: java.lang.String textPageGetText(io.legere.pdfiumandroid.PdfDocument,int,int,int)
com.swmansion.reanimated.sensor.ReanimatedSensor: boolean initialize()
com.horcrux.svg.RenderableViewManager: void setColor(com.horcrux.svg.RenderableView,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setResult(android.view.View,java.lang.String)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
io.legere.pdfiumandroid.PdfiumCore: void closeTextPage(io.legere.pdfiumandroid.PdfDocument,int)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeDropAncestors(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isLayoutAnimationEnabled()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.react.fabric.SurfaceHandlerBinding: void start()
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getAffectedLayoutNodesCount()
io.legere.pdfiumandroid.util.Size: Size(int,int)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2: java.lang.Object invoke()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String getLogId()
com.horcrux.svg.SvgViewManager: void setBbWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.mounting.MountingManager: void sendAccessibilityEvent(int,int,int)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.View,int)
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation: com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void metaGetAll(com.facebook.react.bridge.Promise)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: java.lang.Object invokeSuspend(java.lang.Object)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.views.view.ReactViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.facebook.react.fabric.FabricUIManager$2: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void prepareLayoutAnimations(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void actionViewIntent(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: boolean equals(java.lang.Object)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String getName()
com.horcrux.svg.RNSVGRenderableManager: double getTotalLength(java.lang.Double)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.PdfiumCore: java.lang.Object access$getLock$cp()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
app.notifee.core.model.NotificationAndroidModel: int[] getFlags()
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: void getTimestamp$annotations()
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,java.lang.CharSequence)
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec getEventAnimationDriverMatchSpec()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getFabricEnabled()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
io.legere.pdfiumandroid.util.Size: int component2()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.VirtualViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$300(com.rnfs.RNFSManager)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
app.notifee.core.model.NotificationAndroidStyleModel: com.google.common.util.concurrent.ListenableFuture getBigPictureStyleTask(com.google.common.util.concurrent.ListeningExecutorService)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void checkCppVersion()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(android.graphics.Path)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfDocument: android.os.ParcelFileDescriptor getParcelFileDescriptor()
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: void receiveCommand(com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Response lambda$sendRequestInternal$0(java.lang.String,com.facebook.react.bridge.ReactApplicationContext,int,okhttp3.Interceptor$Chain)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
io.invertase.notifee.NotifeeApiModule: void lambda$cancelAllNotificationsWithIds$3(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType valueOf(java.lang.String)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageMediaBox(kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void lambda$finishSharedAnimation$1(android.view.ViewParent)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.biometric.CryptoObjectUtils$Api23Impl: void initKeyGenerator(javax.crypto.KeyGenerator,android.security.keystore.KeyGenParameterSpec)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
org.wonday.pdf.PdfManager: void setEnableAnnotationRendering(android.view.View,boolean)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.facebook.animated.gif.GifFrame: int nativeGetYOffset()
com.swmansion.reanimated.ReanimatedMessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void cancelAnimationForTag(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setClipRule(android.view.View,int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDashoffset(android.view.View,float)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.horcrux.svg.VirtualViewManager: void setDisplay(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeMiterlimit(android.view.View,float)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUsedMemory(com.facebook.react.bridge.Promise)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getConsolePatchSettings()
com.reactcommunity.rndatetimepicker.TimePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnScroll(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$Companion: FinalTreeHead$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsPing(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: double getBatteryLevelSync()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
io.legere.pdfiumandroid.PdfDocument: java.util.List getTableOfContents()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: SurfaceMountingManager$4(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState,com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent)
com.facebook.react.fabric.FabricUIManager$4: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
com.github.barteksc.pdfviewer.PDFView: void setMinZoom(float)
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
app.notifee.core.Notifee: void openAlarmPermissionSettings(android.app.Activity,app.notifee.core.interfaces.MethodCallResult)
com.sslpublickeypinning.SslPublicKeyPinningModule: void initializeCertificatePinner(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgView: void setMinX(float)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeOnViewAttach(com.facebook.react.fabric.mounting.mountitems.MountItem)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.runtime.ReactHostImpl: void lambda$isMetroRunning$36(com.facebook.react.runtime.internal.bolts.TaskCompletionSource,boolean)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.freeraspreactnative.FreeraspReactNativeModule: void removeListeners(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.facebook.animated.gif.GifFrame: int nativeGetHeight()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int registerSensor(int,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHeaderHidden(boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFillRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.SvgViewManager: void setAlign(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
com.facebook.react.fabric.LongStreamingStats$2: int compare(java.lang.Object,java.lang.Object)
com.freeraspreactnative.FreeraspReactNativeModule: void talsecStart$lambda$2(com.freeraspreactnative.FreeraspReactNativeModule,com.aheaditec.talsec_security.security.api.TalsecConfig,com.facebook.react.bridge.Promise)
com.facebook.animated.gif.GifFrame: boolean nativeHasTransparency()
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
com.sslpublickeypinning.SslPublicKeyPinningModule: okhttp3.CertificatePinner getCertificatePinner()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: PdfPageKt$getPageArtBox$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$Companion: Log$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void stop()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$43(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.horcrux.svg.SvgViewManager: void setBorderStartColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
io.invertase.notifee.NotifeeApiModule: void createChannels(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.aheaditec.talsec_security.security.Natives: int n(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator copy(java.time.Instant,java.lang.String)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
org.greenrobot.eventbus.android.AndroidComponentsImpl: AndroidComponentsImpl()
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageGetUnicode(int,kotlin.coroutines.Continuation)
com.horcrux.svg.VirtualViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableArray: void pushNull()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.learnium.RNDeviceInfo.RNDeviceModule: void getAvailableLocationProviders(com.facebook.react.bridge.Promise)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.github.barteksc.pdfviewer.PDFView: void setNightMode(boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getScreenCTM(java.lang.Double)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(android.view.View,int)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: void authenticate(java.lang.Object,java.lang.Object,android.os.CancellationSignal,int,java.lang.Object,android.os.Handler)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.react.views.view.ReactViewGroup: void removeViewAt(int)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
io.legere.pdfiumandroid.util.Size: java.lang.String toString()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.ReactInstanceManager getReactInstanceManager(com.facebook.react.bridge.ReactApplicationContext)
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.LoggerInterface getLogger()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
com.horcrux.svg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getScreenCTM(java.lang.Double)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
app.notifee.core.model.NotificationAndroidActionModel: androidx.core.app.RemoteInput getRemoteInput(androidx.core.app.NotificationCompat$Action$Builder)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: java.lang.String component2()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateDestroyTask$50(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.DevToolsReactPerfLogger: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
androidx.work.impl.utils.NetworkApi21: boolean hasCapabilityCompat(android.net.NetworkCapabilities,int)
androidx.core.app.NotificationManagerCompat$Api28Impl: android.app.NotificationChannelGroup getNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean hasLargeIcon()
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: int hashCode()
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3 copy(java.time.Instant,java.lang.String,java.util.List)
com.freeraspreactnative.FreeraspReactNativeModule: void getAppIcon$lambda$4$lambda$3(com.facebook.react.bridge.Promise,java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: ReactNativeFirebaseAppModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.swmansion.reanimated.ReactNativeUtils: float getBorderRadius(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void cancelAnimation(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType: com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$Companion: State$Retired$Companion()
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setNodes(com.horcrux.svg.FeMergeView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(android.view.View,int)
com.facebook.react.bridge.ReactContext: void destroy()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: int hashCode()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInFill(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isRootViewAttached()
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String,int)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
me.leolin.shortcutbadger.impl.NovaHomeBadger: NovaHomeBadger()
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setRole(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.lang.String toString()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptObject(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
com.rnfs.RNFSManager: void setReadable(java.lang.String,java.lang.Boolean,java.lang.Boolean,com.facebook.react.bridge.Promise)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(java.lang.Object)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: boolean equals(java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addRootView(android.view.View)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable deserialize(kotlinx.serialization.encoding.Decoder)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfiumCore: int getPageHeightPoint(io.legere.pdfiumandroid.PdfDocument,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getBBox(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void sortViewsByTags(java.util.List)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
com.horcrux.svg.FilterProperties$Units: com.horcrux.svg.FilterProperties$Units[] values()
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.swmansion.reanimated.NativeProxy: void performOperations()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.fresco.animation.bitmap.preparation.ondemandanimation.FrameResult$FrameType: com.facebook.fresco.animation.bitmap.preparation.ondemandanimation.FrameResult$FrameType valueOf(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String getName()
io.legere.pdfiumandroid.util.InitLock: void waitForReady()
com.reactnativecommunity.webview.RNCWebViewManager: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.modules.devloading.DevLoadingModule: DevLoadingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.horcrux.svg.RenderableViewManager$MaskManager: void setResponsible(android.view.View,boolean)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDy(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
com.swmansion.reanimated.layoutReanimation.SharedElement: SharedElement(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: void open$lambda$0(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise,androidx.fragment.app.FragmentManager,com.reactcommunity.rndatetimepicker.MaterialTimePickerModule)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean hasStyle()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setResult(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$Companion: kotlinx.serialization.KSerializer serializer()
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$1(com.google.firebase.components.ComponentContainer)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.bridge.UIManagerProvider: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findScreen(android.view.View)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
app.notifee.core.Notifee: void createChannelGroup(android.os.Bundle,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $values()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$stopSurface$1()
com.horcrux.svg.VirtualView: void restoreCanvas(android.graphics.Canvas,int)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.horcrux.svg.VirtualViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
androidx.core.text.HtmlCompat$Api24Impl: java.lang.String toHtml(android.text.Spanned,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$getToken$7(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
io.legere.pdfiumandroid.PdfPage: java.util.List getPageLinks()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.VirtualViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] values()
com.horcrux.svg.SvgViewManager: void setNextFocusLeft(com.horcrux.svg.SvgView,int)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.util.Map getConstants()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: void render(android.graphics.Canvas,android.graphics.Paint,float)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setResponsible(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFirstInstallTime(com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.fabric.mounting.MountingManager: void clearJSResponder()
com.reactnativecommunity.webview.RNCWebViewMessagingModule: void onShouldStartLoadWithRequest(com.facebook.react.bridge.WritableMap)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: SharedTransitionManager(com.swmansion.reanimated.layoutReanimation.AnimationsManager)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
app.notifee.core.Notifee: void isBatteryOptimizationEnabled(app.notifee.core.interfaces.MethodCallResult)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: boolean isHardwareDetected(java.lang.Object)
com.swmansion.rnscreens.Screen: androidx.fragment.app.Fragment getFragment()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $values()
com.shreemati.SecurityService.SecurityServiceManager: boolean checkEmulatorFiles()
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator,java.time.Instant,java.lang.String,int,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
io.legere.pdfiumandroid.PdfiumCore: void closeDocument(io.legere.pdfiumandroid.PdfDocument)
com.horcrux.svg.FilterProperties$FeBlendMode: com.horcrux.svg.FilterProperties$FeBlendMode[] values()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.animated.NativeAnimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
com.horcrux.svg.SvgViewManager: void setBorderColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: void initWithContext(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.swmansion.reanimated.Utils: float convertToFloat(java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnOpenWindowEvent(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasGmsSync()
com.facebook.react.runtime.ReactHostImpl: android.app.Activity getLastUsedActivity()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.rnfs.RNFSManager: void removeListeners(java.lang.Integer)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createView(java.lang.String,int,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.SurfaceHandlerBinding: SurfaceHandlerBinding(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
io.legere.pdfiumandroid.PdfDocument: io.legere.pdfiumandroid.PdfTextPage openTextPage(io.legere.pdfiumandroid.PdfPage)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.horcrux.svg.VirtualView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
io.invertase.notifee.NotifeeApiModule: void deleteChannel(java.lang.String,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$Companion: Operator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: PdfiumCoreKt$newDocument$6(io.legere.pdfiumandroid.suspend.PdfiumCoreKt,byte[],kotlin.coroutines.Continuation)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTint(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeRegisterSharedView(android.view.View)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.facebook.jni.HybridData$Destructor: void destruct()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.aheaditec.talsec_security.security.Natives: boolean g()
io.legere.pdfiumandroid.PdfDocument$Link: java.lang.String getUri()
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void getChannels(com.facebook.react.bridge.Callback)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$newGetOrCreateReactInstanceTask$28(com.facebook.react.runtime.internal.bolts.Task)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDashoffset(android.view.View,float)
io.legere.pdfiumandroid.PdfiumCore: int getPageWidth(io.legere.pdfiumandroid.PdfDocument,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: boolean equals(java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
io.invertase.notifee.NotifeeApiModule: void cancelAllNotifications(com.facebook.react.bridge.Promise)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task newGetOrCreateReloadTask(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.animated.gif.GifImage: GifImage()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: Log(java.lang.String,java.lang.String,java.lang.String,int,java.util.List,okhttp3.HttpUrl,com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname,com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType,com.appmattus.certificatetransparency.internal.loglist.model.v3.State,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.animated.NativeAnimatedModule)
com.rnfs.RNFSManager: void writeFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.github.barteksc.pdfviewer.PDFView: void setPositionOffset(float)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setOpacity(android.view.View,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
app.notifee.core.model.NotificationAndroidModel: java.lang.String getShortcutId()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
io.legere.pdfiumandroid.PdfPage: void close()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: void getTimestamp$annotations()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void lambda$static$0(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int findPrecedingViewTagForTransition(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.reactcommunity.rndatetimepicker.DatePickerModule: void lambda$open$0(androidx.fragment.app.FragmentManager,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK4(android.view.View,float)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.react.runtime.ReactHostImpl: void lambda$newGetOrCreateReactInstanceTask$26()
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.runtime.ReactHostImpl: void raiseSoftException(java.lang.String,java.lang.String,java.lang.Throwable)
com.rnfs.RNFSManager: void getAllExternalFilesDirs(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.reactnativecommunity.webview.RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.sslpublickeypinning.SslPublicKeyPinningModule: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageCountChars(kotlin.coroutines.Continuation)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.rnfs.RNFSManager: void appendFile(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator copy(java.lang.String,java.util.List,java.util.List)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: void getTimestamp$annotations()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean,boolean)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.reactnativecommunity.webview.RNCWebViewManager: void setMenuCustomItems(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$39(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.aheaditec.talsec.security.r1$a: com.aheaditec.talsec.security.r1$a valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
io.legere.pdfiumandroid.PdfWriteCallback: int WriteBlock(byte[])
com.reactnativecommunity.webview.RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.animated.gif.GifImage: com.facebook.animated.gif.GifImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer,int,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: NoopEventHandler()
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
app.notifee.core.event.LogEvent: java.lang.String getTag()
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: int hashCode()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: int hashCode()
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
com.facebook.react.bridge.CatalystInstance: void initialize()
com.facebook.react.runtime.ReactHostImpl: void stopAttachedSurfaces(java.lang.String,com.facebook.react.runtime.ReactInstance)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
io.invertase.notifee.NotifeeApiModule: void lambda$cancelAllNotifications$0(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.horcrux.svg.SvgViewManager: void setRemoveClippedSubviews(android.view.View,boolean)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.NativeProxy$1: void cancelAnimation(int)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean)
com.franmontiel.persistentcookiejar.cache.SetCookieCache: SetCookieCache()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(com.reactnativecommunity.webview.RNCWebViewWrapper)
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion$1: State$Companion$1()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.fabric.interop.InteropEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.horcrux.svg.RenderableView: void resetProperties()
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void initialize()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2: CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.animated.gif.GifFrame: void nativeRenderFrame(int,int,android.graphics.Bitmap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsGetListeners(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$MaskManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: TemporalInterval$$serializer()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
app.notifee.core.Notifee: void openBatteryOptimizationSettings(android.app.Activity,app.notifee.core.interfaces.MethodCallResult)
org.wonday.pdf.PdfManager: void setEnablePaging(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname,java.lang.String,int,java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
androidx.work.ExistingPeriodicWorkPolicy: androidx.work.ExistingPeriodicWorkPolicy[] values()
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.rnfs.RNFSManager: void readDirAssets(java.lang.String,com.facebook.react.bridge.Promise)
com.sslpublickeypinning.SslPublicKeyPinningSpec: void disable(com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableArray copyReadableArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUniqueIdSync()
io.legere.pdfiumandroid.suspend.PdfDocumentKt: boolean safeClose()
org.wonday.pdf.PdfManager: void setPath(org.wonday.pdf.PdfView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.PdfiumCore: void renderPageBitmap(io.legere.pdfiumandroid.PdfDocument,android.graphics.Bitmap,int,int,int,int,int,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
io.invertase.notifee.NotifeeApiModule: void isBatteryOptimizationEnabled(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setNeedsOffscreenAlphaCompositing(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createPreAllocateViewMountItem(int,int,java.lang.String,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDashoffset(android.view.View,float)
com.reactcommunity.rndatetimepicker.NativeModuleMaterialTimePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void deleteView(int)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$200(com.rnfs.RNFSManager)
com.reactnativecommunity.webview.RNCWebView: void setNestedScrollEnabled(boolean)
com.horcrux.svg.RenderableView: void setupPaint(android.graphics.Paint,float,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.animated.gif.GifFrame: int nativeGetXOffset()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.animated.gif.GifImage: int nativeGetSizeInBytes()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: PdfTextPageKt$textPageGetCharBox$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,int,kotlin.coroutines.Continuation)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.gantix.JailMonkey.JailMonkeyModule: void isDevelopmentSettingsMode(com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setOpacity(android.view.View,float)
io.invertase.notifee.NotifeeApiModule: void lambda$getNotificationSettings$23(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.graphics.Point convertScreenLocationToViewCoordinates(android.graphics.Point,android.view.View)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void onActivityResult(int,int,android.content.Intent)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void onViewStateDeleted(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List drainConcurrentItemQueue(java.util.concurrent.ConcurrentLinkedQueue)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFillOpacity(android.view.View,float)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItemForInterop(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType valueOf(java.lang.String)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setIn1(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(android.view.View,float)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.google.android.material.chip.Chip: float getChipIconSize()
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(com.horcrux.svg.MarkerView,float)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
io.legere.pdfiumandroid.PdfiumCore: int textPageCountRects(io.legere.pdfiumandroid.PdfDocument,int,int,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
org.wonday.pdf.PdfManager: void setEnableRTL(android.view.View,boolean)
com.horcrux.svg.SvgView: void enableTouchEvents()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
io.invertase.notifee.NotifeeApiModule: void lambda$openAlarmPermissionSettings$14(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getBatchedExecutionTime()
com.learnium.RNDeviceInfo.RNDeviceModule: java.util.Map getConstants()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: State$Usable(java.time.Instant)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJSIReturnKind(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceId()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.legere.pdfiumandroid.PdfDocument$Bookmark: long getMNativePtr()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageGetCharBox(int,kotlin.coroutines.Continuation)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setType(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.PdfTextPage$Companion: PdfTextPage$Companion()
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
com.facebook.react.runtime.ReactHostImpl: void addReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: State$ReadOnly$$serializer()
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageCropBox(kotlin.coroutines.Continuation)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
app.notifee.core.Notifee: void getInitialNotification(android.app.Activity,app.notifee.core.interfaces.MethodCallResult)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean shouldRouteTurboModulesThroughLegacyModuleInterop()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
com.facebook.react.runtime.ReactHostImpl: boolean onBackPressed()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
io.invertase.notifee.NotifeeApiModule: NotifeeApiModule(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: java.lang.String toString()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle createMessagingStyle(java.lang.CharSequence)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: java.time.Instant component1()
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
app.notifee.core.model.NotificationAndroidModel: java.lang.String getSortKey()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getLegacyJavaModule(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstanceIdSync()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidMakePlayServicesAvailable()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.toyberman.RNSslPinningModule: java.lang.String getName()
com.horcrux.svg.SvgPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: void lambda$oldReload$52(com.facebook.react.runtime.ReactInstance)
com.horcrux.svg.VirtualView: void setMarkerStart(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.ReanimatedUIManager: void removeSubviewsFromContainerWithID(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.horcrux.svg.SvgViewManager: void setBorderTopStartRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setFloodOpacity(com.horcrux.svg.FeFloodView,float)
com.facebook.react.modules.devloading.DevLoadingModule: void hide()
io.legere.pdfiumandroid.PdfDocument: long nativeGetBookmarkDestIndex(long,long)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.rnfs.RNFSManager: java.io.InputStream getInputStream(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: boolean safeClose()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager: void setWidth(com.horcrux.svg.FilterPrimitiveView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: Log(java.lang.String,java.lang.String,java.lang.String,int,java.util.List,okhttp3.HttpUrl,com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname,com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType,com.appmattus.certificatetransparency.internal.loglist.model.v3.State)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemAvailableFeatures(com.facebook.react.bridge.Promise)
com.facebook.react.runtime.ReactHostImpl: boolean hasNativeModule(java.lang.Class)
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.util.InitLock access$isReady$cp()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPowerState(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
org.wonday.pdf.PdfManager: void setEnablePaging(org.wonday.pdf.PdfView,boolean)
com.github.barteksc.pdfviewer.PDFView: void setLandscapeOrientation(boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion: State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver: ReactNativeFirebaseMessagingReceiver()
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.github.barteksc.pdfviewer.PDFView: int getSpacingPx()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void screenDidLayout()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.swmansion.reanimated.AndroidUIScheduler: void triggerUI()
com.reactcommunity.rndatetimepicker.DatePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
kotlinx.serialization.json.ClassDiscriminatorMode: kotlinx.serialization.json.ClassDiscriminatorMode valueOf(java.lang.String)
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getNullableViewState(int)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: LogListV3$$serializer()
com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType: com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
io.legere.pdfiumandroid.PdfPage: int getPageWidth(int)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.work.impl.utils.NetworkApi21: void unregisterNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
app.notifee.core.interfaces.EventListener: void onNotificationEvent(app.notifee.core.event.NotificationEvent)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean,boolean,boolean,boolean,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
org.reactnative.maskedview.RNCMaskedView: void setRenderingMode(java.lang.String)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObject(org.json.JSONObject)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
app.notifee.core.model.NotificationModel: android.os.Bundle toBundle()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeMiterlimit(android.view.View,float)
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
io.legere.pdfiumandroid.PdfPage: void renderPageBitmap(android.graphics.Bitmap,int,int,int,int,boolean,boolean)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: ReanimatedKeyboardEventListener$WindowInsetsCallback(com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object mapRectToDevice(int,int,int,int,int,android.graphics.RectF,kotlin.coroutines.Continuation)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void configureAuthDomain(java.lang.String,java.lang.String)
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getYogaSize(float,float)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl: android.app.Notification$MessagingStyle addHistoricMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
com.horcrux.svg.RNSVGRenderableManager: RNSVGRenderableManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.invertase.notifee.NotifeeApiModule: java.lang.String getMainComponent(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly,java.time.Instant,com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MaskManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setType(com.horcrux.svg.FeColorMatrixView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean tryStartSharedTransitionForViews(java.util.List,boolean)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.fabric.ReactNativeConfig$Companion: ReactNativeConfig$Companion()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.facebook.react.runtime.ReactHostImpl: void removeReactInstanceEventListener(com.facebook.react.ReactInstanceEventListener)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] values()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void maybeFlushUIUpdatesQueue()
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired copy(java.time.Instant)
com.horcrux.svg.RenderableViewManager$PatternManager: void setClipPath(android.view.View,java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle setGroupConversation(android.app.Notification$MessagingStyle,boolean)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void setApplicationIconBadgeNumber(int)
com.facebook.react.views.scroll.ReactScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.animated.gif.GifImage: int nativeGetHeight()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.franmontiel.persistentcookiejar.R: R()
com.facebook.react.fabric.mounting.MountItemDispatcher: void printMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.shreemati.SecurityService.SecurityServiceManager: boolean isFridaRunning()
io.legere.pdfiumandroid.PdfDocument$Bookmark: java.util.List getChildren()
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String getName()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setResult(android.view.View,java.lang.String)
com.rnfs.RNFSManager: void copyFileRes(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.Boolean isLowRamDevice()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didMountItems(java.util.List)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$unsubscribeFromTopic$15(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,java.lang.Integer)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion: LogType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.legere.pdfiumandroid.PdfiumCore$Companion: PdfiumCore$Companion()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: PdfPageKt$getPageHeight$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,kotlin.coroutines.Continuation)
com.horcrux.svg.SvgViewManager: void setNextFocusForward(android.view.View,int)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
io.legere.pdfiumandroid.PdfDocument$Bookmark: PdfDocument$Bookmark()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.FabricEnabledViewGroup: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
kotlin.random.Random$Default$Serialized: java.lang.Object readResolve()
org.wonday.pdf.PdfManager: void setEnableDoubleTapZoom(android.view.View,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: FabricNameComponentMapping()
app.notifee.core.model.NotificationAndroidModel: java.lang.String getTicker()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
io.legere.pdfiumandroid.PdfTextPage: int nativeTextGetCharIndexAtPos(long,double,double,double,double)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.turbomodule.core.TurboModuleManager: void logError(java.lang.String)
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.horcrux.svg.SvgView: void defineTemplate(com.horcrux.svg.VirtualView,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator deserialize(kotlinx.serialization.encoding.Decoder)
com.rnfs.RNFSManager: void readFileRes(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.NodesManager$2: void doFrameGuarded(long)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(com.horcrux.svg.MarkerView,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: SurfaceMountingManager$PendingViewEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,boolean)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int getSurfaceId()
com.learnium.RNDeviceInfo.RNDeviceModule: double getUsedMemorySync()
com.facebook.react.fabric.LongStreamingStats$2: int compare(java.lang.Long,java.lang.Long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: TemporalInterval(int,java.time.Instant,java.time.Instant,kotlinx.serialization.internal.SerializationConstructorMarker)
io.invertase.notifee.NotifeeApiModule: void getTriggerNotifications(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
io.legere.pdfiumandroid.PdfDocument: long nativeLoadPage(long,int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: Operator(int,java.lang.String,java.util.List,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void publicDropView(android.view.View)
com.facebook.react.fabric.BindingImpl: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getTurboLegacyCxxModule(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderBlockColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: void doFrameGuarded(long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableNativeArray)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.legere.pdfiumandroid.PdfDocument$PageCount: int getCount()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setPlaceholder(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTagsSync()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.runtime.hermes.HermesInstance: com.facebook.jni.HybridData initHybrid()
kotlin.collections.State: kotlin.collections.State[] values()
com.facebook.jni.DestructorThread$1: void run()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
io.legere.pdfiumandroid.PdfDocument$PageCount: int component2()
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: ReactCheckBoxManager()
com.facebook.react.fabric.Binding: void unregister()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
io.legere.pdfiumandroid.PdfTextPage: java.lang.String textPageGetText(int,int)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.util.Map getConstants()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.MemoryPressureListener createMemoryPressureListener(com.facebook.react.runtime.ReactInstance)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath(android.graphics.Canvas,android.graphics.Paint)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: java.lang.Object newDocument(byte[],kotlin.coroutines.Continuation)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffStart()
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
io.invertase.notifee.NotifeeApiModule: void openPowerManagerSettings(com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.facebook.react.views.view.ReactViewGroup: void resetPointerEvents()
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArray(org.json.JSONArray)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceId(int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean shouldAnimateLayout(android.view.View)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeMiterlimit(android.view.View,float)
io.legere.pdfiumandroid.PdfiumCore: void renderPageBitmap$default(io.legere.pdfiumandroid.PdfiumCore,io.legere.pdfiumandroid.PdfDocument,android.graphics.Bitmap,int,int,int,int,int,boolean,int,java.lang.Object)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidGetPlayServicesStatus(com.facebook.react.bridge.Promise)
com.horcrux.svg.SvgViewManager: void setBorderBottomStartRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.lang.String toString()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFontScale(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType: com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType[] values()
com.toyberman.RNSslPinningModule: void removeCookieByName(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.swmansion.reanimated.AndroidUIScheduler$2: AndroidUIScheduler$2(com.swmansion.reanimated.AndroidUIScheduler,com.facebook.react.bridge.JSExceptionHandler)
kotlin.collections.EmptySet: java.lang.Object readResolve()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.fabric.interop.InteropEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
io.legere.pdfiumandroid.PdfPage: java.lang.Integer nativeGetDestPageIndex(long,long)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getTurboJavaModule(java.lang.String)
com.github.barteksc.pdfviewer.PDFView$State: com.github.barteksc.pdfviewer.PDFView$State[] values()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
io.legere.pdfiumandroid.PdfTextPage: android.graphics.RectF textPageGetCharBox(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getBuildId(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setVectorEffect(android.view.View,int)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
org.wonday.pdf.PdfManager: void receiveCommand(org.wonday.pdf.PdfView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIncrementalSync()
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.github.barteksc.pdfviewer.PDFView: void setPageSnap(boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithExceptionMap(com.facebook.react.bridge.Promise,java.lang.Exception)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFilter(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.shreemati.SecurityService.SecurityServiceManager: void isDeviceRooted(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object openTextPage(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
com.horcrux.svg.FilterUtils: FilterUtils()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.facebook.react.runtime.ReactInstance: void installGlobals(boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getName()
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: State$Rejected(int,java.time.Instant,kotlinx.serialization.internal.SerializationConstructorMarker)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: PdfiumCoreKt$newDocument$4(io.legere.pdfiumandroid.suspend.PdfiumCoreKt,android.os.ParcelFileDescriptor,java.lang.String,kotlin.coroutines.Continuation)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerStart(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: void setNextFocusUp(android.view.View,int)
com.aheaditec.talsec.security.a3$a: com.aheaditec.talsec.security.a3$a[] values()
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
com.aheaditec.talsec_security.security.Natives: android.util.Pair j(android.content.Context,java.lang.String[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.horcrux.svg.SvgViewManager: void setBorderBottomColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: boolean install()
com.facebook.react.bridge.JavaScriptExecutor: void close()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: FinalTreeHead(int,int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.util.List component3()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setInlineSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.fabric.events.EventEmitterWrapper: void destroy()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.google.android.gms.common.api.internal.zzb: zzb()
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.horcrux.svg.RenderableView: void setVectorEffect(int)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitNumber()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: RenderableViewManager$TextViewManagerAbstract(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.swmansion.reanimated.NodesManager: void postOnAnimation(com.swmansion.reanimated.NodesManager$OnAnimationFrame)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: State$Retired(int,java.time.Instant,kotlinx.serialization.internal.SerializationConstructorMarker)
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData initHybrid()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.react.fabric.FabricUIManager$2: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerMid(android.view.View,java.lang.String)
org.wonday.pdf.PdfManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK3(com.horcrux.svg.FeCompositeView,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: int isGooglePlayServicesAvailable()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getKey$annotations()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$hasPermission$11(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.horcrux.svg.SvgView: void startViewTransition(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: void dispatch(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setAndroidLayerType(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
org.wonday.pdf.PdfView: void setFitPolicy(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable,java.time.Instant,int,java.lang.Object)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void clearAnimationConfig(int)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getShowChronometer()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.facebook.animated.gif.GifImage: int nativeGetLoopCount()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
io.legere.pdfiumandroid.PdfiumCore: PdfiumCore(android.content.Context,io.legere.pdfiumandroid.util.Config,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(float)
com.horcrux.svg.CustomFilter: CustomFilter()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.uimanager.events.Event: boolean isInitialized()
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.util.List getEmail()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void maybeRestartAnimationWithNewLayout(android.view.View)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported64BitAbis(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setDisplay(android.view.View,java.lang.String)
com.imagepicker.ImagePickerModule: java.lang.String getName()
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.reactnativecommunity.webview.RNCWebViewModule: void shouldStartLoadWithLockIdentifier(boolean,double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setResponsible(android.view.View,boolean)
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: MaterialTimePickerModule(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidPromptForPlayServices()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeLinejoin(android.view.View,int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: void dismiss(com.facebook.react.bridge.Promise)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
io.invertase.notifee.NotifeeApiModule: void lambda$cancelTriggerNotifications$2(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
app.notifee.core.model.NotificationAndroidStyleModel: androidx.core.app.NotificationCompat$Style lambda$getBigPictureStyleTask$1()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerStart(android.view.View,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.facebook.react.runtime.ReactHostImpl: java.lang.Boolean lambda$callWithExistingReactInstance$21(java.lang.String,com.facebook.react.runtime.ReactHostImpl$VeniceThenable,com.facebook.react.runtime.internal.bolts.Task)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task waitThenCallNewGetOrCreateReactInstanceTaskWithRetries(int,int)
com.facebook.react.uimanager.events.Event: void init(int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: void getTimestamp$annotations()
app.notifee.core.Notifee: void isChannelBlocked(java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.util.AlreadyClosedBehavior component2()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String getName()
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.learnium.RNDeviceInfo.RNDeviceModule: void initializeHeadphoneConnectionReceivers()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(double,double,double)
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.Collection getAndResetPreMountItems()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: PdfPageKt$getPageMediaBox$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.facebook.react.ReactRootView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setVectorEffect(android.view.View,int)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.rnfs.RNFSManager: void mkdir(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.facebook.react.fabric.mounting.MountingManager: void enqueuePendingEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.nativeProxy.SensorSetter: void sensorSetter(float[],int)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.horcrux.svg.VirtualViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.animated.gif.GifImage: int nativeGetFrameCount()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: androidx.core.view.WindowInsetsCompat lambda$setupWindowInsets$0(android.view.View,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: Log(int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,okhttp3.HttpUrl,com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname,com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType,com.appmattus.certificatetransparency.internal.loglist.model.v3.State,kotlinx.serialization.internal.SerializationConstructorMarker)
com.reactnativecommunity.webview.RNCWebView: android.webkit.WebChromeClient getWebChromeClient()
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.swmansion.reanimated.ReanimatedUIManagerFactory: com.facebook.react.uimanager.UIManagerModule create(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.math.BigInteger getDirTotalCapacity(android.os.StatFs)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setName(android.view.View,java.lang.String)
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: java.lang.String toString()
com.shreemati.SecurityService.SecurityServiceManager: void isEmulator(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: io.legere.pdfiumandroid.util.AlreadyClosedBehavior[] values()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutRemovedView(android.view.View)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider: ReactNativeFirebaseAppInitProvider()
com.facebook.react.fabric.BindingImpl: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactcommunity.rndatetimepicker.NativeModuleMaterialDatePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: State$Pending(java.time.Instant)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.horcrux.svg.SvgView: android.graphics.Bitmap drawOutput()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getContentIntent(java.lang.String,com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: PdfPageKt$getPageWidthPoint$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.horcrux.svg.SvgView: java.lang.String toDataURL()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: int getTreeSize()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: PdfDocumentKt$openPage$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,int,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
app.notifee.core.EventSubscriber: EventSubscriber()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFillRule(android.view.View,int)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeLinejoin(android.view.View,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void endMarkers()
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.gusparis.monthpicker.adapter.RNProps: com.gusparis.monthpicker.adapter.RNProps[] values()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.uimanager.BaseViewManager: void setClick(android.view.View,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSerialNumberSync()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: int subscribeForKeyboardEvents(com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater,boolean)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.facebook.react.fabric.FabricComponents: java.lang.String getFabricComponentName(java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
app.notifee.core.Logger: void d(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.animated.gif.GifFrame: void nativeFinalize()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.runtime.ReactHostImpl: void raiseSoftException(java.lang.String,java.lang.String)
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: void setColorScheme(java.lang.String)
androidx.work.impl.background.systemjob.SystemJobService$Api24Impl: java.lang.String[] getTriggeredContentAuthorities(android.app.job.JobParameters)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMinSize(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setResponsible(android.view.View,boolean)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
app.notifee.core.Notifee: void getChannel(java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.horcrux.svg.RenderableView: void initBounds()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object renderPageBitmap$default(io.legere.pdfiumandroid.suspend.PdfPageKt,android.graphics.Bitmap,int,int,int,int,boolean,boolean,kotlin.coroutines.Continuation,int,java.lang.Object)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setResult(android.view.View,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(io.legere.pdfiumandroid.suspend.PdfiumCoreKt)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getOrCreateReactInstanceTask()
io.legere.pdfiumandroid.PdfTextPage: java.util.Map getPageMap()
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle createMessagingStyle(android.app.Person)
org.wonday.pdf.PdfManager: void setNativePage(android.view.View,int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.imagepicker.ImagePickerModule: ImagePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
app.notifee.core.Logger: void i(java.lang.String,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object mapPageCoordsToDevice(int,int,int,int,int,double,double,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK2(android.view.View,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$Companion: State$Usable$Companion()
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
com.facebook.react.bridge.ReactContext: void initializeInteropModules(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeLinejoin(android.view.View,int)
me.leolin.shortcutbadger.impl.SonyHomeBadger: SonyHomeBadger()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
io.legere.pdfiumandroid.PdfPage: void nativeRenderPageBitmap(long,android.graphics.Bitmap,int,int,int,int,boolean,boolean)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFilter(android.view.View,java.lang.String)
io.legere.pdfiumandroid.PdfiumCore: PdfiumCore(android.content.Context,io.legere.pdfiumandroid.util.Config)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void copyToInternal(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setDy(android.view.View,com.facebook.react.bridge.Dynamic)
app.notifee.core.Notifee: void cancelAllNotifications(int,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.learnium.RNDeviceInfo.RNDeviceModule)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFillRule(android.view.View,int)
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageTrimBox(kotlin.coroutines.Continuation)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.View,int)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
com.swmansion.reanimated.NativeMethodsHelper: void computeBoundingBox(android.view.View,int[])
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.ReactRootView: int getRootViewTag()
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.rnfs.RNFSManager: void copyInputStream(java.io.InputStream,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.LongStreamingStats$1: int compare(java.lang.Object,java.lang.Object)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedFilter(java.lang.String)
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getAndroidIdSync()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallReferrerSync()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.lang.String getName()
com.facebook.react.ReactHost: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.bridge.Arguments$1: int size()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: NativeMethodCallInvokerHolderImpl(com.facebook.jni.HybridData)
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: MaterialDatePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTags(com.facebook.react.bridge.Promise)
com.rnfs.RNFSManager: void readDir(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.NodesManager: void performOperations()
com.horcrux.svg.RenderableView: int hitTest(float[])
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getAuthor()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
kotlinx.serialization.json.JsonArray$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.ReaCompatibility: void registerFabricEventListener(com.swmansion.reanimated.NodesManager)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: State$Retired$$serializer()
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.devsupport.HMRClient: void enable()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setInlineSize(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: TurboModuleInteropUtils$MethodDescriptor(java.lang.String,java.lang.String,java.lang.String,int)
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getConsolePatchSettings()
com.BV.LinearGradient.LinearGradientManager: void setBorderRadii(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.fabric.FabricUIManager getUIManager()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
org.wonday.pdf.PdfManager: void setShowsVerticalScrollIndicator(org.wonday.pdf.PdfView,boolean)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void quitSynchronous()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
app.notifee.core.model.a$a: app.notifee.core.model.a$a[] values()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.facebook.react.views.scroll.ReactScrollView: void setContentOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNewProps(java.util.Map,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.uimanager.ViewManager,java.lang.Integer,boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.sslpublickeypinning.SslPublicKeyPinningModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder getPreviousCustomClientBuilder()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeMiterlimit(android.view.View,float)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.SvgView: float getCanvasWidth()
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunning()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.google.android.material.chip.Chip: void setMinLines(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.learnium.RNDeviceInfo.RNDeviceModule: void getMaxMemory(com.facebook.react.bridge.Promise)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.DimensionPropConverter: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
com.reactnativecommunity.webview.RNCWebViewManager: void setNestedScrollEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.runtime.ReactHostImpl: void lambda$callFunctionOnModule$15(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray,com.facebook.react.runtime.ReactInstance)
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF getPageBoundingBox()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getDns$annotations()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly copy(java.time.Instant,com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.ViewGroup)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
io.invertase.notifee.NotifeeApiModule: void lambda$getChannelGroup$19(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported64BitAbisSync()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.swmansion.reanimated.NodesManager: void configureProps(java.util.Set,java.util.Set)
com.detectfrida.util.RootDetectorHelper: boolean isDetectedTestKeys()
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
io.legere.pdfiumandroid.PdfTextPage: int nativeTextGetTextByteArray(long,int,int,byte[])
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDy(android.view.View,com.facebook.react.bridge.Dynamic)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHostSync()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.TurboReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: LogListV3(java.time.Instant,java.lang.String,java.util.List)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.runtime.ReactHostImpl: void onHostResume(android.app.Activity)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
app.notifee.core.model.NotificationAndroidPressActionModel: android.os.Bundle toBundle()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.animated.gif.GifFrame: void nativeDispose()
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
app.notifee.core.model.NotificationAndroidStyleModel: app.notifee.core.model.NotificationAndroidStyleModel fromBundle(android.os.Bundle)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.jni.HybridData: HybridData()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
io.invertase.notifee.NotifeeApiModule: void lambda$getChannel$17(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void checkDuplicateSharedTag(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderEndColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
io.invertase.notifee.NotifeeApiModule: void getPowerManagerInfo(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.Event: void init(int,int,long)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.BV.LinearGradient.LinearGradientView: void setStartPoint(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(com.horcrux.svg.MarkerView,float)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
io.legere.pdfiumandroid.LoggerInterface: void d(java.lang.String,java.lang.String)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void isCameraPresent(com.facebook.react.bridge.Promise)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.horcrux.svg.VirtualView: double relativeOn(com.horcrux.svg.SVGLength,float)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
com.facebook.react.fabric.interop.InteropEvent: InteropEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.EmptyReactNativeConfig: long getInt64(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.interfaces.fabric.SurfaceHandler,android.view.View)
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] values()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setColor(android.view.View,java.lang.Integer)
io.invertase.notifee.NotifeeApiModule: void lambda$isChannelBlocked$21(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setEdgeMode(android.view.View,java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.PdfDocument$Meta getDocumentMeta(io.legere.pdfiumandroid.PdfDocument)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: void getTimestamp$annotations()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: void getOperators$annotations()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
io.invertase.notifee.NotifeeApiModule: void getChannelGroup(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.legere.pdfiumandroid.suspend.PdfPageKt: PdfPageKt(io.legere.pdfiumandroid.PdfPage,kotlinx.coroutines.CoroutineDispatcher)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF mapRectToPage(int,int,int,int,int,android.graphics.Rect)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setLetterSpacing(com.facebook.react.views.text.ReactTextView,float)
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void deleteApp(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
io.invertase.notifee.NotifeeApiModule: void removeListeners(java.lang.Integer)
org.wonday.pdf.PdfView: void setHorizontal(boolean)
com.franmontiel.persistentcookiejar.R$string: R$string()
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
app.notifee.core.model.NotificationAndroidModel: java.lang.CharSequence[] getInputHistory()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.horcrux.svg.SvgViewManager: void setNeedsOffscreenAlphaCompositing(com.horcrux.svg.SvgView,boolean)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFilter(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.NativeModuleSoLoader: NativeModuleSoLoader()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.startup.InitializationProvider: InitializationProvider()
com.detectfrida.DetectFridaModule: void access$setMTask$p(com.detectfrida.DetectFridaModule,com.detectfrida.util.CheckTask)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: boolean equals(java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.reactcommunity.rndatetimepicker.TimePickerModule: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner$Factory: AndroidCertificateChainCleaner$Factory()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType: com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType valueOf(java.lang.String)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.facebook.jni.IteratorHelper: boolean hasNext()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.FabricUIManager createUIManager(com.facebook.react.fabric.events.EventBeatManager)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: ReaLayoutAnimator(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: void getEndDate$annotations()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.horcrux.svg.VirtualViewManager: void setMarkerStart(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.invertase.notifee.NotifeeApiModule: void stopForegroundService(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.shreemati.SecurityService.SecurityServiceManager: boolean checkRootMethod1()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: java.lang.String getSha256RootHash()
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.facebook.react.ReactHost: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
org.wonday.pdf.PdfManager: void setMinScale(android.view.View,float)
com.swmansion.reanimated.ReanimatedPackage$1: ReanimatedPackage$1(com.swmansion.reanimated.ReanimatedPackage,java.util.Map)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: PdfPageKt$getPageBleedBox$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.facebook.react.fabric.BindingImpl: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
app.notifee.core.model.NotificationAndroidPressActionModel: int getLaunchActivityFlags()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
com.github.barteksc.pdfviewer.PDFView: float getCurrentXOffset()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveAllChildrenJNI(long)
androidx.biometric.CryptoObjectUtils$Api28Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(java.security.Signature)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus valueOf(java.lang.String)
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.JavaScriptModule getInteropModule(java.lang.Class)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newStart$20()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3 deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
io.legere.pdfiumandroid.PdfPage: int getPageWidthPoint()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object renderPage(android.view.Surface,int,int,int,int,kotlin.coroutines.Continuation)
com.swmansion.reanimated.ReactNativeUtils: ReactNativeUtils()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.common.LifecycleState getLifecycleState()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutStart()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.uimanager.BaseViewManager: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemManufacturer(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setColor(android.view.View,java.lang.Integer)
com.horcrux.svg.VirtualView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getShowTimestamp()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.rnfs.RNFSManager: int getResIdentifier(java.lang.String)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData getHybridData()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean checkReactFeatureFlagsConditions()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setIn2(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setOperator1(com.horcrux.svg.FeCompositeView,java.lang.String)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: RenderableViewManager$ForeignObjectManager()
com.facebook.react.views.text.ReactTextView: void setLetterSpacing(float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$Companion: Log$Companion()
com.facebook.react.fabric.FabricUIManager$5: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String getName()
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void doFrameGuarded(long)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
com.shree.mati.MainActivity: MainActivity()
com.facebook.react.uimanager.events.Event: int getEventCategory()
io.legere.pdfiumandroid.PdfDocument$PageCount: io.legere.pdfiumandroid.PdfDocument$PageCount copy$default(io.legere.pdfiumandroid.PdfDocument$PageCount,long,int,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
io.legere.pdfiumandroid.PdfiumCore: long nativeOpenMemDocument(byte[],java.lang.String)
com.facebook.react.runtime.ReactHostImpl: ReactHostImpl(android.content.Context,com.facebook.react.runtime.ReactHostDelegate,com.facebook.react.fabric.ComponentFactory,boolean,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,boolean)
org.greenrobot.eventbus.ThreadMode: ThreadMode(java.lang.String,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getBaseOs(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.Binding: void stopSurface(int)
app.notifee.core.model.NotificationAndroidModel: long getTimestamp()
com.horcrux.svg.VirtualView: double fromRelativeFast(com.horcrux.svg.SVGLength)
com.facebook.animated.gif.GifImage: void nativeDispose()
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: int hashCode()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.lang.String component1()
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] $values()
org.wonday.pdf.PdfManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager getReanimatedNativeHierarchyManager()
app.notifee.core.BlockStateBroadcastReceiver: BlockStateBroadcastReceiver()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
io.invertase.notifee.NotifeeEventSubscriber: void onLogEvent(app.notifee.core.event.LogEvent)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
app.notifee.core.ForegroundService: ForegroundService()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl: AnimatedFactoryV2Impl(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.AnimatedCache,boolean,boolean,int,int,com.facebook.common.executors.SerialExecutorService)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.gson.internal.LinkedTreeMap: java.lang.Object writeReplace()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: boolean isBatchEmpty()
app.notifee.core.model.NotificationAndroidActionModel: app.notifee.core.model.NotificationAndroidPressActionModel getPressAction()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
app.notifee.core.model.NotificationAndroidStyleModel: androidx.core.app.Person lambda$getPerson$0(android.os.Bundle)
com.horcrux.svg.SvgView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: ViewManager()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void cancelAllLocalNotifications()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
io.legere.pdfiumandroid.PdfDocument$Link: android.graphics.RectF getBounds()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map getConstants()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
io.invertase.firebase.common.ReactNativeFirebaseModule: ReactNativeFirebaseModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean hasAnimation(int,int)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFilter(android.view.View,java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: java.lang.String getName()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupportedMediaTypeListSync()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.aheaditec.talsec_security.security.Natives: boolean c(java.lang.String[])
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String getName()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void subscribeToTopic(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.horcrux.svg.SvgViewManager: void setBorderStartStartRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
com.scottyab.rootbeer.RootBeerNative: int setLogDebugMessages(boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
app.notifee.core.Notifee: void getNotificationSettings(app.notifee.core.interfaces.MethodCallResult)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object getFontSize(int,kotlin.coroutines.Continuation)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setPointerEvents(android.view.View,java.lang.String)
org.reactnative.maskedview.RNCMaskedViewManager: org.reactnative.maskedview.RNCMaskedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
org.wonday.pdf.PdfManager: PdfManager()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setVectorEffect(android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.gantix.JailMonkey.JailMonkeyModule: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSystemAvailableFeaturesSync()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setName(android.view.View,java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$0(android.view.View,int,int)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
com.sslpublickeypinning.SslPublicKeyPinningModule: void removeListeners(double)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(android.view.View,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object getPageCharCounts(kotlin.coroutines.Continuation)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String getName()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getListOfPreviousOperators$annotations()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHardwareSync()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: android.view.View getRootView()
com.learnium.RNDeviceInfo.RNDeviceModule: RNDeviceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.freeraspreactnative.FreeraspReactNativeModule: android.app.Activity access$getCurrentActivity(com.freeraspreactnative.FreeraspReactNativeModule)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.MemoryPressureRouter getMemoryPressureRouter()
com.google.android.material.chip.Chip: float getIconStartPadding()
com.dieam.reactnativepushnotification.modules.RNPushNotification: void removeDeliveredNotifications(com.facebook.react.bridge.ReadableArray)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
com.horcrux.svg.RenderableView: void mergeProperties(com.horcrux.svg.RenderableView)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.detectfrida.util.RootDetectorHelper: boolean isSuExists()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$Companion: State$Qualified$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.legere.pdfiumandroid.LoggerInterface: void e(java.lang.String,java.lang.Throwable,java.lang.String)
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.shreemati.SecurityService.SecurityServiceManager: SecurityServiceManager(com.facebook.react.bridge.ReactApplicationContext)
io.legere.pdfiumandroid.PdfPage: float[] nativeGetPageBleedBox(long)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.legere.pdfiumandroid.PdfTextPage: char textPageGetUnicode(int)
app.notifee.core.model.NotificationAndroidModel: int getGroupAlertBehaviour()
com.learnium.RNDeviceInfo.RNDeviceModule: void getBatteryLevel(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.horcrux.svg.SVGLength$UnitType: SVGLength$UnitType(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.google.android.material.chip.Chip: void setElevation(float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname$Companion: Hostname$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message setData(android.app.Notification$MessagingStyle$Message,java.lang.String,android.net.Uri)
app.notifee.core.model.NotificationAndroidStyleModel: android.os.Bundle toBundle()
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.horcrux.svg.SvgView: SvgView(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: int getMinEms()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.aheaditec.talsec_security.security.Natives: java.lang.String[] b()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getFabricEnabled$annotations()
com.gantix.JailMonkey.JailMonkeyModule: void isDebuggedMode(com.facebook.react.bridge.Promise)
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: void getAndroidId(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeDashoffset(android.view.View,float)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.horcrux.svg.VirtualViewManager: VirtualViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageSync()
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newStart$18(com.facebook.react.runtime.internal.bolts.Task,com.facebook.react.runtime.internal.bolts.Task)
com.horcrux.svg.RenderableViewManager$FilterManager: void setFilterUnits(com.horcrux.svg.FilterView,java.lang.String)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getCircularLargeIcon()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTypeSync()
com.horcrux.svg.R: R()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeLinecap(android.view.View,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: FinalTreeHead(int,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
io.invertase.firebase.common.ReactNativeFirebaseModule: void initialize()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: PdfiumCoreKt$newDocument$2(io.legere.pdfiumandroid.suspend.PdfiumCoreKt,android.os.ParcelFileDescriptor,kotlin.coroutines.Continuation)
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFingerprint(com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: void getProduct(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void dropView(android.view.View)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void removeListeners(java.lang.Integer)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSerialNumber(com.facebook.react.bridge.Promise)
com.facebook.react.runtime.ReactHostImpl: void lambda$createMemoryPressureListener$10(java.lang.ref.WeakReference,int)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgView: com.horcrux.svg.Brush getDefinedBrush(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$getJsBundleLoader$34(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setClipPath(android.view.View,java.lang.String)
com.BV.LinearGradient.LinearGradientManager: void setStartPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getIpAddress(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread()
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.rnfs.RNFSManager: void touch(java.lang.String,double,double,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setDx(com.horcrux.svg.FeOffsetView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.pm.PackageInfo getPackageInfo()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
app.notifee.core.model.NotificationAndroidModel: int getVisibility()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$40(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.VirtualViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(android.view.View,boolean)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.legere.pdfiumandroid.PdfPage: float[] nativeGetPageMediaBox(long)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: State$Qualified(java.time.Instant)
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String getName()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getSDCardApplicationDir(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setupTransitionContainer()
com.detectfrida.util.RootDetectorHelper: boolean isFoundWrongPathPermission()
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType[] $values()
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: PdfTextPageKt$getFontSize$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,int,kotlin.coroutines.Continuation)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager: void setX(com.horcrux.svg.FilterPrimitiveView,com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap getPayload()
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$MaskManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void updateLayout(int,int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMarkerEnd(android.view.View,java.lang.String)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: ReactNativeFirebaseUtilsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebViewWrapper)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
io.legere.pdfiumandroid.PdfPage: PdfPage(io.legere.pdfiumandroid.PdfDocument,int,long,java.util.Map)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
io.legere.pdfiumandroid.PdfDocument: long getMNativeDocPtr()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.horcrux.svg.SvgPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.bridge.CatalystInstance: void destroy()
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.PdfDocument newDocument(android.os.ParcelFileDescriptor,java.lang.String)
io.legere.pdfiumandroid.PdfPage$Companion: PdfPage$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
com.horcrux.svg.SvgViewManager: void setBorderBottomColor(android.view.View,java.lang.Integer)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setConsolePatchSettings(java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.fabric.ReactSurface createSurface(android.content.Context,java.lang.String,android.os.Bundle)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void cancelRequest(java.lang.String,com.facebook.react.bridge.Callback)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.camera.ImageStoreManager)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.SvgViewManager: void setBorderRightColor(com.horcrux.svg.SvgView,java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
app.notifee.core.model.NotificationAndroidModel: java.lang.Integer getColor()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setFontSize(com.facebook.react.views.text.ReactTextView,float)
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$destroy$8(java.lang.String,java.lang.Exception,com.facebook.react.runtime.internal.bolts.Task)
com.horcrux.svg.SvgViewManager: void setBorderTopEndRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.ReanimatedMessageQueueThread: ReanimatedMessageQueueThread()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.google.android.material.button.MaterialButton: int getInsetBottom()
org.wonday.pdf.PdfManager: void setSpacing(org.wonday.pdf.PdfView,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.swmansion.reanimated.nativeProxy.EventHandler: EventHandler(com.facebook.jni.HybridData)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$oldGetOrCreateReactInstanceTask$32(com.facebook.react.runtime.BridgelessReactContext,com.facebook.react.runtime.internal.bolts.Task)
io.invertase.notifee.NotifeeApiModule: void createChannelGroup(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
app.notifee.core.NotificationAlarmReceiver: NotificationAlarmReceiver()
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK1(android.view.View,float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: java.lang.String getValue()
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
androidx.work.impl.WorkManagerImpl$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFillRule(android.view.View,int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.swmansion.reanimated.NodesManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.swmansion.reanimated.NativeProxy: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder createNativeMethodsHolder(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
io.legere.pdfiumandroid.PdfDocument$Link: java.lang.Integer getDestPageIdx()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
com.horcrux.svg.SvgViewManager: void setBorderBottomLeftRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.FilterProperties$FeCompositeOperator: com.horcrux.svg.FilterProperties$FeCompositeOperator[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.SvgViewManager: void setBorderTopEndRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.freeraspreactnative.FreeraspReactNativeModule: void getThreatIdentifiers(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
me.leolin.shortcutbadger.impl.XiaomiHomeBadger: XiaomiHomeBadger()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor()
com.swmansion.reanimated.NodesManager: void updateProps(int,java.util.Map)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: TurboModuleInteropUtils()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String getMarkerName()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionDuration()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.horcrux.svg.SvgViewManager: void setVbWidth(android.view.View,float)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
com.swmansion.rnscreens.SearchBarManager: void setPlacement(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
androidx.work.impl.background.systemjob.SystemJobService$Api28Impl: android.net.Network getNetwork(android.app.job.JobParameters)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
com.swmansion.reanimated.AndroidUIScheduler: AndroidUIScheduler(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: void getName$annotations()
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.fabric.EmptyReactNativeConfig: java.lang.String getString(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
androidx.biometric.CryptoObjectUtils$Api23Impl: android.security.keystore.KeyGenParameterSpec buildKeyGenParameterSpec(android.security.keystore.KeyGenParameterSpec$Builder)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.oblador.vectoricons.VectorIconsModule: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void viewDidLayout(android.view.View)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: ReactNativeFirebaseMessagingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.lang.String component2()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: long getAnimationTimestamp()
com.horcrux.svg.VirtualViewManager: boolean isZero(double)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void checkDuplicateSharedTag(android.view.View)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface startSurface(com.facebook.react.runtime.ReactSurfaceImpl)
io.legere.pdfiumandroid.PdfDocument$Meta: void setModDate(java.lang.String)
com.horcrux.svg.VirtualViewManager: void setMarkerEnd(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.swmansion.reanimated.NativeProxy$1: boolean hasAnimation(int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.bridge.interop.InteropModuleRegistry: void registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.util.List getLogs()
com.horcrux.svg.events.SvgLoadEvent: SvgLoadEvent(int,int,com.facebook.react.bridge.ReactContext,java.lang.String,float,float)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.rnfs.RNFSManager: java.io.OutputStream getOutputStream(java.lang.String,boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$deleteToken$9(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.fabric.mounting.MountingManager: boolean isWaitingForViewAttach(int)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: int getJsArgCount(java.lang.String,java.lang.String,java.lang.Class[])
com.facebook.react.ReactHost: boolean onBackPressed()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void copyToMediaStore(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: java.lang.Object invokeSuspend(java.lang.Object)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: io.legere.pdfiumandroid.PdfDocument getDocument()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFilter(android.view.View,java.lang.String)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void isBluetoothHeadphonesConnected(com.facebook.react.bridge.Promise)
com.github.barteksc.pdfviewer.PDFView: void setSpacing(int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMask(android.view.View,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.time.Instant getEndExclusive()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
io.invertase.notifee.NotifeeApiModule: void lambda$displayNotification$13(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String component1()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void exists(java.lang.String,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
app.notifee.core.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.BV.LinearGradient.LinearGradientView: void setLocations(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadFramePriorityTask$Priority: com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadFramePriorityTask$Priority[] values()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeStream(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Callback)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
io.legere.pdfiumandroid.PdfPage: void nativeClosePage(long)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void jsonGetAll(com.facebook.react.bridge.Promise)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
io.invertase.notifee.NotifeeApiModule: void lambda$cancelDisplayedNotifications$1(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.facebook.react.devsupport.HMRClient: void disable()
com.github.barteksc.pdfviewer.PDFView: java.util.List getTableOfContents()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
io.legere.pdfiumandroid.PdfPage: void renderPage(android.view.Surface,int,int,int,int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.github.barteksc.pdfviewer.PDFView: float getZoom()
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: java.lang.Object invokeSuspend(java.lang.Object)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$FilterManager: void setPrimitiveUnits(android.view.View,java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetString(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
io.legere.pdfiumandroid.PdfDocument$PageCount: io.legere.pdfiumandroid.PdfDocument$PageCount copy(long,int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean isLegacyModule(java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void setupWindowInsets()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String toString()
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.SvgViewManager: void setPointerEvents(com.horcrux.svg.SvgView,java.lang.String)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] values()
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.gusparis.monthpicker.RNMPickerModule: java.lang.String getName()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void deleteChannel(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfTextPage: int textPageCountChars()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFilter(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.detectfrida.util.RootDetectorHelper: boolean isFoundDangerousProps()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
io.invertase.notifee.NotifeeEventSubscriber: void onForegroundServiceEvent(app.notifee.core.event.ForegroundServiceEvent)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void invokeApp(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead,int,java.lang.String,int,java.lang.Object)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setNotificationDelegationEnabled(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetMountItems()
io.legere.pdfiumandroid.PdfDocument: void recursiveGetBookmark(java.util.List,long,long)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void scrollTo(int,double,double,boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setColor(android.view.View,java.lang.Integer)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.facebook.react.runtime.ReactHostImpl: void handleHostException(java.lang.Exception)
androidx.biometric.BiometricManager$Api29Impl: java.lang.reflect.Method getCanAuthenticateWithCryptoMethod()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.facebook.react.bridge.JSIModule: void initialize()
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: TemporalInterval(java.time.Instant,java.time.Instant)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$Companion: kotlinx.serialization.KSerializer serializer()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.DevToolsReactPerfLogger: void addDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
org.wonday.pdf.PdfManager: void setScale(org.wonday.pdf.PdfView,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.aheaditec.talsec.security.g0$a: com.aheaditec.talsec.security.g0$a valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
app.notifee.core.model.NotificationAndroidModel: app.notifee.core.model.NotificationAndroidPressActionModel getFullScreenAction()
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.BV.LinearGradient.LinearGradientManager: com.BV.LinearGradient.LinearGradientView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: io.legere.pdfiumandroid.PdfTextPage getPage()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeOpacity(android.view.View,float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsRecursive(android.view.View)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getTitle()
com.horcrux.svg.VirtualView: double relativeOnHeight(com.horcrux.svg.SVGLength)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
org.wonday.pdf.PdfView: void setMaxScale(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] values()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] values()
io.legere.pdfiumandroid.PdfTextPage: long getPagePtr()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.BV.LinearGradient.LinearGradientView: void setAngle(float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$Companion: State$Rejected$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
app.notifee.core.Notifee: void getChannelGroup(java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.bridge.UIManagerListener: void didMountItems(com.facebook.react.bridge.UIManager)
io.legere.pdfiumandroid.suspend.PdfPageKt: boolean safeClose()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setVectorEffect(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.facebook.react.runtime.JSTimerExecutor: JSTimerExecutor(com.facebook.jni.HybridData)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void clearLocalNotification(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeLinejoin(android.view.View,int)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: java.lang.Object newDocument(android.os.ParcelFileDescriptor,java.lang.String,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDashoffset(android.view.View,float)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgView$Events: SvgView$Events(java.lang.String,int,java.lang.String)
com.google.android.gms.common.api.internal.zzd: zzd()
com.github.barteksc.pdfviewer.PDFView$State: com.github.barteksc.pdfviewer.PDFView$State valueOf(java.lang.String)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: ReanimatedNativeHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion$1: kotlinx.serialization.KSerializer invoke()
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.freeraspreactnative.FreeraspReactNativeModule: void getAppIcon$lambda$4(com.freeraspreactnative.FreeraspReactNativeModule,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: void keyboardEventDataUpdater(int,int)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.mountitems.MountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
app.notifee.core.model.a$a: app.notifee.core.model.a$a valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactHostImpl: void lambda$new$0(int,com.facebook.react.runtime.ReactInstance)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateDestroyTask$48(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.uimanager.events.Event: boolean canCoalesce()
com.facebook.react.views.view.ReactViewGroup: void onRtlPropertiesChanged(int)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname component7()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
app.notifee.core.model.NotificationAndroidActionModel: java.lang.String getTitle()
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setNativeBackgroundAndroid(android.view.View,com.facebook.react.bridge.ReadableMap)
io.legere.pdfiumandroid.PdfiumCore: java.util.List getTableOfContents(io.legere.pdfiumandroid.PdfDocument)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler access$getMainHandler$cp()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
io.legere.pdfiumandroid.PdfDocument: java.lang.Long nativeGetSiblingBookmark(long,long)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: int hashCode()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.freeraspreactnative.FreeraspReactNativeModule: android.os.HandlerThread access$getBackgroundHandlerThread$cp()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceSync()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion: State$Companion()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void setAutomaticDataCollectionEnabled(java.lang.String,java.lang.Boolean)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.aheaditec.talsec_security.security.Natives: java.lang.String i(android.content.Context,java.lang.String[])
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType getLogType()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffDuration()
com.github.barteksc.pdfviewer.PDFView: float getMaxZoom()
com.rnfs.RNFSManager: void copyFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String getName()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: java.lang.Object invokeSuspend(java.lang.Object)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setDeliveryMetricsExportToBigQuery$16(java.lang.Boolean)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int getSurfaceId()
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isIdle()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFillRule(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getLogType$annotations()
app.notifee.core.model.NotificationAndroidModel: java.lang.String getCategory()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void getDeliveredNotifications(com.facebook.react.bridge.Callback)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandlerHelper(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.core.TimingModule: void onHostResume()
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageGetCharIndexAtPos(double,double,double,double,kotlin.coroutines.Continuation)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface reload(java.lang.String)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toTargetMap()
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: java.lang.Object newDocument(android.os.ParcelFileDescriptor,kotlin.coroutines.Continuation)
com.facebook.react.fabric.GuardedFrameCallback: void doFrame(long)
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$MaskManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.BV.LinearGradient.LinearGradientManager: void setUseAngle(com.BV.LinearGradient.LinearGradientView,boolean)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.SvgViewManager: void setFocusable(com.horcrux.svg.SvgView,boolean)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: java.time.Instant component1()
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.fabric.BindingImpl: void stopSurface(int)
com.horcrux.svg.FilterProperties$EdgeMode: com.horcrux.svg.FilterProperties$EdgeMode[] values()
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskType(android.view.View,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(android.view.View,float)
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean dispatchMountItems()
io.invertase.notifee.NotifeeApiModule: void lambda$openBatteryOptimizationSettings$28(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.facebook.react.bridge.JSONArguments: JSONArguments()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass valueOf(java.lang.String)
app.notifee.core.Notifee: void stopForegroundService(app.notifee.core.interfaces.MethodCallResult)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getLightUpScreen()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
io.legere.pdfiumandroid.PdfTextPage: int textPageGetCharIndexAtPos(double,double,double,double)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.horcrux.svg.FilterUtils: android.graphics.Bitmap applySourceAlphaFilter(android.graphics.Bitmap)
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,float,float)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean)
com.BV.LinearGradient.LinearGradientView: void setUseAngle(boolean)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager: void setY(com.horcrux.svg.FilterPrimitiveView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void removeView(android.view.View,android.view.ViewGroup)
app.notifee.core.Notifee: void cancelAllNotificationsWithIds(int,java.util.List,java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
io.legere.pdfiumandroid.PdfTextPage: int textPageCountRects(int,int)
com.facebook.react.fabric.StateWrapperImpl: void destroyState()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.View,android.view.View,int)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void dropGestureHandler(double)
androidx.work.impl.utils.NetworkApi23: android.net.Network getActiveNetworkCompat(android.net.ConnectivityManager)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager$4: void run()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.swmansion.reanimated.ReanimatedModule: void installTurboModule(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: DispatchIntCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
app.notifee.core.Notifee: android.content.Context getContext()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
com.rnfs.RNFSManager: void readFileAssets(java.lang.String,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: java.lang.String component1()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setDownloadingMessage(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.uimanager.events.Event: int getViewTag()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesClearAll(com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.PdfDocument: void nativeCloseDocument(long)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
io.legere.pdfiumandroid.util.Config: boolean equals(java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasHmsSync()
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
app.notifee.core.RebootBroadcastReceiver: RebootBroadcastReceiver()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: PdfDocumentKt$openTextPages$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,int,int,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfDocument: java.util.List openPages(int,int)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setResponsible(android.view.View,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.views.view.ReactViewGroup: void recycleView()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMask(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String getName()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object renderPageBitmap(android.graphics.Bitmap,int,int,int,int,boolean,boolean,kotlin.coroutines.Continuation)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionEnd()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJniSignature(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
app.notifee.core.model.NotificationAndroidModel: java.lang.Integer getNumber()
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: PdfTextPageKt$textPageGetText$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,int,int,kotlin.coroutines.Continuation)
app.notifee.core.model.NotificationAndroidActionModel: NotificationAndroidActionModel(android.os.Bundle)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getProducer()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.facebook.react.fabric.GuardedFrameCallback: void doFrameGuarded(long)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFillOpacity(android.view.View,float)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFillOpacity(android.view.View,float)
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface prerenderSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.facebook.react.fabric.SurfaceHandlerBinding: void stop()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didDispatchMountItems()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addViewAt(int,int,int)
io.legere.pdfiumandroid.PdfDocument$Meta: void setCreationDate(java.lang.String)
androidx.biometric.CryptoObjectUtils$Api30Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(android.security.identity.IdentityCredential)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(android.view.View,com.facebook.react.bridge.Dynamic)
app.notifee.core.interfaces.MethodCallResult: void onComplete(java.lang.Exception,java.lang.Object)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.detectfrida.DetectFridaModule: DetectFridaModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.ReanimatedMessageQueueThread: boolean isIdle()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.horcrux.svg.RenderableViewManager: void setFilter(com.horcrux.svg.RenderableView,java.lang.String)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject(java.lang.Object)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
io.legere.pdfiumandroid.PdfiumCore: void renderPageBitmap(io.legere.pdfiumandroid.PdfDocument,android.graphics.Bitmap,int,int,int,int,int,boolean,boolean)
io.invertase.notifee.NotifeeApiModule: void addListener(java.lang.String)
io.legere.pdfiumandroid.PdfiumCore$Companion: PdfiumCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.EmptyReactNativeConfig: double getDouble(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
app.notifee.core.Notifee: void initialize(app.notifee.core.interfaces.EventListener)
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.JSEngineInstance,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.runtime.JSTimerExecutor,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,com.facebook.react.runtime.BindingsInstaller,boolean)
com.gantix.JailMonkey.JailMonkeyModule: java.util.Map getConstants()
io.invertase.firebase.common.ReactNativeFirebaseModule: void removeEventListeningExecutor(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object openPages(int,int,kotlin.coroutines.Continuation)
com.horcrux.svg.VirtualViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager: void setResult(com.horcrux.svg.FilterPrimitiveView,java.lang.String)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setVectorEffect(android.view.View,int)
com.horcrux.svg.SvgViewManager: void setMinY(android.view.View,float)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: java.time.Instant component1()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: long getTotalAvailableBlocks(android.os.StatFs,java.lang.Boolean)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
app.notifee.core.Notifee: void getDisplayedNotifications(app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.fabric.mounting.MountItemDispatcher: void executeOrEnqueue(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
me.leolin.shortcutbadger.impl.NewHtcHomeBadger: NewHtcHomeBadger()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderBottomStartRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.interfaces.fabric.SurfaceHandler)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initializeApp(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: java.lang.String toString()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void attachGestureHandler(double,double,double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval copy(java.time.Instant,java.time.Instant)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorageOld(com.facebook.react.bridge.Promise)
com.facebook.react.runtime.ReactHostImpl: void lambda$oldGetOrCreateReactInstanceTask$30()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setDeliveryMetricsExportToBigQuery$17(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
com.facebook.jni.DestructorThread: DestructorThread()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getTurboModulesEnabled$annotations()
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler getAndroidUIScheduler()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFillRule(android.view.View,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void mkdir(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.ReactHost: void onHostPause(android.app.Activity)
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.aheaditec.talsec_security.security.Natives: boolean f()
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.NodesManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setVerticalAlign(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.learnium.RNDeviceInfo.RNDeviceModule: void getLastUpdateTime(com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
org.wonday.pdf.PdfManager: void setPassword(org.wonday.pdf.PdfView,java.lang.String)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void viewDidLayout(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.swmansion.reanimated.NodesManager: void onHostResume()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
kotlin.enums.EnumEntriesSerializationProxy: java.lang.Object readResolve()
com.horcrux.svg.SvgViewManager: void setBorderTopColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallerPackageNameSync()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.views.view.ReactViewManagerWrapper,boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(android.view.View,com.facebook.react.bridge.Dynamic)
app.notifee.core.Notifee: void displayNotification(android.os.Bundle,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String getName()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
com.horcrux.svg.VirtualView: void setOpacity(float)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: PreviousOperator(java.time.Instant,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
io.legere.pdfiumandroid.PdfTextPage: PdfTextPage(io.legere.pdfiumandroid.PdfDocument,int,long,java.util.Map)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.horcrux.svg.RenderableViewManager$FeMergeManager: RenderableViewManager$FeMergeManager()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
org.wonday.pdf.PdfManager: void setScale(android.view.View,float)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.horcrux.svg.RenderableViewManager$FilterManager: void setX(com.horcrux.svg.FilterView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setName(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task newGetOrCreateReactInstanceTask()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.aheaditec.talsec.security.g0$a: com.aheaditec.talsec.security.g0$a[] values()
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
com.horcrux.svg.SvgView: void clearChildCache()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.horcrux.svg.VirtualViewManager$SVGClass: VirtualViewManager$SVGClass(java.lang.String,int)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.mounting.MountingManager: long measure(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.horcrux.svg.SvgView: boolean notRendered()
com.learnium.RNDeviceInfo.RNDeviceModule: void getCarrier(com.facebook.react.bridge.Promise)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.mounting.mountitems.MountItem: int getSurfaceId()
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getAvailableLocationProvidersSync()
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: com.reactnativecommunity.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setStdDeviationX(android.view.View,float)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedClipPath(java.lang.String)
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: java.lang.String getName()
com.horcrux.svg.SvgViewManager: void setNextFocusLeft(android.view.View,int)
com.facebook.react.fabric.FabricUIManager$2: FabricUIManager$2(com.facebook.react.fabric.FabricUIManager,int,com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
com.BV.LinearGradient.LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(android.view.View,float)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setStdDeviationX(com.horcrux.svg.FeGaussianBlurView,float)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFillRule(android.view.View,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$reload$6(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.horcrux.svg.RenderableView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.swmansion.reanimated.NodesManager: void registerEventHandler(com.facebook.react.uimanager.events.RCTEventEmitter)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: boolean equals(java.lang.Object)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getViewState(int)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacitySync()
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.swmansion.reanimated.ReaCompatibility: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalMemorySync()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toBasicMap()
androidx.work.NetworkType: androidx.work.NetworkType[] values()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: PreviousOperator$$serializer()
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: AlreadyClosedBehavior(java.lang.String,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.bridge.ReactBridge: ReactBridge()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: java.time.Instant getTimestamp()
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF nativeGetLinkRect(long,long)
io.invertase.notifee.NotifeeApiModule: void cancelDisplayedNotifications(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void addCompleteDownload(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(com.swmansion.rnscreens.Screen,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.drawee.view.DraweeView: java.lang.Object getExtraData()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFillOpacity(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.horcrux.svg.RenderableViewManager$FilterManager: void setHeight(com.horcrux.svg.FilterView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.util.List component3()
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void cancelLocalNotification(java.lang.String)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeLinejoin(android.view.View,int)
com.horcrux.svg.VirtualView: float getCanvasHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.sslpublickeypinning.SslPublicKeyPinningModule: void emitPinningErrorEvent(okhttp3.Request,java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.View)
org.wonday.pdf.PdfManager: void setEnableRTL(org.wonday.pdf.PdfView,boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.swmansion.reanimated.AndroidUIScheduler: void scheduleTriggerOnUI()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.swmansion.reanimated.NodesManager: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.biometric.CryptoObjectUtils$Api28Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(javax.crypto.Mac)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.aheaditec.talsec_security.security.Natives: int[] l()
com.facebook.react.runtime.ReactHostImpl: void onHostPause()
com.github.barteksc.pdfviewer.PDFView: com.github.barteksc.pdfviewer.scroll.ScrollHandle getScrollHandle()
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.horcrux.svg.SvgView: void onDetachedFromWindow()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: RenderableViewManager$FeGaussianBlurManager()
me.leolin.shortcutbadger.impl.DefaultBadger: DefaultBadger()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.Map getConstants()
com.swmansion.reanimated.Utils: int[] processIntArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
app.notifee.core.Notifee: void setRequestPermissionCallback(app.notifee.core.interfaces.MethodCallResult)
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
app.notifee.core.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$1(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void sendMessage(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTimestamp(com.facebook.react.bridge.ReactMarkerConstants)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task getJsBundleLoader()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: State(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
com.detectfrida.util.RootDetectorHelper: boolean isFoundHooks()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
com.dieam.reactnativepushnotification.modules.RNPushNotification: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUserAgent(com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.horcrux.svg.VirtualView: void setResponsible(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.util.AlreadyClosedBehavior getAlreadyClosedBehavior()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateDestroyTask$49(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType component9()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: boolean equals(java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isWiredHeadphonesConnectedSync()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setName(android.view.View,java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setName(android.view.View,java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.horcrux.svg.VirtualView: void clearParentCache()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.ReactApplication: com.facebook.react.ReactHost getReactHost()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.animated.gif.GifFrame: int nativeGetWidth()
com.facebook.react.fabric.BindingImpl: void setPixelDensity(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.toyberman.RNSslPinningModule: void fetch(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfDocument: boolean saveAsCopy$default(io.legere.pdfiumandroid.PdfDocument,io.legere.pdfiumandroid.PdfWriteCallback,int,int,java.lang.Object)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.detectfrida.util.RootDetectorHelper: boolean isFoundBusyboxBinary()
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactMarker: void notifyNativeMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.Long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
app.notifee.core.model.NotificationAndroidModel: java.lang.String getGroup()
com.swmansion.rnscreens.ScreensModule: ScreensModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getProfilingSettings()
io.legere.pdfiumandroid.suspend.PdfTextPageKt: PdfTextPageKt(io.legere.pdfiumandroid.PdfTextPage,kotlinx.coroutines.CoroutineDispatcher)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion: kotlinx.serialization.KSerializer get$cachedSerializer()
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArrayString(java.lang.String)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String getName()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String obtainProp(int,java.lang.String)
com.dieam.reactnativepushnotification.modules.RNPushNotification: android.os.Bundle getBundleFromIntent(android.content.Intent)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void channelBlocked(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: java.lang.Runnable getRunnable()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
app.notifee.core.Notifee: void getChannels(app.notifee.core.interfaces.MethodCallResult)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.fabric.FabricUIManager$4: int getSurfaceId()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.detectfrida.util.RootDetectorHelper: boolean isPermissiveSelinux()
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified copy(java.time.Instant)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] $values()
com.horcrux.svg.RenderableViewManager$PatternManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newStart$19(com.facebook.react.runtime.internal.bolts.Task)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion: kotlinx.serialization.KSerializer serializer()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.horcrux.svg.SvgView: void defineMarker(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDashoffset(android.view.View,float)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
io.invertase.notifee.NotifeeApiModule: void isChannelCreated(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getBBox(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.horcrux.svg.RenderableView: void setFilter(java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setBorderRightColor(android.view.View,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFillRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.MaskView$MaskType: com.horcrux.svg.MaskView$MaskType valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: PdfPageKt$openTextPage$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadEnd()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$Companion: State$Usable$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.freeraspreactnative.FreeraspReactNativeModule: com.facebook.react.bridge.ReactApplicationContext access$getAppReactContext$cp()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
org.wonday.pdf.PdfManager: void setMinScale(org.wonday.pdf.PdfView,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
io.invertase.notifee.NotifeeApiModule: void lambda$createChannelGroup$9(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.runtime.ReactHostImpl: void setCurrentActivity(android.app.Activity)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task oldStart()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: PdfDocumentKt$getTableOfContents$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,kotlin.coroutines.Continuation)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setNextFocusUp(com.horcrux.svg.SvgView,int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.rnfs.RNFSManager)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
org.wonday.pdf.PdfManager: void setPage(org.wonday.pdf.PdfView,int)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$oldStart$16(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.views.view.ReactViewManagerWrapper)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes[] values()
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
io.invertase.notifee.NotifeeApiModule: void lambda$requestPermission$25(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.swmansion.rnscreens.ScreensModule: void finishTransition(java.lang.Integer,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFillRule(android.view.View,int)
org.wonday.pdf.PdfManager: void setEnableDoubleTapZoom(org.wonday.pdf.PdfView,boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setIn2(android.view.View,java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: void talsecStart(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner: AndroidCertificateChainCleaner(android.net.http.X509TrustManagerExtensions)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isHeadphonesConnectedSync()
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.util.Config copy$default(io.legere.pdfiumandroid.util.Config,io.legere.pdfiumandroid.LoggerInterface,io.legere.pdfiumandroid.util.AlreadyClosedBehavior,int,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: State$Qualified(int,java.time.Instant,kotlinx.serialization.internal.SerializationConstructorMarker)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF getPageBleedBox()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
kotlinx.serialization.json.JsonPrimitive: JsonPrimitive()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.swmansion.reanimated.NodesManager: NodesManager(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.SvgViewManager: void setBorderBottomLeftRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.SvgViewManager: void setBorderStartColor(android.view.View,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int getSurfaceId()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: java.time.Instant component1()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setResponsible(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFillOpacity(android.view.View,float)
io.invertase.notifee.NotifeeApiModule: void displayNotification(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(android.view.View,java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.reactcommunity.rndatetimepicker.DatePickerModule)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.horcrux.svg.SvgViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
app.notifee.core.model.NotificationAndroidModel: NotificationAndroidModel(android.os.Bundle)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.google.android.material.button.MaterialButton: void setIconSize(int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageGetRect(int,kotlin.coroutines.Continuation)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForViewEnforced(int)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.bridge.NativeModule: void invalidate()
io.legere.pdfiumandroid.PdfiumCore: long openPage(io.legere.pdfiumandroid.PdfDocument,int)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
app.notifee.core.interfaces.EventListener: void onForegroundServiceEvent(app.notifee.core.event.ForegroundServiceEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$45(java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.horcrux.svg.RenderableView: RenderableView(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void channelExists(java.lang.String,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified deserialize(kotlinx.serialization.encoding.Decoder)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object openTextPage(kotlin.coroutines.Continuation)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion: void maybeLoadSoLibrary()
com.horcrux.svg.FilterRegion: android.graphics.Rect getCropRect(com.horcrux.svg.VirtualView,com.horcrux.svg.FilterProperties$Units,android.graphics.RectF)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(float)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.turbomodule.core.NativeModuleSoLoader: boolean access$isSoLibraryLoaded$cp()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
io.legere.pdfiumandroid.PdfPage$Companion: PdfPage$Companion()
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
com.horcrux.svg.VirtualView: VirtualView(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.learnium.RNDeviceInfo.RNDeviceModule: double getMaxMemorySync()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
io.invertase.notifee.NotifeeApiModule: void isChannelBlocked(java.lang.String,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: State$Rejected$$serializer()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void enableProgressReport(java.lang.String,int,int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void orderByAnimationTypes(java.util.List)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.gusparis.monthpicker.RNMPickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
app.notifee.core.model.NotificationAndroidPressActionModel: java.lang.String getLaunchActivity()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.rnfs.RNFSManager: byte[] getInputStreamBytes(java.io.InputStream)
com.horcrux.svg.RenderableViewManager$MarkerManager: RenderableViewManager$MarkerManager()
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
org.wonday.pdf.PdfView: void setScale(float)
com.horcrux.svg.VirtualView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
kotlin.collections.builders.SerializedMap: java.lang.Object readResolve()
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
app.notifee.core.EventSubscriber: void unregister(app.notifee.core.interfaces.EventListener)
com.facebook.react.fabric.SurfaceHandlerBinding: void setMountable(boolean)
io.legere.pdfiumandroid.PdfTextPage: int nativeTextCountRects(long,int,int)
com.horcrux.svg.SvgViewManager: void setBorderBlockStartColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.rnfs.RNFSManager: void existsRes(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void toggleSlowAnimations()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void willMountItems(java.util.List)
com.rnfs.RNFSManager: java.lang.String getOriginalFilepath(java.lang.String,boolean)
app.notifee.core.model.NotificationAndroidModel: long[] getVibrationPattern()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void preallocateView(java.lang.String,int,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setNodes(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setRemoveClippedSubviews(com.horcrux.svg.SvgView,boolean)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBaseOsSync()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: FabricUIManager$DispatchUIFrameCallback(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstanceId(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeOpacity(android.view.View,float)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: PdfPageKt$getPageWidth$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeMiterlimit(android.view.View,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
org.wonday.pdf.PdfManager: PdfManager(com.facebook.react.bridge.ReactApplicationContext)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesMessageQueueThread()
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.fabric.BindingImpl: void uninstallFabricUIManager()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$0(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(com.horcrux.svg.MarkerView,java.lang.String)
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner$Factory: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(com.reactnativecommunity.webview.RNCWebViewWrapper,int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupportedAbis(com.facebook.react.bridge.Promise)
com.horcrux.svg.VirtualView: double relativeOnFraction(com.horcrux.svg.SVGLength,float)
com.aheaditec.talsec.security.a3$a: com.aheaditec.talsec.security.a3$a valueOf(java.lang.String)
com.toyberman.RNSslPinningModule: RNSslPinningModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.NativeSvgRenderableModuleSpec: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.PdfPage: void nativeRenderPageBitmapWithMatrix(long,android.graphics.Bitmap,float[],android.graphics.RectF,boolean,boolean)
com.facebook.react.runtime.ReactHostImpl: void lambda$prerenderSurface$2(java.lang.String,com.facebook.react.runtime.ReactSurfaceImpl,com.facebook.react.runtime.ReactInstance)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
io.legere.pdfiumandroid.PdfDocument: io.legere.pdfiumandroid.PdfDocument$Meta getDocumentMeta()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.notifee.NotifeeApiModule: void lambda$getChannelGroups$18(com.facebook.react.bridge.Promise,java.lang.Exception,java.util.List)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.legere.pdfiumandroid.suspend.PdfDocumentKt: void close()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,int,java.util.Map)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFillOpacity(android.view.View,float)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
io.invertase.firebase.common.ReactNativeFirebaseModule: com.facebook.react.bridge.ReactContext getContext()
com.facebook.jni.CppException: CppException(java.lang.String)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(android.view.View,float)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(android.view.View,float)
com.facebook.react.ReactApplication: com.facebook.react.ReactNativeHost getReactNativeHost()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: PdfDocumentKt$getDocumentMeta$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,kotlin.coroutines.Continuation)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.learnium.RNDeviceInfo.RNDeviceModule: double getLastUpdateTimeSync()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
io.legere.pdfiumandroid.PdfTextPage: int nativeTextGetBoundedText(long,double,double,double,double,short[])
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.notifee.NotifeeApiModule: void invalidate()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.horcrux.svg.VirtualViewManager: java.lang.String getName()
com.freeraspreactnative.FreeraspReactNativeModule: com.aheaditec.talsec_security.security.api.TalsecConfig buildTalsecConfig(com.facebook.react.bridge.ReadableMap)
app.notifee.core.EventSubscriber: void register(app.notifee.core.interfaces.EventListener)
io.legere.pdfiumandroid.PdfiumCore: void renderPageBitmap$default(io.legere.pdfiumandroid.PdfiumCore,io.legere.pdfiumandroid.PdfDocument,android.graphics.Bitmap,int,int,int,int,int,boolean,boolean,int,java.lang.Object)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.horcrux.svg.VirtualViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(double)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.fabric.EmptyReactNativeConfig: EmptyReactNativeConfig()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.biometric.BiometricPrompt$ResetCallbackObserver: void resetCallback()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,int)
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFilter(android.view.View,java.lang.String)
org.wonday.pdf.PdfView: void setSinglePage(boolean)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void setModule(com.facebook.react.bridge.NativeModule)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: Operator$$serializer()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
kotlinx.serialization.json.ClassDiscriminatorMode: kotlinx.serialization.json.ClassDiscriminatorMode[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setIn2(com.horcrux.svg.FeBlendView,java.lang.String)
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.ReadableMap)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: boolean equals(java.lang.Object)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.learnium.RNDeviceInfo.RNDeviceModule: double getStartupTimeSync()
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
io.legere.pdfiumandroid.PdfiumCore: void closePage(io.legere.pdfiumandroid.PdfDocument,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: void getEmail$annotations()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.reactcommunity.rndatetimepicker.DatePickerModule: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeLinecap(android.view.View,int)
com.aheaditec.talsec.security.r1$a: com.aheaditec.talsec.security.r1$a[] values()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
org.wonday.pdf.PdfManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void doSnapshotForTopScreenViews(android.view.ViewGroup)
io.invertase.notifee.NotifeeApiModule: void hideNotificationDrawer()
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
io.legere.pdfiumandroid.PdfPasswordException: PdfPasswordException()
io.legere.pdfiumandroid.PdfDocument$Bookmark: long getPageIdx()
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getGroupSummary()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageOldSync()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getBufferedRuntimeExecutor()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: java.lang.Object newDocument(byte[],java.lang.String,kotlin.coroutines.Continuation)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitDuration()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.AndroidUIScheduler$1: AndroidUIScheduler$1(com.swmansion.reanimated.AndroidUIScheduler)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.rnfs.RNFSManager: void DeleteRecursive(java.io.File)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.rnfs.RNFSManager: void getFSInfo(com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: PdfPageKt$getPageLinks$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.sslpublickeypinning.SslPublicKeyPinningModule: void addListener(java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
io.legere.pdfiumandroid.PdfDocument: void setParcelFileDescriptor(android.os.ParcelFileDescriptor)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: java.lang.String toString()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unsubscribeFromKeyboardEvents(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void removeListeners(java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: android.view.View getView(int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$44(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending,java.time.Instant,int,java.lang.Object)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object renderPageBitmap$default(io.legere.pdfiumandroid.suspend.PdfPageKt,android.graphics.Bitmap,android.graphics.Matrix,android.graphics.RectF,boolean,boolean,kotlin.coroutines.Continuation,int,java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addBasicConfig(java.util.HashMap)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String createInvokeExceptionMessage(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
org.wonday.pdf.PdfManager: void setShowsVerticalScrollIndicator(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setColor(android.view.View,java.lang.Integer)
com.reactcommunity.rndatetimepicker.TimePickerModule: TimePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.ReanimatedModule: void onCatalystInstanceDestroy()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreensModule: void updateTransition(double)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setResponsible(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setIn1(android.view.View,java.lang.String)
app.notifee.core.database.NotifeeCoreDatabase_Impl: NotifeeCoreDatabase_Impl()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasSystemFeatureSync(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: boolean hasEnrolledFingerprints(java.lang.Object)
com.rnfs.RNFSManager: void rejectFileNotFound(com.facebook.react.bridge.Promise,java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger: boolean isFabricCommitMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.horcrux.svg.NativeSvgViewModuleSpec: void toDataURL(java.lang.Double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: int component1()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.horcrux.svg.NativeSvgRenderableModuleSpec: NativeSvgRenderableModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
com.horcrux.svg.SvgViewManager: void setBorderEndStartRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String getName()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsAddListener(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutViewsRemoval(int[])
app.notifee.core.model.NotificationAndroidStyleModel: com.google.common.util.concurrent.ListenableFuture getMessagingStyleTask(com.google.common.util.concurrent.ListeningExecutorService)
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.fingerprintjs.android.fingerprint.Fingerprinter$Version: com.fingerprintjs.android.fingerprint.Fingerprinter$Version valueOf(java.lang.String)
io.legere.pdfiumandroid.PdfiumCore: java.lang.Long[] openPage(io.legere.pdfiumandroid.PdfDocument,int,int)
app.notifee.core.event.LogEvent: java.lang.String getLevel()
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
com.swmansion.reanimated.ReanimatedPackage: ReanimatedPackage()
com.facebook.react.bridge.Dynamic: int asInt()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.animated.gif.GifImage: com.facebook.animated.gif.GifImage nativeCreateFromFileDescriptor(int,int,boolean)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: ReanimatedKeyboardEventListener$KeyboardState(java.lang.String,int,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIpAddressSync()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.franmontiel.persistentcookiejar.persistence.SerializableCookie: SerializableCookie()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
io.legere.pdfiumandroid.DefaultLogger: void e(java.lang.String,java.lang.Throwable,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutDuration()
com.facebook.drawee.view.DraweeView: void setExtraData(java.lang.Object)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: ReanimatedSensorContainer(java.lang.ref.WeakReference)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.biometric.KeyguardUtils$Api16Impl: boolean isKeyguardSecure(android.app.KeyguardManager)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending copy(java.time.Instant)
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setResponsible(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
com.horcrux.svg.VirtualViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.JSBundleLoader lambda$getJsBundleLoader$35()
com.horcrux.svg.SvgViewManager: void setBorderLeftColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.swmansion.reanimated.NativeMethodsHelper: NativeMethodsHelper()
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void lambda$manageChildren$0(java.util.ArrayList,android.view.View,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup)
com.horcrux.svg.SvgViewManager: void setBbHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setClipRule(android.view.View,int)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setColor(android.view.View,java.lang.Integer)
com.rnfs.RNFSManager: void stat(java.lang.String,com.facebook.react.bridge.Promise)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getBlob(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.NodesManager: float[] measure(int)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
app.notifee.core.Notifee: void createChannelGroups(java.util.List,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.turbomodule.core.NativeModuleSoLoader: void maybeLoadSoLibrary()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String getName()
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $values()
io.invertase.notifee.NotifeeApiModule: void openAlarmPermissionSettings(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.facebook.react.fabric.interop.InteropEvent: com.facebook.react.bridge.WritableMap getEventData()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void updateProps(int,java.util.Map)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.github.barteksc.pdfviewer.util.SnapEdge: com.github.barteksc.pdfviewer.util.SnapEdge valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(android.view.View,float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.horcrux.svg.SvgViewManager: void setHitSlop(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.github.barteksc.pdfviewer.PDFView: void setScrollHandle(com.github.barteksc.pdfviewer.scroll.ScrollHandle)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
io.legere.pdfiumandroid.PdfDocument: void close()
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion$1: kotlinx.serialization.KSerializer invoke()
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.lang.String toString()
io.legere.pdfiumandroid.PdfiumCore: void renderPage$default(io.legere.pdfiumandroid.PdfiumCore,io.legere.pdfiumandroid.PdfDocument,android.view.Surface,int,int,int,int,int,boolean,int,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeLinejoin(android.view.View,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult: com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult[] values()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
io.invertase.notifee.NotifeeApiModule: void lambda$deleteChannel$11(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactEditText: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitEnd()
com.facebook.react.runtime.ReactHostImpl: void lambda$startSurface$3(java.lang.String,com.facebook.react.runtime.ReactSurfaceImpl,com.facebook.react.runtime.ReactInstance)
com.reactnativecommunity.webview.RNCWebView: void setHasScrollEvent(boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
io.legere.pdfiumandroid.PdfTextPage: java.lang.String textPageGetBoundedText(android.graphics.RectF,int)
com.reactcommunity.rndatetimepicker.RNMaterialInputMode: com.reactcommunity.rndatetimepicker.RNMaterialInputMode valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: java.lang.String getName()
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: PreAllocateViewMountItem(int,int,java.lang.String,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForView(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addTargetConfig(java.util.HashMap)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setBorderBottomEndRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMidLine(com.horcrux.svg.TextPathView,java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: void blockScreenCapture$lambda$6(android.app.Activity,boolean,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.ModuleHolder: void destroy()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: Hostname(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createSendAccessibilityEventMountItem(int,int,int)
com.facebook.common.time.MonotonicClock: long now()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.LoggerInterface component1()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.runtime.ReactHostImpl: android.app.Activity getCurrentActivity()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void endLayoutAnimation(int,boolean)
com.horcrux.svg.SvgPackage: java.util.Collection getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.ReanimatedModule$1: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setFloodOpacity(android.view.View,float)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.rnfs.RNFSManager: void pathForBundle(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setIn1(com.horcrux.svg.FeColorMatrixView,java.lang.String)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.learnium.RNDeviceInfo.RNDeviceModule: void isWiredHeadphonesConnected(com.facebook.react.bridge.Promise)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateProps(int,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.facebook.react.uimanager.UIConstantsProvider: com.facebook.react.bridge.NativeMap getConstants()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfTextPage: io.legere.pdfiumandroid.PdfDocument getDoc()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.ReadableNativeArray: int size()
me.leolin.shortcutbadger.impl.ApexHomeBadger: ApexHomeBadger()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFillRule(android.view.View,int)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor(java.lang.String)
io.invertase.notifee.NotifeeApiModule: void lambda$createChannels$8(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.freeraspreactnative.FreeraspReactNativeModule: void onInvalidCallback()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
org.wonday.pdf.PdfManager: void setFitPolicy(org.wonday.pdf.PdfView,int)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: PdfDocumentKt$getPageCharCounts$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,kotlin.coroutines.Continuation)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.horcrux.svg.RenderableView: void setCurrentColor(java.lang.Integer)
com.horcrux.svg.RenderableViewManager$FilterManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.chip.Chip: void setGravity(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: LogType(java.lang.String,int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
androidx.work.impl.utils.NetworkApi21: android.net.NetworkCapabilities getNetworkCapabilitiesCompat(android.net.ConnectivityManager,android.net.Network)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void attachRootView(android.view.View,com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutNewView(android.view.View)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getConcurrentReactEnabled()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setCppVersion(java.lang.String)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getAsForegroundService()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void readStream(java.lang.String,java.lang.String,int,int,java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.horcrux.svg.VirtualViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.horcrux.svg.SvgView: void defineMask(com.horcrux.svg.VirtualView,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.PdfDocument newDocument(byte[],java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: boolean access$getTalsecStarted$cp()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
io.legere.pdfiumandroid.PdfDocument$PageCount: long component1()
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.jni.HybridClassBase: HybridClassBase()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String getName()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.work.impl.foreground.SystemForegroundService$Api29Impl: void startForeground(android.app.Service,int,android.app.Notification,int)
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder)
com.horcrux.svg.SvgViewManager: void setBorderBlockStartColor(android.view.View,java.lang.Integer)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.horcrux.svg.VirtualViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.horcrux.svg.CustomFilter: android.graphics.Bitmap apply(android.graphics.Bitmap,android.graphics.Bitmap,com.horcrux.svg.CustomFilterFunction)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerEnd(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$500(com.learnium.RNDeviceInfo.RNDeviceModule)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.Map getConstants()
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.sslpublickeypinning.SslPublicKeyPinningSpec: void removeListeners(double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.runtime.ReactHostImpl: void oldDestroyReactInstanceAndContext(java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.horcrux.svg.VirtualView: void setMarkerMid(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int,int)
com.horcrux.svg.FilterProperties$FeColorMatrixType: com.horcrux.svg.FilterProperties$FeColorMatrixType valueOf(java.lang.String)
app.notifee.core.Notifee: void getChannelGroups(app.notifee.core.interfaces.MethodCallResult)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void enqueuePendingEvent(int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageGetText(int,int,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.util.Config getConfig()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean haveExceededNonBatchedFrameTime(long)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.work.impl.WorkDatabase: WorkDatabase()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
io.invertase.notifee.NotifeeApiModule: void openBatteryOptimizationSettings(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getLocalOnly()
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleanerFactory getAndroidCertificateChainCleanerFactory()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void closeStream(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.BindingImpl: void renderTemplateToSurface(int,java.lang.String)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
app.notifee.core.model.NotificationAndroidModel: java.lang.Integer getSmallIcon()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
app.notifee.core.event.NotificationEvent: int getType()
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.reactcommunity.rndatetimepicker.TimePickerModule)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.horcrux.svg.VirtualView: void clip(android.graphics.Canvas,android.graphics.Paint)
com.swmansion.reanimated.sensor.ReanimatedSensorType: int getType()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUserAgentSync()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
io.legere.pdfiumandroid.PdfDocument$Meta: void setAuthor(java.lang.String)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFillOpacity(android.view.View,float)
io.legere.pdfiumandroid.PdfiumCore: java.lang.String textPageGetBoundedText(io.legere.pdfiumandroid.PdfDocument,int,android.graphics.RectF,int)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
app.notifee.core.event.BlockStateEvent: android.os.Bundle getChannelOrGroupBundle()
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: PdfPageKt$mapPageCoordsToDevice$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,int,int,int,int,double,double,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfDocument: int nativeGetPageCount(long)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.interop.InteropModuleRegistry: InteropModuleRegistry()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
io.legere.pdfiumandroid.PdfPage: float[] nativeGetPageCropBox(long)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.facebook.react.runtime.ReactSurfaceView: android.graphics.Point getViewportOffset()
com.swmansion.reanimated.AndroidUIScheduler: void deactivate()
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.work.WorkManager$UpdateResult: androidx.work.WorkManager$UpdateResult valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: void getName$annotations()
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
com.horcrux.svg.RenderableView: boolean setupFillPaint(android.graphics.Paint,float)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.ReactInstance: void callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void updateKeyboard(int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(android.view.View,float)
com.learnium.RNDeviceInfo.RNDeviceModule: long getBlockSize(android.os.StatFs,java.lang.Boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.horcrux.svg.VirtualView: void setName(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$Companion: State$Pending$Companion()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasKeyboard(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: void onAnimationFrame(double)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.invertase.notifee.NotifeeApiModule: void lambda$getInitialNotification$22(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(android.view.View,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$FilterManager: void setName(android.view.View,java.lang.String)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
org.wonday.pdf.PdfManager: void onDropViewInstance(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDeviceName(com.facebook.react.bridge.Promise)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
androidx.work.ExistingPeriodicWorkPolicy: androidx.work.ExistingPeriodicWorkPolicy valueOf(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
app.notifee.core.model.NotificationAndroidModel: app.notifee.core.model.NotificationAndroidStyleModel getStyle()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$addRootView$0(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
io.legere.pdfiumandroid.Logger: Logger()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$2(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule()
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.NodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateDestroyTask$46(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.horcrux.svg.NativeSvgRenderableModuleSpec: java.lang.String getName()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setIn1(android.view.View,java.lang.String)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void endCreatingModule()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.facebook.react.fabric.mounting.MountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.view.ReactViewManager: void setexperimental_layoutConformance(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setDisplay(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
androidx.work.impl.foreground.SystemForegroundService$Api31Impl: void startForeground(android.app.Service,int,android.app.Notification,int)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: io.legere.pdfiumandroid.PdfiumCore access$getCoreInternal$p(io.legere.pdfiumandroid.suspend.PdfiumCoreKt)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: PdfTextPageKt$textPageCountRects$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,int,int,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFillOpacity(android.view.View,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.Log deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.horcrux.svg.SvgViewManager: void setBorderStartStartRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
io.legere.pdfiumandroid.PdfPage: android.graphics.Rect mapRectToDevice(int,int,int,int,int,android.graphics.RectF)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFillRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isStopped()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void enableUploadProgressReport(java.lang.String,int,int)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,java.lang.Long)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(android.view.View,int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
okio.SegmentedByteString: java.lang.Object writeReplace()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setStdDeviationY(android.view.View,float)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(android.view.View,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertClassToJniType(java.lang.Class)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
org.wonday.pdf.PdfManager: void setMaxScale(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy getNativeProxy()
com.facebook.react.fabric.LongStreamingStats$1: int compare(java.lang.Long,java.lang.Long)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addPreAllocateMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.fabric.BindingImpl: void reportMount(int)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeLinecap(android.view.View,int)
com.BV.LinearGradient.LinearGradientManager: void setAngleCenter(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
io.legere.pdfiumandroid.PdfDocument$Meta: PdfDocument$Meta()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
io.legere.pdfiumandroid.suspend.PdfPageKt: void close()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.NodesManager: void onHostPause()
com.facebook.yoga.YogaNative: void jni_YGNodeDeallocateJNI(long)
com.facebook.react.bridge.Arguments: Arguments()
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
app.notifee.core.event.NotificationEvent: app.notifee.core.model.NotificationModel getNotification()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void cp(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfPage: int nativeGetPageHeightPoint(long)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.horcrux.svg.SvgViewManager: void setBorderTopRightRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
org.wonday.pdf.PdfManager: void setFitPolicy(android.view.View,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$Companion: State$Retired$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.reactcommunity.rndatetimepicker.DatePickerModule: void dismiss(com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.PdfPage: io.legere.pdfiumandroid.PdfDocument getDoc()
com.horcrux.svg.SvgViewManager: void setBorderEndEndRadius(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.legere.pdfiumandroid.PdfPasswordException: PdfPasswordException(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.uimanager.UIConstantsProviderManager: void installJSIBindings()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface: void remove()
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfDocument: boolean nativeSaveAsCopy(long,io.legere.pdfiumandroid.PdfWriteCallback,int)
app.notifee.core.ReceiverService: ReceiverService()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.facebook.react.fabric.LongStreamingStats$1: LongStreamingStats$1(com.facebook.react.fabric.LongStreamingStats)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
app.notifee.core.Notifee: void deleteChannel(java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.fabric.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getLogId$annotations()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
io.legere.pdfiumandroid.PdfDocument$PageCount: int hashCode()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.aheaditec.talsec_security.security.Natives: boolean m()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void deleteToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
org.wonday.pdf.PdfView: void setSpacing(int)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean,boolean,boolean,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeOpacity(android.view.View,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setTextLength(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.horcrux.svg.FilterProperties$FeColorMatrixType: com.horcrux.svg.FilterProperties$FeColorMatrixType[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: java.time.Instant getTimestamp()
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isEmulatorSync()
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
app.notifee.core.model.NotificationAndroidModel: app.notifee.core.model.NotificationAndroidModel$a getProgress()
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String component2()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
androidx.biometric.BiometricManager$Api29Impl: int canAuthenticate(android.hardware.biometrics.BiometricManager)
com.rnfs.RNFSManager: void read(java.lang.String,int,int,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.ReactContext: void resetPerfStats()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String getDescription()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: RenderableViewManager$GroupViewManagerAbstract(com.horcrux.svg.VirtualViewManager$SVGClass)
com.horcrux.svg.VirtualViewManager: void setRenderableView(int,com.horcrux.svg.RenderableView)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType getInstanceById(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactHost: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.swmansion.reanimated.R: R()
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedTemplate(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: int getApiLevelSync()
com.github.barteksc.pdfviewer.util.FitPolicy: com.github.barteksc.pdfviewer.util.FitPolicy[] values()
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dismissPopupMenu()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setBaselineShift(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
com.swmansion.reanimated.NativeMethodsHelper: float[] measure(android.view.View)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFillRule(android.view.View,int)
com.horcrux.svg.FilterUtils: android.graphics.Bitmap getBitmapWithColorMatrix(android.graphics.ColorMatrix,android.graphics.Bitmap)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
io.invertase.notifee.NotifeeApiModule: void requestPermission(com.facebook.react.bridge.Promise)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.github.barteksc.pdfviewer.PDFView: void setSwipeVertical(boolean)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String toString()
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService: ReactNativeFirebaseMessagingService()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.horcrux.svg.VirtualViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object mapDeviceCoordsToPage(int,int,int,int,int,int,int,kotlin.coroutines.Continuation)
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.PdfDocument newDocument(android.os.ParcelFileDescriptor)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManager(int)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: ReactNativeFirebaseAppRegistrar()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: DevToolsSettingsManagerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.horcrux.svg.SvgPackage: java.util.List getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
com.sslpublickeypinning.SslPublicKeyPinningModule: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.facebook.react.uimanager.events.Event: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
app.notifee.core.EventSubscriber: void onBlockStateEvent(app.notifee.core.event.BlockStateEvent)
io.legere.pdfiumandroid.PdfTextPage: double getFontSize(int)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
io.legere.pdfiumandroid.util.Size: int getWidth()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
com.sslpublickeypinning.SslPublicKeyPinningModule: void lambda$initializeCustomClientBuilder$0(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder,okhttp3.OkHttpClient$Builder)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
org.reactnative.maskedview.RNCMaskedViewManager: void setAndroidRenderingMode(org.reactnative.maskedview.RNCMaskedView,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void removeCallbacks()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: int hashCode()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()
com.swmansion.reanimated.NativeProxy$1: NativeProxy$1(java.lang.ref.WeakReference)
io.invertase.notifee.NotifeeApiModule: void openNotificationSettings(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.VirtualViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
com.horcrux.svg.CustomFilter: int normalizeFromFloats(float[])
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.horcrux.svg.events.SvgLoadEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.reactnativecommunity.webview.RNCWebView: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCBasicAuthCredential)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
app.notifee.core.Logger: void v(java.lang.String,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
io.legere.pdfiumandroid.PdfPasswordException: PdfPasswordException(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod: com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: int hashCode()
io.legere.pdfiumandroid.PdfDocument$Companion: PdfDocument$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFilter(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: FinalTreeHead$$serializer()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: State()
com.learnium.RNDeviceInfo.RNDeviceModule: android.net.wifi.WifiInfo getWifiInfo()
app.notifee.core.Notifee: void openPowerManagerSettings(android.app.Activity,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
io.legere.pdfiumandroid.PdfPage: int nativeGetPageWidthPoint(long)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void screenDidLayout()
io.legere.pdfiumandroid.PdfDocument: java.lang.Long nativeGetFirstChildBookmark(long,java.lang.Long)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void readFile(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getChronometerCountDown()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setResponsible(android.view.View,boolean)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getAutoCancel()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $values()
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
io.legere.pdfiumandroid.util.InitLock: InitLock()
com.facebook.react.runtime.ReactHostImpl: void lambda$new$1(int)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: void getType(com.facebook.react.bridge.Promise)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(android.view.View,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
app.notifee.core.AlarmPermissionBroadcastReceiver: AlarmPermissionBroadcastReceiver()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setClipRule(android.view.View,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$Companion: TemporalInterval$Companion()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
io.legere.pdfiumandroid.PdfiumCore: int textPageCountChars(io.legere.pdfiumandroid.PdfDocument,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
com.github.barteksc.pdfviewer.PDFView$ScrollDir: com.github.barteksc.pdfviewer.PDFView$ScrollDir valueOf(java.lang.String)
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.horcrux.svg.SvgViewManager: void setVbHeight(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfDocument$Bookmark: java.lang.String getTitle()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFillOpacity(android.view.View,float)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSystemManufacturerSync()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: NativeAsyncStorageModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgViewManager: void setBorderTopRightRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromFile(java.lang.String,java.lang.String)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.runtime.ReactHostImpl: void lambda$createMemoryPressureListener$11(java.lang.ref.WeakReference,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFilter(android.view.View,java.lang.String)
org.wonday.pdf.PdfManager: void setNativePage(org.wonday.pdf.PdfView,int)
io.invertase.notifee.NotifeeApiModule: java.lang.String getName()
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: PreviousOperator(int,java.time.Instant,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
com.reactnativecommunity.webview.RNCWebViewWrapper: com.reactnativecommunity.webview.RNCWebView getWebView()
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleanerFactory: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.gantix.JailMonkey.JailMonkeyModule: JailMonkeyModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: android.app.Activity getActivity()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setVectorEffect(android.view.View,int)
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
io.legere.pdfiumandroid.PdfPage: void renderPage$default(io.legere.pdfiumandroid.PdfPage,android.view.Surface,int,int,int,int,boolean,int,java.lang.Object)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebView: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.lang.String getFabricComponentName(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeLinecap(android.view.View,int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateState(int,com.facebook.react.uimanager.StateWrapper)
org.wonday.pdf.PdfManager: void setSinglePage(android.view.View,boolean)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: int asInt()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task loadBundle(com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.react.runtime.ReactInstance: void handleMemoryPressureJs(int)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.runtime.ReactHostImpl: void lambda$getDefaultBackButtonHandler$12()
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
io.invertase.notifee.NotifeeApiModule: void lambda$getTriggerNotifications$5(com.facebook.react.bridge.Promise,java.lang.Exception,java.util.List)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.SvgViewManager: void setBackfaceVisibility(com.horcrux.svg.SvgView,java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.learnium.RNDeviceInfo.RNDeviceModule: void getMacAddress(com.facebook.react.bridge.Promise)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setMinX(android.view.View,float)
com.facebook.react.bridge.GuardedRunnable: void run()
com.horcrux.svg.SvgViewManager: void setNextFocusDown(android.view.View,int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes valueOf(java.lang.String)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.facebook.react.turbomodule.core.NativeModuleSoLoader: void access$setSoLibraryLoaded$cp(boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.horcrux.svg.SvgView: void invalidate()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void startCreatingModule()
com.swmansion.reanimated.sensor.ReanimatedSensor: ReanimatedSensor(java.lang.ref.WeakReference,com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.shreemati.SecurityService.SecurityServiceManager: boolean isEmulatorByBattery(android.content.Context)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.learnium.RNDeviceInfo.RNDeviceModule: void registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedTransition(java.util.List,int)
io.legere.pdfiumandroid.PdfDocument$PageCount: void setCount(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void isPinOrFingerprintSet(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
app.notifee.core.EventSubscriber: android.content.Context getContext()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.swmansion.reanimated.NodesManager: void onCatalystInstanceDestroy()
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(com.horcrux.svg.MarkerView,float)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.View,int)
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: DispatchStringCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgPackage: java.util.List createJSModules()
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
com.reactcommunity.rndatetimepicker.RNDatePickerDisplay: com.reactcommunity.rndatetimepicker.RNDatePickerDisplay[] values()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.horcrux.svg.events.SvgLoadEvent: short getCoalescingKey()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragmentWrapper getFragmentWrapper()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.shreemati.SecurityService.SecurityServiceManager: boolean checkFiles(java.lang.String[])
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
io.invertase.notifee.NotifeeApiModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.github.barteksc.pdfviewer.PDFView: void setAutoSpacing(boolean)
com.facebook.hermes.intl.Intl: Intl()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.fabric.DevToolsReactPerfLogger: void removeDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessReactContext getOrCreateReactContext()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: int getThemeColor(android.content.Context,java.lang.String)
com.facebook.animated.gif.GifFrame: GifFrame(long)
com.facebook.react.runtime.ReactHostImpl: java.lang.Void lambda$newGetOrCreateDestroyTask$51(java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.State getState()
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMaxSize(int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
app.notifee.core.model.NotificationAndroidStyleModel: NotificationAndroidStyleModel(android.os.Bundle)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUniqueId(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long getMarkerTime()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.toyberman.RNSslPinningModule: com.facebook.react.bridge.WritableMap buildResponseHeaders(okhttp3.Response)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setResponsible(android.view.View,boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: PdfPageKt$getPageSize$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,kotlin.coroutines.Continuation)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBleedBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void df(com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setName(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void lstat(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.google.android.material.timepicker.MaterialTimePicker: MaterialTimePicker()
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onCatalystInstanceDestroy()
com.facebook.react.views.text.ReactTextView: void setFontSize(float)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setValues(com.horcrux.svg.FeColorMatrixView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.reanimated.AndroidUIScheduler$2: void runGuarded()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: java.lang.String toString()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void makeSnapshot(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
io.legere.pdfiumandroid.PdfPage: long[] nativeGetPageLinks(long)
com.swmansion.reanimated.NodesManager: void startUpdatingOnAnimationFrame()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetSupportMultipleWindows(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
io.legere.pdfiumandroid.PdfPage: float[] nativeGetPageBoundingBox(long)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.VirtualViewManager: void setPointerEvents(com.horcrux.svg.VirtualView,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderEndEndRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval component8()
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
app.notifee.core.Notifee: void isChannelCreated(java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallReferrer(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void maybeInit()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: java.lang.String toString()
com.reactcommunity.rndatetimepicker.RNMaterialInputMode: com.reactcommunity.rndatetimepicker.RNMaterialInputMode[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.horcrux.svg.VirtualView: boolean isResponsible()
kotlin.collections.builders.MapBuilder: java.lang.Object writeReplace()
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void clearAnimationConfigForTag(int)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean shouldEnableLegacyModuleInterop()
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
app.notifee.core.database.NotifeeCoreDatabase: NotifeeCoreDatabase()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
app.notifee.core.Notifee: void deleteChannelGroup(java.lang.String,app.notifee.core.interfaces.MethodCallResult)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String getName()
com.horcrux.svg.SvgViewModule: void toDataURL(java.lang.Double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion: kotlinx.serialization.KSerializer get$cachedSerializer()
com.reactcommunity.rndatetimepicker.MaterialTimePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFillOpacity(android.view.View,float)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageBoundingBox(kotlin.coroutines.Continuation)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeViewAt(int,int,int)
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeLinejoin(android.view.View,int)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.runtime.ReactHostImpl: void lambda$registerSegment$14(java.lang.String,int,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.runtime.ReactInstance)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDx(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.uimanager.events.Event: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetUnicode$2: PdfTextPageKt$textPageGetUnicode$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,int,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.SvgViewManager: void setBorderColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation: void execute(com.swmansion.reanimated.NodesManager)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$MaskManager: void setName(android.view.View,java.lang.String)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void abandonPermissions()
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: PdfPageKt$mapRectToDevice$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,int,int,int,int,android.graphics.RectF,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String toString()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setColor(android.view.View,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(android.view.View,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean shouldAnimateExiting(int,boolean)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.horcrux.svg.NativeSvgRenderableModuleSpec: boolean isPointInFill(java.lang.Double,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.horcrux.svg.VirtualView: float getCanvasWidth()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.android.material.button.MaterialButton: void setIconResource(int)
io.invertase.notifee.NotifeeApiModule: void lambda$deleteChannelGroup$12(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.rnfs.RNFSManager: void existsAssets(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: boolean isSurfaceAttached(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getUrl$annotations()
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int getModuleId()
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isPinOrFingerprintSetSync()
com.dieam.reactnativepushnotification.modules.RNPushNotification: RNPushNotification(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.facebook.react.fabric.mounting.MountingManager: long measureMapBuffer(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setConsolePatchSettings(java.lang.String)
io.invertase.notifee.NotifeeApiModule: void lambda$requestPermission$24(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.horcrux.svg.RenderableViewManager$FilterManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.swmansion.reanimated.NativeMethodsHelper: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired deserialize(kotlinx.serialization.encoding.Decoder)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3 copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3,java.time.Instant,java.lang.String,java.util.List,int,java.lang.Object)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.horcrux.svg.SvgPackage: java.util.Map getViewManagersMap(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
io.invertase.notifee.NotifeeApiModule: void getTriggerNotificationIds(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getCodename(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setClipRule(android.view.View,int)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: PdfDocumentKt$openPages$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,int,int,kotlin.coroutines.Continuation)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
io.legere.pdfiumandroid.PdfiumCore: void renderPage(io.legere.pdfiumandroid.PdfDocument,android.view.Surface,int,int,int,int,int,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeViewAttachMountItems()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setEdgeMode(com.horcrux.svg.FeGaussianBlurView,java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffEnd()
com.reactcommunity.rndatetimepicker.TimePickerModule: void lambda$open$0(androidx.fragment.app.FragmentManager,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setColor(android.view.View,java.lang.Integer)
com.BV.LinearGradient.LinearGradientView: void setEndPoint(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void checkDuplicateSharedTag(int,int)
com.facebook.react.modules.websocket.WebSocketModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.fabric.interop.InteropEventEmitter: void overrideEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.learnium.RNDeviceInfo.RNDeviceModule: void onCatalystInstanceDestroy()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setForceDarkOn(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
kotlin.enums.EnumEntriesList: java.lang.Object writeReplace()
com.fingerprintjs.android.fingerprint.signal_providers.StabilityLevel: com.fingerprintjs.android.fingerprint.signal_providers.StabilityLevel valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.uimanager.UIConstantsProviderManager: void staticInit()
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.Log)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.shreemati.SecurityService.SecurityServiceManager: boolean isEmulatorByCpuInfo()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion: LogType$Companion()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void hasPermission(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.horcrux.svg.RenderableView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.State component10()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void onNewIntent(android.content.Intent)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
io.legere.pdfiumandroid.PdfTextPage: double nativeGetFontSize(long,int)
com.facebook.react.uimanager.events.Event: long getTimestampMs()
com.reactcommunity.rndatetimepicker.RNDatePickerDisplay: com.reactcommunity.rndatetimepicker.RNDatePickerDisplay valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setResult(android.view.View,java.lang.String)
io.legere.pdfiumandroid.PdfDocument$PageCount: PdfDocument$PageCount(long,int)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFillRule(android.view.View,int)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setDeliveryMetricsExportToBigQuery(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
org.wonday.pdf.PdfManager: void onAfterUpdateTransaction(org.wonday.pdf.PdfView)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.View,android.view.View,int)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setOn(com.reactnativecommunity.checkbox.ReactCheckBox,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
com.horcrux.svg.RenderableViewManager$PatternManager: void setVectorEffect(android.view.View,int)
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.view.View resolveView(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
com.ReactNativeBlobUtil.Utils.FileProvider: FileProvider()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
me.leolin.shortcutbadger.impl.AdwHomeBadger: AdwHomeBadger()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.horcrux.svg.RenderableView: int getCurrentColor()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void addDevMenuOption()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setName(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: java.time.Instant component1()
com.facebook.react.ReactHost: void onHostDestroy()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeLinejoin(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: void getSha256RootHash$annotations()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: Operator(java.lang.String,java.util.List,java.util.List)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeDeleteTreeAt(int,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$createReactInstanceUnwraper$38(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.runtime.internal.bolts.Task,java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setColors(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: io.legere.pdfiumandroid.util.AlreadyClosedBehavior valueOf(java.lang.String)
io.invertase.notifee.NotifeeApiModule: void getChannels(com.facebook.react.bridge.Promise)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsNotifyReady(java.lang.Boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: int hashCode()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void setJSResponder(int,int,boolean)
org.wonday.pdf.PdfManager: void setHorizontal(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromAssets(android.content.res.AssetManager,java.lang.String)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
io.legere.pdfiumandroid.PdfDocument: long nativeLoadTextPage(long,long)
com.facebook.react.fabric.LongStreamingStats: double getMedian()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.JSEngineResolutionAlgorithm getJSEngineResolutionAlgorithm()
com.facebook.react.uimanager.NativeViewHierarchyManager: int getRootViewNum()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.rnfs.RNFSManager: java.lang.String getWriteAccessByAPILevel()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFillOpacity(android.view.View,float)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult: com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult valueOf(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.fabric.StateWrapperImpl: void updateState(com.facebook.react.bridge.WritableMap)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion$1: java.lang.Object invoke()
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
com.github.barteksc.pdfviewer.PDFView: void setMidZoom(float)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerStart(android.view.View,java.lang.String)
io.legere.pdfiumandroid.util.Size: int component1()
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$reload$5(java.lang.String,com.facebook.react.runtime.internal.bolts.Task)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isAirplaneModeSync()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.shreemati.SecurityService.SecurityServiceManager: boolean checkRootMethod3()
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebView)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.horcrux.svg.VirtualView: void setDisplay(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.util.List getOperators()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
io.legere.pdfiumandroid.util.ConfigKt: void setPdfiumConfig(io.legere.pdfiumandroid.util.Config)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVerticalAlign(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupportedMediaTypeList(com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
com.google.android.material.appbar.AppBarLayout: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeBackground()
app.notifee.core.model.NotificationAndroidStyleModel: androidx.core.app.NotificationCompat$Style lambda$getMessagingStyleTask$2(com.google.common.util.concurrent.ListeningExecutorService)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCodenameSync()
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.freeraspreactnative.models.RNSuspiciousAppInfo$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.ReactRootView: void setIsFabric(boolean)
io.legere.pdfiumandroid.util.Size: io.legere.pdfiumandroid.util.Size copy$default(io.legere.pdfiumandroid.util.Size,int,int,int,java.lang.Object)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
io.legere.pdfiumandroid.PdfDocument$Meta: void setSubject(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFillOpacity(android.view.View,float)
com.facebook.react.fabric.events.EventEmitterWrapper: boolean isValid()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFillRule(android.view.View,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext getContext()
org.wonday.pdf.PdfManager: void setEnableAnnotationRendering(org.wonday.pdf.PdfView,boolean)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
com.swmansion.reanimated.NodesManager: void scrollTo(int,double,double,boolean)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: DevToolsReactPerfLogger$FabricCommitPointData(long,int)
org.wonday.pdf.PdfManager: void setEnableAntialiasing(org.wonday.pdf.PdfView,boolean)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
app.notifee.core.event.ForegroundServiceEvent: app.notifee.core.model.NotificationModel getNotification()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
kotlinx.serialization.json.JsonElement$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.NodesManager: void onAnimationFrame(long)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostImpl$1Result lambda$newGetOrCreateReactInstanceTask$27(com.facebook.react.runtime.internal.bolts.Task)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.horcrux.svg.RenderableView: boolean hasOwnProperty(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getCTM(java.lang.Double)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: boolean equals(java.lang.Object)
app.notifee.core.Notifee: app.notifee.core.Notifee getInstance()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.reactnativecommunity.webview.RNCWebViewManager: void onAfterUpdateTransaction(com.reactnativecommunity.webview.RNCWebViewWrapper)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setRotate(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setIn1(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(com.horcrux.svg.MarkerView,float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
androidx.biometric.BiometricViewModel: BiometricViewModel()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: void setNextFocusRight(android.view.View,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.core.app.AlarmManagerCompat$Api21Impl: android.app.AlarmManager$AlarmClockInfo createAlarmClockInfo(long,android.app.PendingIntent)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.facebook.react.fabric.mounting.MountItemDispatcher: void addViewCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.facebook.react.fabric.FabricUIManager$5: FabricUIManager$5(com.facebook.react.fabric.FabricUIManager)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(android.view.View,int)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setDy(com.horcrux.svg.FeOffsetView,com.facebook.react.bridge.Dynamic)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $values()
com.horcrux.svg.RenderableViewManager$FeBlendManager: RenderableViewManager$FeBlendManager()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactHostImpl: void lambda$stopSurface$4(java.lang.String,com.facebook.react.runtime.ReactSurfaceImpl,com.facebook.react.runtime.ReactInstance)
kotlin.collections.AbstractList: AbstractList()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.reactnativecommunity.webview.RNCWebView: void setMenuCustomItems(java.util.List)
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF getPageTrimBox()
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isBluetoothHeadphonesConnectedSync()
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.runtime.ReactHostImpl: boolean isSurfaceWithModuleNameAttached(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: int getMaximumMergeDelay()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.shreemati.sslcertcheck.SSLPinningModule: SSLPinningModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.facebook.react.views.view.ReactViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported32BitAbisSync()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
androidx.biometric.PackageUtils$Api23Impl: boolean hasSystemFeatureFingerprint(android.content.pm.PackageManager)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: kotlin.enums.EnumEntries getEntries()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMask(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
org.wonday.pdf.PdfView: void setEnableAnnotationRendering(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.horcrux.svg.RenderableViewManager$FilterManager: void setY(com.horcrux.svg.FilterView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeLinecap(android.view.View,int)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.facebook.react.uimanager.events.Event: void onDispose()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFillOpacity(android.view.View,float)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableView: void setId(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.horcrux.svg.NativeSvgViewModuleSpec: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: ReactHostImpl(android.content.Context,com.facebook.react.runtime.ReactHostDelegate,com.facebook.react.fabric.ComponentFactory,java.util.concurrent.Executor,java.util.concurrent.Executor,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,boolean,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void isLocationEnabled(com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.swmansion.reanimated.Utils: java.util.Map processMapping(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setValues(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerMid(android.view.View,java.lang.String)
io.legere.pdfiumandroid.PdfPage: int nativeGetPageWidthPixel(long,int)
io.invertase.notifee.NotifeeApiModule: void getChannelGroups(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
app.notifee.core.event.BlockStateEvent: void setCompletionResult()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionStart()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: ReanimatedKeyboardEventListener(java.lang.ref.WeakReference)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$Companion: LogListV3$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.facebook.react.fabric.FabricUIManager$3: FabricUIManager$3(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.FilterRegion: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricJSIModuleProvider: FabricJSIModuleProvider(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig,com.facebook.react.uimanager.ViewManagerRegistry)
app.notifee.core.model.NotificationAndroidModel: java.lang.Integer getDefaults(java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeLinejoin(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
org.wonday.pdf.PdfView: void setTouchesEnabled(boolean)
com.horcrux.svg.SvgView: android.graphics.Bitmap getCurrentBitmap()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.horcrux.svg.SvgViewManager: void setNextFocusDown(com.horcrux.svg.SvgView,int)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.github.barteksc.pdfviewer.PDFView: void setDualPageMode(boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.horcrux.svg.VirtualView: void setClipRule(int)
com.freeraspreactnative.FreeraspReactNativeModule: FreeraspReactNativeModule(com.facebook.react.bridge.ReactApplicationContext)
com.toyberman.RNSslPinningModule: java.lang.String getDomainName(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void isHeadphonesConnected(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAccessibilityRole(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.reactcommunity.rndatetimepicker.RNTimePickerDisplay: com.reactcommunity.rndatetimepicker.RNTimePickerDisplay[] values()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadFramePriorityTask$Priority: com.facebook.fresco.animation.bitmap.preparation.loadframe.LoadFramePriorityTask$Priority valueOf(java.lang.String)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.horcrux.svg.events.SvgLoadEvent: java.lang.String getEventName()
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerMid(android.view.View,java.lang.String)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setGestureState(int,int)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setVectorEffect(android.view.View,int)
com.freeraspreactnative.FreeraspReactNativeModule: void access$setTalsecStarted$cp(boolean)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getEventNameResolver()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.Binding: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
io.legere.pdfiumandroid.PdfPage: int getPageHeight(int)
io.legere.pdfiumandroid.PdfPage: android.graphics.Point nativePageCoordsToDevice(long,int,int,int,int,int,double,double)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: IntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$reload$7(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.os.Parcelable castToParcelable(android.app.Person)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.detectfrida.DetectFridaModule: com.detectfrida.util.CheckTask access$getMTask$p(com.detectfrida.DetectFridaModule)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.horcrux.svg.SvgViewManager: void setBorderStyle(com.horcrux.svg.SvgView,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.BatchMountItem: boolean isBatchEmpty()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.bridge.ReactContext: void initializeInteropModules()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.horcrux.svg.VirtualView: void clearChildCache()
com.swmansion.reanimated.NativeMethodsHelper: com.facebook.react.views.scroll.ReactScrollView findScrollView(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.invertase.notifee.NotifeeApiModule: void lambda$getPowerManagerInfo$30(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String getName()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
app.notifee.core.Notifee: java.lang.String getMainComponent(java.lang.String)
com.swmansion.reanimated.Utils: Utils()
io.invertase.notifee.NotifeeApiModule: void lambda$stopForegroundService$32(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void progressLayoutAnimation(int,java.util.Map,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.rnfs.RNFSManager: void copyFileAssets(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeMiterlimit(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,android.app.Person)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: void write$Self(com.appmattus.certificatetransparency.internal.loglist.model.v3.State,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeOpacity(android.view.View,float)
com.google.android.material.chip.Chip: void setCheckable(boolean)
io.legere.pdfiumandroid.PdfDocument$Link: PdfDocument$Link(android.graphics.RectF,java.lang.Integer,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void flushOperations()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
kotlin.random.Random$Default: java.lang.Object writeReplace()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setOpacity(android.view.View,float)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService: ReactNativeFirebaseMessagingHeadlessService()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.learnium.RNDeviceInfo.RNDeviceModule: void getBootloader(com.facebook.react.bridge.Promise)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
org.wonday.pdf.PdfManager: void setPage(android.view.View,int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.ReactHost: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
org.wonday.pdf.PdfView: void setEnablePaging(boolean)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setClipRule(android.view.View,int)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getTableOfContents$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
com.horcrux.svg.SvgViewManager: void setNextFocusRight(com.horcrux.svg.SvgView,int)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: PdfPageKt$mapDeviceCoordsToPage$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,int,int,int,int,int,int,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: PdfDocumentKt$openTextPage$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setResponsible(android.view.View,boolean)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.mounting.MountingManager: void attachRootView(int,android.view.View,com.facebook.react.uimanager.ThemedReactContext)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getState$annotations()
androidx.biometric.KeyguardUtils$Api23Impl: android.app.KeyguardManager getKeyguardManager(android.content.Context)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String getName()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: boolean equals(java.lang.Object)
com.BV.LinearGradient.LinearGradientManager: LinearGradientManager()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFillOpacity(android.view.View,float)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String getName()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.reanimated.CopiedEvent: CopiedEvent(com.facebook.react.uimanager.events.Event)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task waitThenCallNewGetOrCreateReactInstanceTask()
app.notifee.core.model.NotificationAndroidModel: int getPriority()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType$Companion$1: LogType$Companion$1()
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDx(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(java.lang.String,int,com.facebook.react.bridge.WritableMap)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTree(android.view.View,com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.github.barteksc.pdfviewer.PDFView: float getMinZoom()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface start()
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.uimanager.ReanimatedUIManager: void dismissPopupMenu()
io.legere.pdfiumandroid.suspend.PdfDocumentKt: PdfDocumentKt(io.legere.pdfiumandroid.PdfDocument,kotlinx.coroutines.CoroutineDispatcher)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void logViewHierarchy(android.view.ViewGroup,boolean)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.horcrux.svg.SvgViewManager: void setBorderEndColor(android.view.View,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.github.barteksc.pdfviewer.util.SnapEdge: com.github.barteksc.pdfviewer.util.SnapEdge[] values()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.work.impl.Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.horcrux.svg.VirtualView: void onLayout(boolean,int,int,int,int)
io.legere.pdfiumandroid.PdfPage: void nativeClosePages(long[])
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
io.legere.pdfiumandroid.PdfiumCore: PdfiumCore()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
app.notifee.core.model.NotificationAndroidActionModel: app.notifee.core.model.NotificationAndroidActionModel fromBundle(android.os.Bundle)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDx(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropagateToDescendantsJNI(long)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.fingerprintjs.android.fingerprint.Fingerprinter$Version: com.fingerprintjs.android.fingerprint.Fingerprinter$Version[] values()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
app.notifee.core.Notifee: com.google.common.util.concurrent.ListeningExecutorService getListeningExecutorService()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.facebook.react.fabric.interop.InteropEvent: java.lang.String getEventName()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$isNotificationDelegationEnabled$3(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setResponsible(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.th3rdwave.safeareacontext.SafeAreaView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(int,okhttp3.ResponseBody)
app.notifee.core.Logger: void e(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewGroup: void removeView(android.view.View)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean isLayoutAnimationDisabled()
com.BV.LinearGradient.LinearGradientView: void setBorderRadii(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.swmansion.rnscreens.ScreenStack: java.util.ArrayList getFragments()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState valueOf(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void stat(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface start()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(android.view.View,java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: ReanimatedMessageQueueThreadBase()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getInitialNotification(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
kotlin.collections.builders.SetBuilder: java.lang.Object writeReplace()
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: SendAccessibilityEventMountItem(int,int,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String getName()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.horcrux.svg.SvgView: boolean isResponsible()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
app.notifee.core.model.NotificationAndroidStyleModel: androidx.core.app.NotificationCompat$InboxStyle getInboxStyle()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.checkbox.ReactCheckBox)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFillRule(android.view.View,int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
com.horcrux.svg.SvgViewManager: void setBackfaceVisibility(android.view.View,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
androidx.work.impl.utils.NetworkApi24: void registerDefaultNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback)
com.shreemati.SecurityService.SecurityServiceManager: boolean checkSensors(android.hardware.SensorManager)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.horcrux.svg.SvgViewManager: void setNativeBackgroundAndroid(com.horcrux.svg.SvgView,com.facebook.react.bridge.ReadableMap)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isLocationEnabledSync()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeLinecap(android.view.View,int)
com.rnfs.RNFSManager: void scanFile(java.lang.String,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.Log copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.Log,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,okhttp3.HttpUrl,com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname,com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType,com.appmattus.certificatetransparency.internal.loglist.model.v3.State,int,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageArtBox(kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(com.th3rdwave.safeareacontext.SafeAreaViewEdges)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.util.List component5()
app.notifee.core.interfaces.EventListener: void onBlockStateEvent(app.notifee.core.event.BlockStateEvent)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.detectfrida.util.RootDetectorHelper: boolean isFoundResetprop()
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.swmansion.reanimated.sensor.ReanimatedSensor: void cancel()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
kotlinx.serialization.json.JsonElement: JsonElement()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
androidx.appcompat.widget.SearchView: int getInputType()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPages$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: void ensureKeysAreImported()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
io.legere.pdfiumandroid.PdfDocument: io.legere.pdfiumandroid.PdfPage openPage(int)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setName(android.view.View,java.lang.String)
com.facebook.jni.DestructorThread$Terminus: void destruct()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus[] values()
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
com.horcrux.svg.SvgView$Events: java.lang.String toString()
kotlinx.serialization.json.JsonNull: JsonNull()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDevice(com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$Companion: LogListV3$Companion()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setAutoInitEnabled(java.lang.Boolean,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.facebook.react.ReactHost: void removeBeforeDestroyListener(kotlin.jvm.functions.Function0)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager startSurface(int,com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$Companion: State$ReadOnly$Companion()
com.facebook.animated.gif.GifImage: GifImage(long)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: NativeProxyCommon(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.notifee.NotifeeApiModule: java.util.Map getConstants()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactInstance lambda$oldGetOrCreateReactInstanceTask$31(com.facebook.react.runtime.BridgelessReactContext,com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.runtime.internal.bolts.Task)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
io.invertase.notifee.NotifeeApiModule: void deleteChannelGroup(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeOpacity(android.view.View,float)
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.imagepicker.ImagePickerModule: void launchCamera(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.bridge.Dynamic: double asDouble()
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.sslpublickeypinning.SslPublicKeyPinningSpec: void addListener(java.lang.String)
com.horcrux.svg.VirtualViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.runtime.ReactHostImpl: java.util.Collection getNativeModules()
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat valueOf(java.lang.String)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported32BitAbis(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: SharedTransitionManager$SnapshotTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.github.barteksc.pdfviewer.PDFView: void setFitEachPage(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String getName()
com.horcrux.svg.SvgViewManager: void setBorderLeftColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK4(com.horcrux.svg.FeCompositeView,float)
com.facebook.react.runtime.ReactHostImpl: void lambda$loadBundle$13(com.facebook.react.bridge.JSBundleLoader,com.facebook.react.runtime.ReactInstance)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: void getEndExclusive$annotations()
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode[] values()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
io.invertase.notifee.NotifeeApiModule: void createChannel(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.modules.intent.IntentModule: void invalidate()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraints(int,int,int,int,boolean,boolean,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int getSurfaceId()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.Binding: void reportMount(int)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.horcrux.svg.RenderableView: boolean setupStrokePaint(android.graphics.Paint,float)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF getPageMediaBox()
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean hasFullScreenAction()
com.dieam.reactnativepushnotification.modules.RNPushNotification: java.lang.String getName()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageTrimBox$2: PdfPageKt$getPageTrimBox$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.learnium.RNDeviceInfo.RNDeviceModule: void getApiLevel(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.rnfs.RNFSManager)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
kotlinx.serialization.json.JsonNull: kotlinx.serialization.KSerializer serializer()
io.legere.pdfiumandroid.PdfTextPage: int nativeTextGetUnicode(long,int)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void presentLocalNotification(com.facebook.react.bridge.ReadableMap)
io.legere.pdfiumandroid.PdfTextPage: void nativeCloseTextPage(long)
com.facebook.react.fabric.LongStreamingStats: LongStreamingStats()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
com.rnfs.RNFSManager: void readFile(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor: void run(android.view.View)
com.facebook.react.runtime.ReactHostImpl: void oldDestroy(java.lang.String,java.lang.Exception)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface reload(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.work.impl.background.systemjob.SystemJobService$Api24Impl: android.net.Uri[] getTriggeredContentUris(android.app.job.JobParameters)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.learnium.RNDeviceInfo.RNDeviceModule: void getPreviewSdkInt(com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
io.legere.pdfiumandroid.PdfDocument$Bookmark: void setPageIdx(long)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
io.legere.pdfiumandroid.PdfiumCore: android.graphics.RectF nativeGetLinkRect(long)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.aheaditec.talsec_security.security.Natives: byte[] d(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean hasAnimationForTag(int,int)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$Companion: TemporalInterval$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getDefaultEventEmitter()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.facebook.react.fabric.BindingImpl: BindingImpl()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setClipRule(android.view.View,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.interop.InteropEventEmitter: InteropEventEmitter(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.animated.NativeAnimatedModule)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalMemory(com.facebook.react.bridge.Promise)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMask(android.view.View,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$4: PdfPageKt$renderPageBitmap$4(io.legere.pdfiumandroid.suspend.PdfPageKt,android.graphics.Bitmap,android.graphics.Matrix,android.graphics.RectF,boolean,boolean,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
com.swmansion.reanimated.NativeProxy: NativeProxy(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.sslpublickeypinning.SslPublicKeyPinningModule: void initialize(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
io.legere.pdfiumandroid.PdfPage: int getPageHeightPoint()
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
io.legere.pdfiumandroid.PdfiumCore: android.graphics.Rect mapRectToDevice(io.legere.pdfiumandroid.PdfDocument,int,int,int,int,int,int,android.graphics.RectF)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$oldStart$17()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fresco.animation.bitmap.preparation.ondemandanimation.FrameResult$FrameType: com.facebook.fresco.animation.bitmap.preparation.ondemandanimation.FrameResult$FrameType[] values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager: void setHeight(com.horcrux.svg.FilterPrimitiveView,com.facebook.react.bridge.Dynamic)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isBatteryChargingSync()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.rnfs.RNFSManager: void rejectFileIsDirectory(com.facebook.react.bridge.Promise)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeChunk(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF getPageCropBox()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType[] values()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: java.lang.String toString()
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.reanimated.NodesManager$1: NodesManager$1(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
kotlin.collections.AbstractMutableList: AbstractMutableList()
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.horcrux.svg.FilterRegion: FilterRegion()
com.reactcommunity.rndatetimepicker.NativeModuleMaterialTimePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.FilterProperties$FeCompositeOperator: com.horcrux.svg.FilterProperties$FeCompositeOperator valueOf(java.lang.String)
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.swmansion.reanimated.MapUtils: java.lang.String getString(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleName()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean checkIfTopScreenHasHeader(android.view.ViewGroup)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFilter(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageLinks(kotlin.coroutines.Continuation)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.View,android.view.View,int)
com.github.barteksc.pdfviewer.PDFView: float getCurrentYOffset()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.View,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void flushOperations()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean isLayoutAnimationEnabled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
io.legere.pdfiumandroid.PdfiumCore: int getPageWidthPoint(io.legere.pdfiumandroid.PdfDocument,int)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$sendMessage$12(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.fabric.SurfaceHandlerBinding: void setProps(com.facebook.react.bridge.NativeMap)
com.horcrux.svg.VirtualView: int hitTest(float[])
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getTemporalInterval$annotations()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $values()
com.rnfs.RNFSManager: void write(java.lang.String,java.lang.String,int,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setTransformOrigin(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.View,android.view.View,int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void replaceExistingNonRootView(int,int)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.animated.NativeAnimatedModule)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void setUpCallbacks()
io.invertase.notifee.NotifeeApiModule: void lambda$createChannelGroups$10(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.horcrux.svg.VirtualViewManager: void onAfterUpdateTransaction(android.view.View)
com.github.barteksc.pdfviewer.PDFView: com.github.barteksc.pdfviewer.util.FitPolicy getPageFitPolicy()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$deleteToken$8(com.google.firebase.messaging.FirebaseMessaging)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMask(android.view.View,java.lang.String)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateDestroyTask$47(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void registerExitingAncestors(android.view.View)
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
com.horcrux.svg.SvgView: void setVbHeight(float)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int getSurfaceId()
com.horcrux.svg.SvgViewManager: void setFocusable(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
io.invertase.notifee.NotifeeApiModule: void lambda$openNotificationSettings$27(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
org.wonday.pdf.PdfManager: void setSpacing(android.view.View,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setAlignmentBaseline(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebView: com.reactnativecommunity.webview.RNCWebViewClient getRNCWebViewClient()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean shouldReturnInteropModule(java.lang.Class)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVectorEffect(android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.franmontiel.persistentcookiejar.persistence.SerializableCookie: void writeObject(java.io.ObjectOutputStream)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.facebook.react.defaults.DefaultComponentsRegistry$Companion: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItems(long)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: void addPoint(com.facebook.react.bridge.ReactMarkerConstants,com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setResult(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.ReactHost: void addBeforeDestroyListener(kotlin.jvm.functions.Function0)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.horcrux.svg.VirtualViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFillRule(android.view.View,int)
androidx.constraintlayout.widget.Barrier: int getType()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.SvgView: int hitTest(float,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname$Companion: Hostname$Companion()
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.lang.String component2()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleSetJSResponder(double,boolean)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
com.facebook.animated.gif.GifImage: int nativeGetDuration()
app.notifee.core.Notifee: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.yoga.YogaNative: int jni_YGConfigGetErrataJNI(long)
com.github.barteksc.pdfviewer.PDFView: void setPageFitPolicy(com.github.barteksc.pdfviewer.util.FitPolicy)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.learnium.RNDeviceInfo.RNDeviceModule: void hasGms(com.facebook.react.bridge.Promise)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
com.horcrux.svg.RenderableView: void setFillOpacity(float)
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode[] values()
app.notifee.core.model.NotificationAndroidModel: java.util.ArrayList getLights()
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
com.horcrux.svg.NativeSvgViewModuleSpec: NativeSvgViewModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.BV.LinearGradient.LinearGradientManager: void setColors(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.github.barteksc.pdfviewer.PDFView: float getMidZoom()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.uimanager.StateWrapper castToState(java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getTurboModulesEnabled()
com.facebook.react.animated.NativeAnimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
io.legere.pdfiumandroid.PdfPage: float[] nativeGetPageArtBox(long)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData initHybrid()
com.sslpublickeypinning.SslPublicKeyPinningModule: void disable(com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
org.wonday.pdf.PdfManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.horcrux.svg.FilterRegion: void setY(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String lambda$getToken$6(com.google.firebase.messaging.FirebaseMessaging)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object mapRectToPage(int,int,int,int,int,android.graphics.Rect,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
app.notifee.core.interfaces.EventListener: void onLogEvent(app.notifee.core.event.LogEvent)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isCameraPresentSync()
com.horcrux.svg.RenderableView: void setFillRule(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFillOpacity(android.view.View,float)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
app.notifee.core.EventSubscriber: void onLogEvent(app.notifee.core.event.LogEvent)
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean tryDispatchMountItems()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDashoffset(android.view.View,float)
io.legere.pdfiumandroid.util.AlreadyClosedBehavior: io.legere.pdfiumandroid.util.AlreadyClosedBehavior[] $values()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: PdfPageKt$getPageCropBox$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedAnimationForView(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot,int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
io.legere.pdfiumandroid.PdfiumCore: android.graphics.RectF mapRectToPage(io.legere.pdfiumandroid.PdfDocument,int,int,int,int,int,int,android.graphics.Rect)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.swmansion.reanimated.NativeMethodsHelper: void scrollTo(android.view.View,double,double,boolean)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: RenderableViewManager$FeColorMatrixManager()
com.facebook.react.uimanager.LayoutShadowNode: void setGap(float)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.runtime.ReactHostImpl: void moveToHostDestroy(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(android.view.View,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
io.invertase.notifee.NotifeeEventSubscriber: NotifeeEventSubscriber()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.freeraspreactnative.models.RNPackageInfo$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.BV.LinearGradient.LinearGradientView: void setAngleCenter(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.NativeScreensModuleSpec: java.lang.String getName()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$Companion: State$Rejected$Companion()
io.legere.pdfiumandroid.PdfiumCore: java.util.List getPageLinks(io.legere.pdfiumandroid.PdfDocument,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setVectorEffect(android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
io.legere.pdfiumandroid.Logger: void setLogger(io.legere.pdfiumandroid.LoggerInterface)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
kotlin.jvm.internal.Lambda: int getArity()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.runtime.ReactHostImpl: void lambda$oldDestroyReactInstanceAndContext$54(java.lang.String,com.facebook.react.runtime.ReactInstance)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.detectfrida.util.RootDetectorHelper: boolean isFoundSuBinary()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void makeSnapshotOfTopScreenViews(android.view.ViewGroup)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.horcrux.svg.VirtualView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFilter(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int getRetries()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: DefaultNewArchitectureEntryPoint()
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: State$Retired(java.time.Instant)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeLinejoin(android.view.View,int)
com.reactnativecommunity.webview.RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerEnforced(int,java.lang.String)
com.facebook.react.ReactHost: void onHostDestroy(android.app.Activity)
io.legere.pdfiumandroid.suspend.PdfPageKt: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(io.legere.pdfiumandroid.suspend.PdfPageKt)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
org.wonday.pdf.PdfView: void setPath(java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead getFinalTreeHead()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void removeListeners(java.lang.Integer)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setRotate(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.swmansion.reanimated.NodesManager: java.lang.String obtainProp(int,java.lang.String)
com.swmansion.reanimated.CopiedEvent: int getTargetTag()
com.horcrux.svg.SvgViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerEnd(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setVerticalAlign(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
io.legere.pdfiumandroid.Logger: void e(java.lang.String,java.lang.Throwable,java.lang.String)
com.aheaditec.talsec_security.security.api.Natives: void stop()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void addListener(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPages$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.runtime.ReactHostImpl: void onHostDestroy(android.app.Activity)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setClipRule(android.view.View,int)
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: void getTimestamp$annotations()
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: boolean haveExceededNonBatchedFrameTime(long)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
org.wonday.pdf.PdfView: void setMinScale(float)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setEnabled(com.reactnativecommunity.checkbox.ReactCheckBox,boolean)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String component3()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(android.view.View,int)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems(java.util.Queue)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval deserialize(kotlinx.serialization.encoding.Decoder)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setBorderBottomEndRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: void getLogListTimestamp$annotations()
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.lang.String getName()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeight$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.biometric.KeyguardUtils$Api23Impl: boolean isDeviceSecure(android.app.KeyguardManager)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreensModule: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: int lambda$sortViewsByTags$0(android.view.View,android.view.View)
io.legere.pdfiumandroid.PdfDocument: int[] nativeGetPageCharCounts(long)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getLoopSound()
com.aheaditec.talsec_security.security.Natives: boolean e()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
io.legere.pdfiumandroid.PdfiumCore$Companion: io.legere.pdfiumandroid.util.InitLock isReady()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int registerSensor(com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task callWithExistingReactInstance(java.lang.String,com.facebook.react.runtime.ReactHostImpl$VeniceThenable)
io.legere.pdfiumandroid.PdfDocument$Companion: PdfDocument$Companion()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setBaselineShift(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setAndroidUIScheduler(com.swmansion.reanimated.AndroidUIScheduler)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.FabricUIManager$4: FabricUIManager$4(com.facebook.react.fabric.FabricUIManager,int,int,int,boolean)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
com.gusparis.monthpicker.adapter.RNActions: com.gusparis.monthpicker.adapter.RNActions valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void incrementRetries()
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.learnium.RNDeviceInfo.RNDeviceModule: double getFirstInstallTimeSync()
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getBridgelessEnabled$annotations()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
com.horcrux.svg.SvgView: void setMinY(float)
com.swmansion.rnscreens.ScreensModule: int[] startTransition(java.lang.Integer)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: boolean equals(java.lang.Object)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebView: boolean getMessagingEnabled()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
androidx.biometric.BiometricManager$Api30Impl: int canAuthenticate(android.hardware.biometrics.BiometricManager,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: java.util.List getComponents()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.swmansion.reanimated.nativeProxy.SensorSetter: SensorSetter(com.facebook.jni.HybridData)
com.rnfs.RNFSManager: RNFSManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.ReactHostImpl: boolean isInstanceInitialized()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
app.notifee.core.Notifee: void createTriggerNotification(android.os.Bundle,android.os.Bundle,app.notifee.core.interfaces.MethodCallResult)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewMessagingModule: void onMessage(com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetViewCommandMountItems()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String getName()
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.bridge.ReactContext)
com.imagepicker.ImagePickerModule: void launchImageLibrary(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: NativeModuleTimePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired,java.time.Instant,int,java.lang.Object)
com.reactcommunity.rndatetimepicker.NativeModuleMaterialTimePickerSpec: NativeModuleMaterialTimePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.swmansion.reanimated.ReanimatedUIManagerFactory: ReanimatedUIManagerFactory()
com.horcrux.svg.RenderableViewManager$PatternManager: void setClipRule(android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSecurityPatch(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.LongStreamingStats: double getAverage()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFilter(android.view.View,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: State$Rejected(java.time.Instant)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeFileArray(java.lang.String,com.facebook.react.bridge.ReadableArray,boolean,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBuildIdSync()
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.time.Instant component2()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
app.notifee.core.model.NotificationAndroidModel: app.notifee.core.model.NotificationAndroidModel fromBundle(android.os.Bundle)
com.learnium.RNDeviceInfo.RNDeviceModule: void isBatteryCharging(com.facebook.react.bridge.Promise)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setNotificationDelegationEnabled$4(java.lang.Boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDisplaySync()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int getSurfaceId()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead deserialize(kotlinx.serialization.encoding.Decoder)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(android.view.View,boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Boolean lambda$hasPermission$10()
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.animated.gif.GifImage: boolean nativeIsAnimated()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToDevice$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.react.runtime.ReactInstance: void registerSegmentNative(int,java.lang.String)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.github.barteksc.pdfviewer.PDFView: void setDefaultPage(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task isMetroRunning()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
com.gusparis.monthpicker.adapter.RNProps: com.gusparis.monthpicker.adapter.RNProps valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: void open$lambda$0(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise,androidx.fragment.app.FragmentManager,com.reactcommunity.rndatetimepicker.MaterialDatePickerModule)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.franmontiel.persistentcookiejar.persistence.SerializableCookie: void readObject(java.io.ObjectInputStream)
io.legere.pdfiumandroid.PdfPage: int getPageIndex()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeFile(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.detectfrida.util.RootDetectorHelper: boolean isDetectedDevKeys()
androidx.core.app.AlarmManagerCompat$Api21Impl: void setAlarmClock(android.app.AlarmManager,java.lang.Object,android.app.PendingIntent)
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String access$getTHREAT_CHANNEL_KEY$cp()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.dieam.reactnativepushnotification.modules.RNPushNotification: void getInitialNotification(com.facebook.react.bridge.Promise)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.VirtualView: void saveDefinition()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReactInstanceTask$29()
app.notifee.core.event.NotificationEvent: android.os.Bundle getExtras()
com.dieam.reactnativepushnotification.modules.RNPushNotification: java.util.Map getConstants()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetDisplayZoomControls(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.horcrux.svg.MaskView$MaskType: com.horcrux.svg.MaskView$MaskType[] values()
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.github.barteksc.pdfviewer.PDFView: void setMaxZoom(float)
com.detectfrida.util.RootDetectorHelper: boolean isNotFoundReleaseKeys()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.swmansion.reanimated.MapUtils: MapUtils()
com.horcrux.svg.SvgViewManager: void setBorderTopStartRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeLinecap(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.SharedPreferences getRNDISharedPreferences(android.content.Context)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.horcrux.svg.FilterRegion: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: void getStartInclusive$annotations()
io.invertase.notifee.NotifeeApiModule: void lambda$openPowerManagerSettings$31(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void createFileASCII(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactBridge: void staticInit()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.biometric.CryptoObjectUtils$Api23Impl: void setEncryptionPaddingPKCS7(android.security.keystore.KeyGenParameterSpec$Builder)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.lang.String getVersion()
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.interfaces.fabric.SurfaceHandler,android.content.Context,android.view.View)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)
io.invertase.firebase.common.ReactNativeFirebaseModule: void onCatalystInstanceDestroy()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.SvgViewManager: void setHitSlop(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: void getLogs$annotations()
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: SendAccessibilityEvent(int,int,int)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
app.notifee.core.InitProvider: InitProvider()
androidx.constraintlayout.widget.Barrier: int getMargin()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactcommunity.rndatetimepicker.DatePickerModule)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
io.invertase.notifee.NotifeeApiModule: void lambda$createTriggerNotification$15(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDisplay(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getModDate()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.time.Instant component1()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createViewUnsafe(java.lang.String,int,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View findTransformedView(android.view.View)
com.rnfs.RNFSManager: void unlink(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.ReanimatedModule$1: ReanimatedModule$1(com.swmansion.reanimated.ReanimatedModule,java.util.ArrayList)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead copy(int,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: PdfDocumentKt$getPageCount$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task newGetOrCreateDestroyTask(java.lang.String,java.lang.Exception)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.horcrux.svg.SvgView: android.graphics.Matrix getCtm()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setClipRule(android.view.View,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
app.notifee.core.Notifee: void createChannel(android.os.Bundle,app.notifee.core.interfaces.MethodCallResult)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,java.lang.String)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: NativeRNGestureHandlerModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.horcrux.svg.SvgViewManager: void setBorderTopColor(android.view.View,java.lang.Integer)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
io.legere.pdfiumandroid.PdfiumCore: void _init_$lambda$28()
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper createReactInstanceUnwraper(java.lang.String,java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long getTimeStamp()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void createMediaFile(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.NativeSvgRenderableModuleSpec: boolean isPointInStroke(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.swmansion.reanimated.NodesManager: void stopUpdatingOnAnimationFrame()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: float[] measure(int)
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String getName()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsProtectedMedia(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: FabricUIManager$MountItemDispatchListener$1(com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener,java.util.List)
com.facebook.react.uimanager.NativeViewHierarchyManager: long getInstanceHandle(int)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallerPackageName(com.facebook.react.bridge.Promise)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setAutoInitEnabled$0(java.lang.Boolean)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.swmansion.rnscreens.Screen: void setFragmentWrapper(com.swmansion.rnscreens.ScreenFragmentWrapper)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setColor(android.view.View,java.lang.Integer)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertParamClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setTextLength(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPageBitmap$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname copy(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.bridge.ReactContext getCurrentReactContext()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void printSubTree(android.view.View,int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.bridge.Dynamic: boolean isNull()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatch(java.lang.String,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.runtime.BindingsInstaller: BindingsInstaller(com.facebook.jni.HybridData)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionStart()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setWebviewDebuggingEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.swmansion.reanimated.NativeProxy$1: boolean shouldAnimateExiting(int,boolean)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setDisplay(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.facebook.react.modules.intent.IntentModule: void waitForActivityAndGetInitialURL(com.facebook.react.bridge.Promise)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
io.legere.pdfiumandroid.PdfTextPage: int getPageIndex()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load$default(com.facebook.react.defaults.DefaultNewArchitectureEntryPoint,boolean,boolean,boolean,boolean,java.lang.String,int,java.lang.Object)
com.horcrux.svg.VirtualViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.rnfs.RNFSManager: void addListener(java.lang.String)
org.wonday.pdf.PdfManager: void setPath(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map getReactModuleInfos()
app.notifee.core.model.NotificationAndroidModel: java.lang.Long getTimeoutAfter()
com.github.barteksc.pdfviewer.PDFView: void setSwipeEnabled(boolean)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: RenderableViewManager$FeCompositeManager()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: com.facebook.react.bridge.WritableMap getPlayServicesStatusMap()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.internal.ClippableRoundedCornerLayout: float getCornerRadius()
com.dieam.reactnativepushnotification.modules.RNPushNotification: void unsubscribeFromTopic(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFillOpacity(android.view.View,float)
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.invertase.notifee.NotifeeApiModule: void cancelTriggerNotifications(com.facebook.react.bridge.Promise)
com.facebook.animated.gif.GifImage: int nativeGetWidth()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.yoga.YogaNative: void jni_YGConfigSetErrataJNI(long,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.View,int)
androidx.biometric.BiometricManager$Api29Impl: android.hardware.biometrics.BiometricManager create(android.content.Context)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.horcrux.svg.SvgView: void setVbWidth(float)
io.legere.pdfiumandroid.PdfiumCore: android.graphics.Point mapPageCoordsToDevice(io.legere.pdfiumandroid.PdfDocument,int,int,int,int,int,int,double,double)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.facebook.react.runtime.ReactHostImpl: void setJSEngineResolutionAlgorithm(com.facebook.react.JSEngineResolutionAlgorithm)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable copy(java.time.Instant)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
io.legere.pdfiumandroid.PdfDocument$Meta: void setTitle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setIsInvertedVirtualizedList(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageHeight(int,kotlin.coroutines.Continuation)
com.facebook.react.uimanager.events.Event: int getSurfaceId()
com.swmansion.reanimated.Utils: java.lang.String simplifyStringNumbersList(java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void endLayoutAnimation(int,boolean)
com.reactnativecommunity.webview.RNCWebView: void setMessagingEnabled(boolean)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.facebook.drawee.view.GenericDraweeView: void setInflateHierarchyListener(com.facebook.drawee.view.GenericDraweeView$InflateHierarchyListener)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.reactcommunity.rndatetimepicker.MaterialDatePickerModule: java.lang.String getName()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
io.legere.pdfiumandroid.util.InitLock: void markReady()
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getExecutor()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateLayout(int,int,int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$FilterManager: void setFilterUnits(android.view.View,java.lang.String)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getOngoing()
com.learnium.RNDeviceInfo.RNDeviceModule: void hasSystemFeature(java.lang.String,com.facebook.react.bridge.Promise)
com.aheaditec.talsec_security.security.Natives: boolean a()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageSize(int,kotlin.coroutines.Continuation)
kotlin.collections.EmptyList: java.lang.Object readResolve()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object getPageCount(kotlin.coroutines.Continuation)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.rnfs.RNFSManager: void stopUpload(int)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.franmontiel.persistentcookiejar.BuildConfig: BuildConfig()
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
com.horcrux.svg.SvgView: java.lang.String toDataURL(int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.horcrux.svg.RNSVGRenderableManager: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
kotlin.text.Regex: java.lang.Object writeReplace()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.horcrux.svg.RenderableViewManager$FilterManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setClipPath(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.horcrux.svg.SvgViewModule: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
io.legere.pdfiumandroid.PdfDocument: java.lang.String nativeGetDocumentMetaText(long,java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
com.horcrux.svg.RenderableView: android.graphics.Region getRegion(android.graphics.Path,android.graphics.RectF)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setName(android.view.View,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.reactnativecommunity.webview.RNCWebView: void setSendContentSizeChangeEvents(boolean)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(io.legere.pdfiumandroid.suspend.PdfDocumentKt)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void lambda$new$0(java.lang.Exception)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setResponsible(android.view.View,boolean)
io.legere.pdfiumandroid.util.Config: Config()
com.swmansion.reanimated.NativeProxy$1: boolean isLayoutAnimationEnabled()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.jni.MapIteratorHelper: boolean hasNext()
io.invertase.notifee.NotifeeApiModule: void onCatalystInstanceDestroy()
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void requestRender(com.swmansion.reanimated.nativeProxy.AnimationFrameCallback)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.swmansion.reanimated.CopiedEvent: java.lang.String getEventName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
app.notifee.core.model.NotificationAndroidModel: android.os.Bundle getPressAction()
com.facebook.react.runtime.ReactHostImpl: java.lang.Void lambda$oldDestroy$53(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.shreemati.sslcertcheck.SSLPinningModule: java.lang.String getName()
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean removeOrAnimateExitRecursive(android.view.View,boolean,boolean)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeMiterlimit(android.view.View,float)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.uimanager.ReanimatedUIManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setDisplay(android.view.View,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBootloaderSync()
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.horcrux.svg.FilterProperties$EdgeMode: com.horcrux.svg.FilterProperties$EdgeMode valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onViewsRemoval(int[])
app.notifee.core.model.NotificationAndroidModel: int getForegroundServiceType()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.fabric.BindingImpl: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: State$ReadOnly(int,java.time.Instant,com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead,kotlinx.serialization.internal.SerializationConstructorMarker)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object saveAsCopy(io.legere.pdfiumandroid.PdfWriteCallback,kotlin.coroutines.Continuation)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void runDeferredTagRemovalAndDeletion()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.swmansion.rnscreens.ModalScreenViewManager: java.lang.String getName()
io.legere.pdfiumandroid.PdfDocument$Meta: void setKeywords(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.swmansion.reanimated.BuildConfig: BuildConfig()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.swmansion.reanimated.layoutReanimation.Snapshot: void addCurrentConfig(java.util.HashMap)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$Companion: State$Qualified$Companion()
com.learnium.RNDeviceInfo.RNDeviceModule: void isAirplaneMode(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(com.swmansion.rnscreens.Screen,java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.runtime.ReactSurfaceView: int getUIManagerType()
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.swmansion.reanimated.NodesManager$3: NodesManager$3(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,boolean,java.util.concurrent.Semaphore,java.util.Queue)
org.wonday.pdf.PdfManager: void setSinglePage(org.wonday.pdf.PdfView,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(android.view.View,java.lang.String)
io.legere.pdfiumandroid.util.Config: io.legere.pdfiumandroid.util.Config copy(io.legere.pdfiumandroid.LoggerInterface,io.legere.pdfiumandroid.util.AlreadyClosedBehavior)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setResponsible(android.view.View,boolean)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: java.lang.String toString()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageSize$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.EmptyReactNativeConfig: boolean getBool(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void initialize()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openTextPage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: PdfPageKt$getPageHeightPoint$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.notifee.NotifeeApiModule: void lambda$getTriggerNotificationIds$6(com.facebook.react.bridge.Promise,java.lang.Exception,java.util.List)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setTintColors(com.reactnativecommunity.checkbox.ReactCheckBox,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: PdfTextPageKt$textPageCountChars$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,kotlin.coroutines.Continuation)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
org.wonday.pdf.PdfManager: java.lang.String getName()
kotlin.collections.builders.SerializedCollection: java.lang.Object readResolve()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.facebook.react.ReactHost: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: java.lang.Object invokeSuspend(java.lang.Object)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: okhttp3.HttpUrl getUrl()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHeaderTranslucent(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
io.legere.pdfiumandroid.PdfTextPage: int nativeTextCountChars(long)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findStack(android.view.View)
io.legere.pdfiumandroid.PdfDocument: boolean isClosed()
io.legere.pdfiumandroid.PdfPage: io.legere.pdfiumandroid.PdfTextPage openTextPage()
com.swmansion.reanimated.NodesManager: void enqueueUpdateViewOnNativeThread(int,com.facebook.react.bridge.WritableMap,boolean)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle setConversationTitle(android.app.Notification$MessagingStyle,java.lang.CharSequence)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.learnium.RNDeviceInfo.RNDeviceModule)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeLinecap(android.view.View,int)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.fabric.LongStreamingStats: long getMax()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
org.wonday.pdf.PdfManager: void onDropViewInstance(org.wonday.pdf.PdfView)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void scheduleLocalNotification(com.facebook.react.bridge.ReadableMap)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(com.swmansion.rnscreens.Screen,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setColor(android.view.View,java.lang.Integer)
com.rnfs.RNFSManager: void exists(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskType(com.horcrux.svg.MaskView,int)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.github.barteksc.pdfviewer.util.FitPolicy: com.github.barteksc.pdfviewer.util.FitPolicy valueOf(java.lang.String)
io.legere.pdfiumandroid.PdfDocument$PageCount: java.lang.String toString()
com.facebook.react.fabric.FabricUIManager$5: int getSurfaceId()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.fabric.BindingImpl: com.facebook.jni.HybridData initHybrid()
app.notifee.core.model.NotificationAndroidModel: java.lang.String getSound()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getOrCreateModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder,boolean)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.fabric.BindingImpl: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: NodesManager$NativeUpdateOperation(com.swmansion.reanimated.NodesManager,int,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.VirtualViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: PdfDocumentKt$saveAsCopy$2(io.legere.pdfiumandroid.suspend.PdfDocumentKt,io.legere.pdfiumandroid.PdfWriteCallback,kotlin.coroutines.Continuation)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.BuildConfig: BuildConfig()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.github.barteksc.pdfviewer.PDFView$ScrollDir: com.github.barteksc.pdfviewer.PDFView$ScrollDir[] values()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: void invalidate()
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner$Companion$androidCertificateChainCleanerFactory$2: com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleanerFactory invoke()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] $values()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.legere.pdfiumandroid.PdfTextPage: java.lang.String textPageGetTextLegacy(int,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.swmansion.reanimated.NodesManager$3: void runGuarded()
com.horcrux.svg.VirtualView: void invalidate()
com.toyberman.RNSslPinningModule: void getCookies(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String toString()
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
io.legere.pdfiumandroid.PdfPage: void renderPageBitmap$default(io.legere.pdfiumandroid.PdfPage,android.graphics.Bitmap,android.graphics.Matrix,android.graphics.RectF,boolean,boolean,int,java.lang.Object)
io.legere.pdfiumandroid.PdfPage: long getPagePtr()
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void finishSharedAnimation(int)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapRectToPage$2: PdfPageKt$mapRectToPage$2(io.legere.pdfiumandroid.suspend.PdfPageKt,int,int,int,int,int,android.graphics.Rect,kotlin.coroutines.Continuation)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.horcrux.svg.SvgViewManager: void setBorderStartEndRadius(android.view.View,com.facebook.react.bridge.Dynamic)
org.wonday.pdf.PdfManager: void setShowsHorizontalScrollIndicator(android.view.View,boolean)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
io.invertase.notifee.NotifeeApiModule: void getNotificationSettings(com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.google.android.material.chip.Chip: void setChecked(boolean)
io.legere.pdfiumandroid.PdfDocument$Bookmark: void setTitle(java.lang.String)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
kotlin.collections.builders.ListBuilder: java.lang.Object writeReplace()
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getCreationDate()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$Companion: PreviousOperator$Companion()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
com.facebook.react.fabric.mounting.MountingManager: boolean surfaceIsStopped(int)
io.legere.pdfiumandroid.PdfPage: void renderPageBitmap$default(io.legere.pdfiumandroid.PdfPage,android.graphics.Bitmap,int,int,int,int,boolean,boolean,int,java.lang.Object)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.BridgelessReactContext lambda$getOrCreateReactContext$24()
io.legere.pdfiumandroid.PdfDocument$Meta: void setProducer(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void enableCleaningForViewTag(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void clearAnimationConfigRecursive(android.view.View)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected,java.time.Instant,int,java.lang.Object)
io.invertase.notifee.NotifeeEventSubscriber: void onBlockStateEvent(app.notifee.core.event.BlockStateEvent)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.facebook.react.fabric.DevToolsReactPerfLogger: DevToolsReactPerfLogger()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: FabricUIManager$MountItemDispatchListener(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface destroy(java.lang.String,java.lang.Exception)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: int hashCode()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setFloodColor(com.horcrux.svg.FeFloodView,com.facebook.react.bridge.Dynamic)
com.learnium.RNDeviceInfo.RNDeviceModule: void getStartupTime(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load(boolean,boolean,boolean)
app.notifee.core.event.BlockStateEvent: boolean isBlocked()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.uimanager.UIConstantsProviderManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.swmansion.reanimated.AndroidUIScheduler$1: void run()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.horcrux.svg.SvgViewManager: void setNativeForegroundAndroid(com.horcrux.svg.SvgView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMidLine(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getDocumentMeta$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$Companion: FinalTreeHead$Companion()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.ReactActivity: ReactActivity()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load()
com.horcrux.svg.SvgViewManager: void setNextFocusForward(com.horcrux.svg.SvgView,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: DevToolsReactPerfLogger$FabricCommitPoint(int)
com.horcrux.svg.VirtualView: void clearCache()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.facebook.react.uimanager.events.Event: void dispose()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void stopSurface()
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.time.Instant component1()
io.invertase.notifee.NotifeeApiModule: void lambda$isBatteryOptimizationEnabled$29(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Boolean)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldRouteTurboModulesThroughLegacyModuleInterop()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void createFile(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageCropBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sendAccessibilityEvent(int,int)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK3(android.view.View,float)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void onCatalystInstanceDestroy()
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setIn2(com.horcrux.svg.FeCompositeView,java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
io.legere.pdfiumandroid.DefaultLogger: DefaultLogger()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String access$getMALWARE_CHANNEL_KEY$cp()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.react.fabric.BindingImpl: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.horcrux.svg.SvgViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageBleedBox(kotlin.coroutines.Continuation)
com.freeraspreactnative.FreeraspReactNativeModule: void talsecStart$lambda$2$lambda$1(com.freeraspreactnative.FreeraspReactNativeModule,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorStatus: com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorStatus valueOf(java.lang.String)
com.shree.mati.MainApplication: MainApplication()
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.invertase.notifee.NotifeeApiModule: void getInitialNotification(com.facebook.react.bridge.Promise)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
com.facebook.react.TurboReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Retired: java.time.Instant getTimestamp()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setResponsible(android.view.View,boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: LayoutAnimations(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(com.swmansion.rnscreens.SearchBarView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.swmansion.reanimated.NodesManager: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
io.legere.pdfiumandroid.util.Size: int hashCode()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getUnbufferedRuntimeExecutor()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: Log$$serializer()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updatePadding(int,int,int,int,int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$400(com.learnium.RNDeviceInfo.RNDeviceModule)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.react.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion()
app.notifee.core.model.NotificationAndroidModel: java.lang.Integer getBadgeIconType()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void willMountItems(java.util.List)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.Dynamic: void recycle()
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
com.horcrux.svg.VirtualView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$1(android.view.View,int,int)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.ReactMarker: void nativeLogMarker(java.lang.String,long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
com.github.barteksc.pdfviewer.PDFView: int getPageCount()
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getProfilingSettings()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setIn1(com.horcrux.svg.FeGaussianBlurView,java.lang.String)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean getIsReducedMotion()
kotlin.SafePublicationLazyImpl: java.lang.Object writeReplace()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidthPoint$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
app.notifee.core.model.NotificationAndroidStyleModel: com.google.common.util.concurrent.ListenableFuture getPerson(com.google.common.util.concurrent.ListeningExecutorService,android.os.Bundle)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setFloodColor(com.horcrux.svg.FeFloodView,com.facebook.react.bridge.ReadableMap)
io.legere.pdfiumandroid.PdfiumCore$Companion: java.lang.Object getLock()
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void unsubscribeFromTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State valueOf(java.lang.String)
io.legere.pdfiumandroid.util.Size: io.legere.pdfiumandroid.util.Size copy(int,int)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unregisterSensor(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: int getSurfaceId()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: State$Qualified$$serializer()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeMiterlimit(android.view.View,float)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float,float,float)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.fabric.FabricUIManager$5: java.lang.String toString()
com.horcrux.svg.FilterProperties$Units: com.horcrux.svg.FilterProperties$Units valueOf(java.lang.String)
com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorStatus: com.fingerprintjs.android.fingerprint.info_providers.FingerprintSensorStatus[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean shouldAnimateExiting(int,boolean)
com.github.barteksc.pdfviewer.PDFView: int getCurrentPage()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.reactcommunity.rndatetimepicker.NativeModuleMaterialDatePickerSpec: NativeModuleMaterialDatePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderBlockEndColor(android.view.View,java.lang.Integer)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object getDocumentMeta(kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setProfilingSettings(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.SvgViewManager: void setBorderStartEndRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String access$getTHREAT_CHANNEL_NAME$cp()
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.fingerprintjs.android.fingerprint.signal_providers.StabilityLevel: com.fingerprintjs.android.fingerprint.signal_providers.StabilityLevel[] values()
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
com.freeraspreactnative.FreeraspReactNativeModule: void getThreatChannelData(com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: okhttp3.HttpUrl component6()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: boolean getBridgelessEnabled()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFilter(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
app.notifee.core.EventSubscriber: void onNotificationEvent(app.notifee.core.event.NotificationEvent)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionEnd()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname getDns()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: java.time.Instant getLogListTimestamp()
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: void addListener(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(android.view.View,java.lang.String)
io.legere.pdfiumandroid.PdfPage: android.graphics.PointF nativeDeviceCoordsToPage(long,int,int,int,int,int,int,int)
com.horcrux.svg.NativeSvgRenderableModuleSpec: double getTotalLength(java.lang.Double)
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getSDCardDir(com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.horcrux.svg.VirtualViewManager: void resetTransformProperty(android.view.View)
com.horcrux.svg.RenderableViewManager$FilterManager: RenderableViewManager$FilterManager()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: java.util.List component2()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.facebook.jni.HybridData: void resetNative()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
com.detectfrida.DetectFridaModule: java.lang.String getName()
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.intent.IntentModule)
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
io.legere.pdfiumandroid.PdfDocument$Meta: void setCreator(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.horcrux.svg.SvgView: int reactTagForTouch(float,float)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.rnfs.RNFSManager: void downloadFile(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountRects$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.facebook.react.fabric.FabricUIManager$4: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setColor(android.view.View,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.animated.gif.GifFrame: int nativeGetTransparentPixelColor()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
com.horcrux.svg.SvgView: void setId(int)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper(com.facebook.jni.HybridData)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void clearAllSharedConfigsForView(android.view.View)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.runtime.ReactHostImpl: void lambda$loadJSBundleFromMetro$37(java.lang.String,com.facebook.react.devsupport.DevSupportManagerBase,com.facebook.react.runtime.internal.bolts.TaskCompletionSource)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.detectfrida.util.RootDetectorHelper: boolean isAccessedSuperuserApk()
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task oldReload(java.lang.String)
com.horcrux.svg.FilterProperties$FeBlendMode: com.horcrux.svg.FilterProperties$FeBlendMode valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setHasTVPreferredFocus(com.horcrux.svg.SvgView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
app.notifee.core.event.LogEvent: java.lang.Throwable getThrowable()
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
app.notifee.core.model.NotificationAndroidActionModel: java.lang.String getIcon()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setIn1(com.horcrux.svg.FeOffsetView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.rnfs.RNFSManager: android.net.Uri getFileUri(java.lang.String,boolean)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(int,long)
com.facebook.react.bridge.NativeModule: void initialize()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageWidthPoint(kotlin.coroutines.Continuation)
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback getFrameCallback()
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.lang.String getKey()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int subscribeForKeyboardEvents(com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater,boolean)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.facebook.react.uimanager.events.Event: int getUniqueID()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$FilterPrimitiveManager: RenderableViewManager$FilterPrimitiveManager(com.horcrux.svg.VirtualViewManager$SVGClass)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: boolean isOnThread()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: void run(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTransactionEndDuration()
com.detectfrida.DetectFridaModule: void detectRoot(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
io.invertase.notifee.NotifeeApiModule: void lambda$isChannelCreated$20(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.util.Config: Config(io.legere.pdfiumandroid.LoggerInterface,io.legere.pdfiumandroid.util.AlreadyClosedBehavior,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: int hashCode()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay: void setOverlays(java.util.List)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfPage: io.legere.pdfiumandroid.util.Size getPageSize(int)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.swmansion.reanimated.NodesManager$OnAnimationFrame: void onAnimationFrame(double)
com.swmansion.rnscreens.ModalScreenViewManager: ModalScreenViewManager()
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] values()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.reactnative.maskedview.RNCMaskedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
io.legere.pdfiumandroid.PdfiumCore: long nativeOpenDocument(int,java.lang.String)
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
com.horcrux.svg.VirtualViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.fabric.mounting.LayoutMetricsConversions: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.rnfs.RNFSManager: void moveFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.fabric.LongStreamingStats$2: LongStreamingStats$2(com.facebook.react.fabric.LongStreamingStats)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.github.barteksc.pdfviewer.PDFView: io.legere.pdfiumandroid.PdfDocument$Meta getDocumentMeta()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfPageKt$openTextPage$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setClipRule(android.view.View,int)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] values()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.horcrux.svg.VirtualView: int saveAndSetupCanvas(android.graphics.Canvas,android.graphics.Matrix)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableMap)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: java.time.Instant getTimestamp()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod: com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod[] values()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetBuiltInZoomControls(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFilter(android.view.View,java.lang.String)
com.horcrux.svg.SvgView: void onSizeChanged(int,int,int,int)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
io.legere.pdfiumandroid.PdfPage: android.graphics.PointF mapDeviceCoordsToPage(int,int,int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK2(com.horcrux.svg.FeCompositeView,float)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.learnium.RNDeviceInfo.RNDeviceModule: void getHardware(com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setMinimumFontSize(com.reactnativecommunity.webview.RNCWebViewWrapper,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void requestPermissions()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageHeightPoint(kotlin.coroutines.Continuation)
com.facebook.react.ReactHost: com.facebook.react.interfaces.TaskInterface destroy(java.lang.String,java.lang.Exception)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.facebook.react.ReactHost: void onHostPause()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void registerEventHandler(com.swmansion.reanimated.nativeProxy.EventHandler)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageGetBoundedText(android.graphics.RectF,int,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeMiterlimit(android.view.View,float)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void resetPerfStats()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDx(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.gusparis.monthpicker.adapter.RNActions: com.gusparis.monthpicker.adapter.RNActions[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
app.notifee.core.model.NotificationAndroidStyleModel: androidx.core.app.NotificationCompat$BigTextStyle getBigTextStyle()
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.legere.pdfiumandroid.PdfPage: android.graphics.RectF getPageArtBox()
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setFloodColor(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.sensor.ReanimatedSensorType: ReanimatedSensorType(java.lang.String,int,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void subscribeToTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected copy(java.time.Instant)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object openTextPages(int,int,kotlin.coroutines.Continuation)
com.horcrux.svg.SvgViewManager: java.lang.String getName()
com.swmansion.reanimated.sensor.ReanimatedSensorListener: ReanimatedSensorListener(com.swmansion.reanimated.nativeProxy.SensorSetter,double,android.view.Display)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
app.notifee.core.Logger: void w(java.lang.String,java.lang.String)
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor: void executeItems(java.util.Queue)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeMiterlimit(android.view.View,float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.jni.HybridData: boolean isValid()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetBool(java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: PdfiumCoreKt$newDocument$8(io.legere.pdfiumandroid.suspend.PdfiumCoreKt,byte[],java.lang.String,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.RenderableViewManager$MaskManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.animated.gif.GifImage: void nativeFinalize()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setOperator1(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean isTurboModule(java.lang.String)
com.horcrux.svg.SvgViewManager: void setColor(android.view.View,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.lang.String toString()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.react.fabric.FabricUIManager$2: int getSurfaceId()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceNameSync()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeLinejoin(android.view.View,int)
com.detectfrida.util.RootDetectorHelper: boolean isFoundXposed()
io.legere.pdfiumandroid.PdfPage: int nativeGetPageHeightPixel(long,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: void getVersion$annotations()
org.wonday.pdf.PdfView: void setPassword(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
com.BV.LinearGradient.LinearGradientManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setIn1(com.horcrux.svg.FeBlendView,java.lang.String)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.fabric.BindingImpl: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: State$Pending(int,java.time.Instant,kotlinx.serialization.internal.SerializationConstructorMarker)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.horcrux.svg.SvgViewManager: void setBorderBlockColor(android.view.View,java.lang.Integer)
com.horcrux.svg.SvgPackage: com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorage(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
io.legere.pdfiumandroid.suspend.PdfPageKt$mapPageCoordsToDevice$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: void setClickCapture(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] $values()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
io.invertase.notifee.NotifeeApiModule: void lambda$createChannel$7(com.facebook.react.bridge.Promise,java.lang.Exception,java.lang.Void)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getRunStartTime()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.horcrux.svg.RenderableView: android.graphics.Rect getHitSlopRect()
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
app.notifee.core.model.NotificationAndroidPressActionModel: java.lang.String getMainComponent()
com.facebook.react.ReactHost: com.facebook.react.interfaces.fabric.ReactSurface createSurface(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.swmansion.reanimated.NodesManager$1: void runGuarded()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMask(android.view.View,java.lang.String)
com.sslpublickeypinning.SslPublicKeyPinningSpec: SslPublicKeyPinningSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getCreator()
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.horcrux.svg.RenderableViewManager$FeFloodManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
app.notifee.core.Notifee: void openNotificationSettings(java.lang.String,android.app.Activity,app.notifee.core.interfaces.MethodCallResult)
io.legere.pdfiumandroid.PdfPage: io.legere.pdfiumandroid.util.Size nativeGetPageSizeByIndex(long,int,int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: PdfTextPageKt$textPageGetRect$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,int,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setClipRule(android.view.View,int)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
io.legere.pdfiumandroid.suspend.PdfPageKt$renderPage$2: PdfPageKt$renderPage$2(io.legere.pdfiumandroid.suspend.PdfPageKt,android.view.Surface,int,int,int,int,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.github.barteksc.pdfviewer.PDFView: void setPageFling(boolean)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
androidx.work.impl.background.systemalarm.Alarms$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: SharedTransitionManager$ConfigCleanerTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.PdfPage: void nativeRenderPageBitmapWithMatrix$default(io.legere.pdfiumandroid.PdfPage,long,android.graphics.Bitmap,float[],android.graphics.RectF,boolean,boolean,int,java.lang.Object)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void bringBackWindowInsets()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUnique(java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
io.legere.pdfiumandroid.PdfiumCore: long openTextPage(io.legere.pdfiumandroid.PdfDocument,int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setDisplay(android.view.View,java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void addListener(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCarrierSync()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: void close()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
org.reactnative.maskedview.RNCMaskedViewManager: RNCMaskedViewManager()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.ReadableMap)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetRect$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.View,int)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$42(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getSubject()
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.AndroidUIScheduler,com.swmansion.reanimated.layoutReanimation.LayoutAnimations,com.facebook.react.bridge.queue.MessageQueueThread,java.lang.String)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.fabric.mounting.MountingManager: MountingManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: java.time.Instant getTimestamp()
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.swmansion.rnscreens.ScreensModule: void nativeInstall(long)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType: com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType[] values()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object getPageWidth(int,kotlin.coroutines.Continuation)
com.facebook.react.runtime.ReactHostImpl: void removeBeforeDestroyListener(kotlin.jvm.functions.Function0)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgViewManager: void setHasTVPreferredFocus(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$saveAsCopy$2: java.lang.Object invokeSuspend(java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
com.reactcommunity.rndatetimepicker.NativeModuleMaterialDatePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
app.notifee.core.model.NotificationAndroidPressActionModel: NotificationAndroidPressActionModel(android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getCTM(java.lang.Double)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: State$Usable(int,java.time.Instant,kotlinx.serialization.internal.SerializationConstructorMarker)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFillRule(android.view.View,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] values()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
com.facebook.react.bridge.JavaJSExecutor: void close()
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initialize()
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.horcrux.svg.SvgPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
kotlin.random.Random: Random()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.facebook.react.runtime.ReactHostImpl: void addBeforeDestroyListener(kotlin.jvm.functions.Function0)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
io.legere.pdfiumandroid.util.ConfigKt: boolean handleAlreadyClosed(boolean)
io.legere.pdfiumandroid.PdfPage: java.lang.String nativeGetLinkURI(long,long)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setClipRule(android.view.View,int)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.JSTimerExecutor createJSTimerExecutor()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$isNotificationDelegationEnabled$2()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
kotlinx.serialization.json.JsonObject$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.reactcommunity.rndatetimepicker.TimePickerModule: void dismiss(com.facebook.react.bridge.Promise)
com.horcrux.svg.SvgView: void setCurrentColor(java.lang.Integer)
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker()
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void mv(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
io.legere.pdfiumandroid.suspend.PdfPageKt: java.lang.Object renderPageBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.RectF,boolean,boolean,kotlin.coroutines.Continuation)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.Logger: void d(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.biometric.CryptoObjectUtils$Api28Impl: android.hardware.biometrics.BiometricPrompt$CryptoObject create(javax.crypto.Cipher)
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: NativeModuleDatePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
io.legere.pdfiumandroid.PdfDocument$PageCount: long getPagePtr()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: TurboModuleManager$ModuleHolder()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.room.Index$Order: androidx.room.Index$Order[] values()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
app.notifee.core.model.NotificationAndroidStyleModel: com.google.common.util.concurrent.ListenableFuture getStyleTask(com.google.common.util.concurrent.ListeningExecutorService)
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: State(int,kotlinx.serialization.internal.SerializationConstructorMarker)
com.facebook.react.uimanager.UIConstantsProviderManager: UIConstantsProviderManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setK1(com.horcrux.svg.FeCompositeView,float)
io.legere.pdfiumandroid.R: R()
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.FabricUIManager$1: void executeItems(java.util.Queue)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setIn1(android.view.View,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.horcrux.svg.VirtualView: double relativeOnOther(com.horcrux.svg.SVGLength)
com.appmattus.certificatetransparency.internal.verifier.CertificateTransparencyTrustManager: com.appmattus.certificatetransparency.VerificationResult verifyCertificateTransparency(java.lang.String,java.util.List)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
com.horcrux.svg.RenderableViewManager$FilterManager: void setWidth(com.horcrux.svg.FilterView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.animated.gif.GifImage: com.facebook.animated.gif.GifFrame nativeGetFrame(int)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setNotificationDelegationEnabled$5(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
io.legere.pdfiumandroid.PdfDocument$Meta: java.lang.String getKeywords()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getUiMessageQueueThread()
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
io.legere.pdfiumandroid.PdfiumCore: void getPageCount(io.legere.pdfiumandroid.PdfDocument)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeToMediaFile(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void isNotificationDelegationEnabled(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$FilterManager: void setPrimitiveUnits(com.horcrux.svg.FilterView,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.horcrux.svg.VirtualViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.uimanager.events.Event: void init(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeOpacity(android.view.View,float)
io.legere.pdfiumandroid.PdfTextPage$Companion: PdfTextPage$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void write$Self$certificatetransparency(com.appmattus.certificatetransparency.internal.loglist.model.v3.Log,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
io.invertase.notifee.NotifeePackage: NotifeePackage()
app.notifee.core.Notifee: void getTriggerNotificationIds(app.notifee.core.interfaces.MethodCallResult)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
io.legere.pdfiumandroid.PdfDocument: int getPageCount()
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List getSharedElementsForCurrentTransition(java.util.List,boolean)
com.facebook.react.runtime.ReactHostImpl: void log(java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$destroy$9(java.lang.String,java.lang.Exception)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.aheaditec.talsec_security.security.api.Natives: void start(android.content.Context,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$Companion: PreviousOperator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void invalidate()
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getPointAtLength(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified,java.time.Instant,int,java.lang.Object)
com.facebook.react.TurboReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
io.invertase.notifee.NotifeeApiModule: void lambda$requestPermission$26(com.facebook.react.bridge.Promise,java.lang.Exception,android.os.Bundle)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
com.facebook.react.runtime.ReactHostImpl: void detachSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(android.view.View,int)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDashoffset(android.view.View,float)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
app.notifee.core.NotificationReceiverActivity: NotificationReceiverActivity()
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.View,android.view.View,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$sendMessage$13(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.runtime.ReactHostImpl: void onHostPause(android.app.Activity)
io.legere.pdfiumandroid.PdfTextPage: int nativeTextGetText(long,int,int,short[])
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderBlockEndColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.learnium.RNDeviceInfo.RNDeviceModule)
com.horcrux.svg.SvgViewManager: void setNativeForegroundAndroid(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
io.legere.pdfiumandroid.suspend.PdfPageKt$mapDeviceCoordsToPage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getMaximumMergeDelay$annotations()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.PdfPage: float[] nativeGetPageTrimBox(long)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: int getIdentifier(android.content.Context,java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.chip.Chip: void setLines(int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.reflect.Method[] getMethodsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View getTransitioningView(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator: com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator,java.lang.String,java.util.List,java.util.List,int,java.lang.Object)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean getViewExists(int)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
app.notifee.core.model.NotificationAndroidModel: java.lang.String getTag()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.modules.core.TimingModule: void initialize()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String getName()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
io.legere.pdfiumandroid.PdfTextPage: double[] nativeTextGetCharBox(long,int)
io.legere.pdfiumandroid.PdfDocument: java.lang.String nativeGetBookmarkTitle(long)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void printSurfaceState()
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.animated.gif.GifImage: int[] nativeGetFrameDurations()
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetCharIndexAtPos$2: PdfTextPageKt$textPageGetCharIndexAtPos$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,double,double,double,double,kotlin.coroutines.Continuation)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.time.Instant component1()
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: void unregisterSensor(int)
com.horcrux.svg.SvgViewManager: void setBorderEndStartRadius(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.facebook.react.uimanager.BaseViewManager: void setRole(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
app.notifee.core.EventSubscriber: void onForegroundServiceEvent(app.notifee.core.event.ForegroundServiceEvent)
com.facebook.react.runtime.ReactHostImpl: void startAttachedSurfaces(java.lang.String,com.facebook.react.runtime.ReactInstance)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
app.notifee.core.Notifee: void createChannels(java.util.List,app.notifee.core.interfaces.MethodCallResult)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isIdle()
io.legere.pdfiumandroid.DefaultLogger: void d(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
com.rnfs.RNFSManager: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$getFontSize$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object openPage(int,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void beginMarkers(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.facebook.react.fabric.mounting.SurfaceMountingManager: SurfaceMountingManager(int,com.facebook.react.touch.JSResponderHandler,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor,com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.BV.LinearGradient.LinearGradientManager: void setLocations(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.reactcommunity.rndatetimepicker.RNTimePickerDialogFragment: RNTimePickerDialogFragment()
com.facebook.react.fabric.FabricUIManager$3: void runGuarded()
app.notifee.core.Logger: void e(java.lang.String,java.lang.String,java.lang.Exception)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$newGetOrCreateReloadTask$41(com.facebook.react.runtime.ReactHostImpl$ReactInstanceTaskUnwrapper,com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
com.horcrux.svg.SvgView: boolean interceptsTouchEvent(float,float)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacityOldSync()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.websocket.WebSocketModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.horcrux.svg.RenderableView: void renderMarkers(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: TraceUpdateOverlayManager()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler getDefaultBackButtonHandler()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void ls(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.BV.LinearGradient.LinearGradientManager: void setEndPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.facebook.react.runtime.ReactHostImpl: void onHostDestroy()
com.facebook.react.runtime.ReactHostImpl: void attachSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.legere.pdfiumandroid.PdfPage: android.graphics.Point mapPageCoordsToDevice(int,int,int,int,int,double,double)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.imagepicker.ImagePickerProvider: ImagePickerProvider()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: void setOverflowInset(int,int,int,int)
com.horcrux.svg.SvgViewManager: void setBorderRadius(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTreeForTags(int[],com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
app.notifee.core.model.NotificationAndroidModel: java.lang.String getLargeIcon()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableMap copyReadableMap(com.facebook.react.bridge.ReadableMap)
app.notifee.core.model.NotificationAndroidPressActionModel: app.notifee.core.model.NotificationAndroidPressActionModel fromBundle(android.os.Bundle)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: ReactMarker$ReactMarkerRecord(java.lang.String,long)
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: MountItemFactory()
io.legere.pdfiumandroid.PdfiumCore: android.graphics.RectF getPageMediaBox(io.legere.pdfiumandroid.PdfDocument,int)
com.facebook.react.bridge.DimensionPropConverter: DimensionPropConverter()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$waitThenCallNewGetOrCreateReactInstanceTaskWithRetries$25(int,int,com.facebook.react.runtime.internal.bolts.Task)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Companion$1: java.lang.Object invoke()
io.invertase.firebase.common.ReactNativeFirebaseModule: android.content.Context getApplicationContext()
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.util.Size getPageSize(io.legere.pdfiumandroid.PdfDocument,int)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: AnimationFrameCallback(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageBoundingBox$2: PdfPageKt$getPageBoundingBox$2(io.legere.pdfiumandroid.suspend.PdfPageKt,kotlin.coroutines.Continuation)
com.learnium.RNDeviceInfo.RNDeviceModule: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,java.lang.Object)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
kotlin.collections.EmptyMap: java.lang.Object readResolve()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageLinks$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFilter(android.view.View,java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.horcrux.svg.VirtualView: void setMarkerEnd(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.fabric.FabricUIManager$1: FabricUIManager$1(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
app.notifee.core.model.NotificationAndroidModel: java.lang.Integer getSmallIconLevel()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setName(android.view.View,java.lang.String)
io.legere.pdfiumandroid.util.Config: java.lang.String toString()
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation: com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation[] values()
com.facebook.react.fabric.BindingImpl: void driveCxxAnimations()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$subscribeToTopic$14(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending: java.time.Instant component1()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.scottyab.rootbeer.RootBeerNative: int checkForRoot(java.lang.Object[])
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.freeraspreactnative.FreeraspReactNativeModule: void addListener(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: KeyboardEventDataUpdater(com.facebook.jni.HybridData)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetBoundedText$2: PdfTextPageKt$textPageGetBoundedText$2(io.legere.pdfiumandroid.suspend.PdfTextPageKt,android.graphics.RectF,int,kotlin.coroutines.Continuation)
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] values()
com.swmansion.reanimated.NodesManager$2: NodesManager$2(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$FeCompositeManager: void setIn1(com.horcrux.svg.FeCompositeView,java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType[] values()
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.learnium.RNDeviceInfo.RNDeviceModule: void hasHms(com.facebook.react.bridge.Promise)
androidx.work.WorkManager$UpdateResult: androidx.work.WorkManager$UpdateResult[] values()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.facebook.animated.gif.GifFrame: int nativeGetDurationMs()
com.facebook.react.fabric.FabricSoLoader: FabricSoLoader()
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
io.legere.pdfiumandroid.PdfDocument: boolean saveAsCopy(io.legere.pdfiumandroid.PdfWriteCallback,int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: State$ReadOnly(java.time.Instant,com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead)
io.legere.pdfiumandroid.suspend.PdfTextPageKt: java.lang.Object textPageCountRects(int,int,kotlin.coroutines.Continuation)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: java.time.Instant getTimestamp()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.Boolean isRunningInTestLab()
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFilter(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.react.fabric.BindingImpl: void unregister()
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task oldGetOrCreateReactInstanceTask()
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getFingerprintSync()
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageWidth$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void checkPermissions(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
io.legere.pdfiumandroid.PdfPage: void renderPageBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.RectF,boolean,boolean)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
com.reactnativecommunity.webview.RNCWebView: com.facebook.react.uimanager.ThemedReactContext getThemedReactContext()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCount$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.interfaces.TaskInterface stopSurface(com.facebook.react.runtime.ReactSurfaceImpl)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
com.facebook.react.fabric.FabricSoLoader: void staticInit()
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.reactcommunity.rndatetimepicker.RNDatePickerDialogFragment: RNDatePickerDialogFragment()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.String toString()
io.invertase.notifee.NotifeeApiModule: void lambda$getChannels$16(com.facebook.react.bridge.Promise,java.lang.Exception,java.util.List)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void disableCleaningForViewTag(int)
app.notifee.core.event.LogEvent: java.lang.String getMessage()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task callAfterGetOrCreateReactInstance(java.lang.String,com.facebook.react.runtime.ReactHostImpl$VeniceThenable)
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator: java.time.Instant getEndDate()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.facebook.jni.HybridData getHybridData()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler: void reportJsException(com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.facebook.react.ReactHost: void onHostResume(android.app.Activity)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getColorized()
com.facebook.react.runtime.ReactSurfaceView: void setIsFabric(boolean)
app.notifee.core.Notifee: Notifee()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$8: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadStart()
com.learnium.RNDeviceInfo.RNDeviceModule: void isEmulator(com.facebook.react.bridge.Promise)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt: PdfiumCoreKt(kotlinx.coroutines.CoroutineDispatcher,io.legere.pdfiumandroid.util.Config,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
com.aheaditec.talsec_security.security.Natives: java.lang.String h(android.content.Context,java.lang.String[])
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
io.legere.pdfiumandroid.util.Config: Config(io.legere.pdfiumandroid.LoggerInterface,io.legere.pdfiumandroid.util.AlreadyClosedBehavior)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: java.util.List getListOfPreviousOperators()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$Companion: Operator$Companion()
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void fetchBlobForm(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.learnium.RNDeviceInfo.RNDeviceModule: void getIncremental(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setProfilingSettings(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$FeColorMatrixManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerStart(android.view.View,java.lang.String)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void createChannel(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.facebook.react.fabric.LongStreamingStats: void add(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: void run()
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMask(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void startAnimation(int,int,java.util.HashMap)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.horcrux.svg.VirtualViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
io.legere.pdfiumandroid.PdfTextPage: double[] nativeTextGetRect(long,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.ReaCompatibility: ReaCompatibility(com.facebook.react.bridge.ReactApplicationContext)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacityOld(com.facebook.react.bridge.Promise)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Qualified: int hashCode()
com.github.barteksc.pdfviewer.PDFView: float getPositionOffset()
app.notifee.core.Notifee: void getPowerManagerInfo(app.notifee.core.interfaces.MethodCallResult)
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: BasicCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void getConcurrentReactEnabled$annotations()
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.facebook.react.fabric.BindingImpl: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.bridge.UIManager get()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setColor(android.view.View,java.lang.Integer)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: int component4()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerStart(android.view.View,java.lang.String)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setAutoInitEnabled$1(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
io.legere.pdfiumandroid.PdfiumCore: io.legere.pdfiumandroid.PdfDocument newDocument(byte[])
com.appmattus.certificatetransparency.internal.loglist.model.v3.PreviousOperator$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.freeraspreactnative.FreeraspReactNativeModule: void blockScreenCapture(boolean,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.rnfs.RNFSManager: void uploadFiles(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$FilterManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String getName()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void unlink(java.lang.String,com.facebook.react.bridge.Callback)
app.notifee.core.model.NotificationAndroidPressActionModel: java.lang.String getId()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int findPrecedingViewTagForTransition(int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean hasAnimationForTag(int,int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
io.legere.pdfiumandroid.PdfPage: void nativeRenderPage(long,android.view.Surface,int,int,int,int,boolean)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsRemoveListener(java.lang.String,java.lang.Boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getProductSync()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDy(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.legere.pdfiumandroid.util.ConfigKt: io.legere.pdfiumandroid.util.Config getPdfiumConfig()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly$Companion: State$ReadOnly$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: java.security.cert.X509Certificate findTrustedCertByIssuerAndSignature(java.security.cert.X509Certificate)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void fetchBlob(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.horcrux.svg.SvgViewManager: void setBorderStyle(android.view.View,java.lang.String)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.ReactContext: void internal_registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
org.wonday.pdf.PdfView: void setEnableAntialiasing(boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Operator$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.facebook.react.fabric.mounting.MountingManager: boolean getViewExists(int)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getDropDownBackgroundTintList()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task loadJSBundleFromMetro()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String getName()
com.horcrux.svg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getPointAtLength(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void updateLayout(android.view.View,com.facebook.react.uimanager.ViewManager,int,float,float,float,float,boolean)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void clear(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
app.notifee.core.model.NotificationAndroidModel: java.lang.Boolean getOnlyAlertOnce()
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupportedAbisSync()
com.horcrux.svg.FilterRegion: void setX(com.facebook.react.bridge.Dynamic)
com.reactcommunity.rndatetimepicker.RNTimePickerDisplay: com.reactcommunity.rndatetimepicker.RNTimePickerDisplay valueOf(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.horcrux.svg.SvgView: float getCanvasHeight()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$2(com.google.firebase.components.ComponentContainer)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateFromIntent(android.content.Intent)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.IViewGroupManager getViewGroupManager(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerEnd(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getMacAddressSync()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.Log copy(java.lang.String,java.lang.String,java.lang.String,int,java.util.List,okhttp3.HttpUrl,com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname,com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,com.appmattus.certificatetransparency.internal.loglist.model.v3.LogType,com.appmattus.certificatetransparency.internal.loglist.model.v3.State)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void progressLayoutAnimation(int,java.util.Map,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Hostname: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleClearJSResponder()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.legere.pdfiumandroid.PdfDocument$Bookmark: void setMNativePtr(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.bridge.DynamicFromMap: void recycle()
io.legere.pdfiumandroid.suspend.PdfDocumentKt$getPageCharCounts$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$FeMergeManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.facebook.animated.gif.GifFrame: int nativeGetDisposalMode()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
com.facebook.react.bridge.UIManagerListener: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInStroke(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeOpacity(android.view.View,float)
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task lambda$oldGetOrCreateReactInstanceTask$33()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontWeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
kotlinx.serialization.json.JsonPrimitive$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.shreemati.SecurityService.SecurityServiceManager: boolean checkRootMethod2()
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] values()
io.invertase.notifee.NotifeeApiModule: void createChannelGroups(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerEnd(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.dieam.reactnativepushnotification.modules.RNPushNotification: void removeAllDeliveredNotifications()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.facebook.react.fabric.events.EventBeatManager: void onBatchEventDispatched()
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeArrayChunk(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: java.time.Instant getStartInclusive()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setReanimatedNativeHierarchyManager(com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandlerHelper(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: State$Usable$$serializer()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
com.horcrux.svg.SvgPackage: SvgPackage()
com.horcrux.svg.SvgViewManager: void setAccessible(com.horcrux.svg.SvgView,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontSize(android.view.View,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.rnfs.RNFSManager: void stopDownload(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.events.Event: short getCoalescingKey()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setVerticalAlign(android.view.View,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.biometric.CryptoObjectUtils$Api23Impl: android.security.keystore.KeyGenParameterSpec$Builder createKeyGenParameterSpecBuilder(java.lang.String,int)
com.swmansion.reanimated.NativeProxy$1: void checkDuplicateSharedTag(int,int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.horcrux.svg.CustomFilter: int normalizeFromFloat(float)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void unsubscribeFromKeyboardEvents(int)
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.rnfs.RNFSManager: void pathForGroup(java.lang.String,com.facebook.react.bridge.Promise)
com.rnfs.RNFSManager: java.lang.String getName()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidResolutionForPlayServices()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
io.legere.pdfiumandroid.PdfDocument: java.util.List openTextPages(int,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.dieam.reactnativepushnotification.modules.RNPushNotification: void getScheduledLocalNotifications(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.sslpublickeypinning.SslPublicKeyPinningSpec: void initialize(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void install$lambda$2(com.swmansion.gesturehandler.react.RNGestureHandlerModule)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.animated.gif.GifImage: com.facebook.animated.gif.GifImage nativeCreateFromNativeMemory(long,int,int,boolean)
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner$Factory: com.appmattus.certificatetransparency.chaincleaner.AndroidCertificateChainCleaner get(javax.net.ssl.X509TrustManager)
io.legere.pdfiumandroid.suspend.PdfDocumentKt$openPage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerEnd(android.view.View,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int)
com.facebook.react.fabric.mounting.MountItemDispatcher: MountItemDispatcher(com.facebook.react.fabric.mounting.MountingManager,com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setClipRule(android.view.View,int)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType valueOf(java.lang.String)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateSync()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setClipPath(android.view.View,java.lang.String)
com.detectfrida.DetectFridaModule: com.facebook.react.bridge.WritableMap getDataToSend(boolean,java.util.ArrayList)
com.horcrux.svg.RenderableViewManager$PatternManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.learnium.RNDeviceInfo.RNDeviceModule: float getFontScaleSync()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPreviewSdkIntSync()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.horcrux.svg.SvgView: void defineBrush(com.horcrux.svg.Brush,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: void getDescription$annotations()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: void getFinalTreeHead$annotations()
com.reactcommunity.rndatetimepicker.DatePickerModule: DatePickerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int getCounter()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setVectorEffect(android.view.View,int)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.work.impl.utils.Api28Impl: java.lang.String getProcessName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFill(android.view.View,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(double,boolean)
com.sslpublickeypinning.SslPublicKeyPinningModule: void initializeCustomClientBuilder()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageMediaBox$2: java.lang.Object invokeSuspend(java.lang.Object)
com.horcrux.svg.events.SvgLoadEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.appmattus.certificatetransparency.internal.loglist.model.v3.Log: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval getTemporalInterval()
io.legere.pdfiumandroid.PdfTextPage: void close()
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.horcrux.svg.RenderableViewManager$FeOffsetManager: RenderableViewManager$FeOffsetManager()
com.swmansion.reanimated.NativeProxy$1: int findPrecedingViewTagForTransition(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(android.view.View,com.facebook.react.bridge.ReadableMap)
org.wonday.pdf.PdfManager: void setPassword(android.view.View,java.lang.String)
org.wonday.pdf.PdfManager: void setMaxScale(org.wonday.pdf.PdfView,float)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStroke(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval: com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval copy$default(com.appmattus.certificatetransparency.internal.loglist.model.v3.TemporalInterval,java.time.Instant,java.time.Instant,int,java.lang.Object)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: NativeDevToolsSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.RenderableView getRenderableViewByTag(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.facebook.react.fabric.FabricUIManager: void initialize()
com.swmansion.rnscreens.NativeScreensModuleSpec: NativeScreensModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState[] values()
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.learnium.RNDeviceInfo.RNDeviceModule: void getHost(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.swmansion.reanimated.NativeProxy$1: void startAnimation(int,int,java.util.HashMap)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.wonday.pdf.PdfManager: void setHorizontal(org.wonday.pdf.PdfView,boolean)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageCountChars$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.gusparis.monthpicker.RNMPickerModule: RNMPickerModule(com.facebook.react.bridge.ReactApplicationContext)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageHeightPoint$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebView: void setInjectedJavaScriptObject(java.lang.String)
androidx.room.Index$Order: androidx.room.Index$Order valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderBottomRightRadius(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
io.invertase.notifee.NotifeeApiModule: void createTriggerNotification(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toCurrentMap()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead: void getTreeSize$annotations()
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateOverflowInset(int,int,int,int,int)
io.legere.pdfiumandroid.util.Size: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setY(android.view.View,com.facebook.react.bridge.Dynamic)
io.legere.pdfiumandroid.suspend.PdfDocumentKt: java.lang.Object getTableOfContents(kotlin.coroutines.Continuation)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending deserialize(kotlinx.serialization.encoding.Decoder)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
org.wonday.pdf.PdfManager: void setShowsHorizontalScrollIndicator(org.wonday.pdf.PdfView,boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMarker(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.horcrux.svg.VirtualViewManager: void onDropViewInstance(com.horcrux.svg.VirtualView)
com.horcrux.svg.SvgView: void onDraw(android.graphics.Canvas)
com.facebook.react.fabric.mounting.MountingManager: void stopSurface(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.dialog.DialogModule)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event coalesce(com.facebook.react.uimanager.events.Event)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle addMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void scanFile(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String getName()
com.facebook.react.defaults.DefaultNewArchitectureEntryPoint: void load$default(boolean,boolean,boolean,java.lang.String,int,java.lang.Object)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getCounter(com.facebook.react.bridge.ReactMarkerConstants)
org.wonday.pdf.PdfManager: org.wonday.pdf.PdfView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: ReactNativeBlobUtil(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: java.time.Instant getTimestamp()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String getName()
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean,boolean)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObjectString(java.lang.String)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didMountItems(java.util.List)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setColor(android.view.View,java.lang.Integer)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean isLayoutAnimationEnabled()
io.legere.pdfiumandroid.PdfiumCore: int getPageHeight(io.legere.pdfiumandroid.PdfDocument,int)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.horcrux.svg.RenderableViewManager$PatternManager: void setResponsible(android.view.View,boolean)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
io.legere.pdfiumandroid.PdfDocument: PdfDocument(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(android.view.View,float)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: void run(android.view.View)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
kotlin.UnsafeLazyImpl: java.lang.Object writeReplace()
io.legere.pdfiumandroid.PdfTextPage: android.graphics.RectF textPageGetRect(int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
app.notifee.core.Notifee: void getTriggerNotifications(app.notifee.core.interfaces.MethodCallResult)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.legere.pdfiumandroid.suspend.PdfTextPageKt$textPageGetText$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.horcrux.svg.RenderableViewManager$FeOffsetManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.appmattus.certificatetransparency.internal.loglist.model.v3.LogListV3: LogListV3(int,java.time.Instant,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
io.legere.pdfiumandroid.suspend.PdfPageKt: io.legere.pdfiumandroid.PdfPage getPage()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
io.invertase.notifee.NotifeeInitProvider: NotifeeInitProvider()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.horcrux.svg.VirtualView: void onMeasure(int,int)
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(android.view.View,float)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String getName()
io.legere.pdfiumandroid.PdfDocument$PageCount: boolean equals(java.lang.Object)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void removeSession(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setClipRule(android.view.View,int)
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler access$getBackgroundHandler$cp()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
app.notifee.core.model.NotificationAndroidModel: java.lang.String getChannelId()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.WritableMap popRemoteMessageMapFromMessagingStore(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
io.invertase.notifee.NotifeeApiModule: void cancelAllNotificationsWithIds(com.facebook.react.bridge.ReadableArray,int,java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$ReadOnly: com.appmattus.certificatetransparency.internal.loglist.model.v3.FinalTreeHead component2()
com.horcrux.svg.VirtualView: double relativeOnWidth(com.horcrux.svg.SVGLength)
app.notifee.core.event.ForegroundServiceEvent: void setCompletionResult()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.legere.pdfiumandroid.suspend.PdfiumCoreKt$newDocument$4: java.lang.Object invokeSuspend(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable: int hashCode()
com.swmansion.rnscreens.CustomSearchView: void setText(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setClipPath(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Inspector$Page: int getId()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerStart(android.view.View,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.rnfs.RNFSManager: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.reactcommunity.rndatetimepicker.DatePickerModule)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.appmattus.certificatetransparency.chaincleaner.BasicCertificateChainCleaner: boolean isSignedBy(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.horcrux.svg.VirtualViewManager: void decomposeMatrix()
com.facebook.react.fabric.FabricComponents: FabricComponents()
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.horcrux.svg.RenderableViewManager$FeFloodManager: RenderableViewManager$FeFloodManager()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.SvgView: void defineClipPath(com.horcrux.svg.VirtualView,java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.shreemati.sslcertcheck.SSLPinningModule: void validateCertificate(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Rejected: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
io.legere.pdfiumandroid.PdfDocument: int[] getPageCharCounts()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
io.legere.pdfiumandroid.suspend.PdfPageKt$getPageArtBox$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.invertase.notifee.NotifeeEventSubscriber: void onNotificationEvent(app.notifee.core.event.NotificationEvent)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: State$Pending$$serializer()
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.runtime.ReactHostImpl: java.lang.Void lambda$callAfterGetOrCreateReactInstance$22(java.lang.String,com.facebook.react.runtime.ReactHostImpl$VeniceThenable,com.facebook.react.runtime.internal.bolts.Task)
com.horcrux.svg.SvgView: void defineFilter(com.horcrux.svg.VirtualView,java.lang.String)
io.invertase.notifee.NotifeeApiModule: void lambda$getDisplayedNotifications$4(com.facebook.react.bridge.Promise,java.lang.Exception,java.util.List)
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setMode(com.horcrux.svg.FeBlendView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.BV.LinearGradient.LinearGradientManager: void setAngle(com.BV.LinearGradient.LinearGradientView,float)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.fabric.events.EventEmitterWrapper castToEventEmitter(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.runtime.ReactHostImpl: com.facebook.react.runtime.internal.bolts.Task newStart()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.facebook.react.runtime.ReactHostImpl: java.lang.Void lambda$callAfterGetOrCreateReactInstance$23(com.facebook.react.runtime.internal.bolts.Task)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Usable$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didDispatchMountItems()
com.horcrux.svg.RenderableViewManager$FeBlendManager: void setMode(android.view.View,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
app.notifee.core.model.NotificationAndroidModel: java.util.ArrayList getActions()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.swmansion.reanimated.MapUtils: int getInt(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: AnimationsManager(com.facebook.react.bridge.ReactContext,com.facebook.react.uimanager.UIManagerModule)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.horcrux.svg.RenderableViewManager$FeGaussianBlurManager: void setStdDeviationY(com.horcrux.svg.FeGaussianBlurView,float)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
okio.ByteString: void readObject(java.io.ObjectInputStream)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
io.legere.pdfiumandroid.util.Size: int getHeight()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
io.legere.pdfiumandroid.PdfDocument: long[] nativeLoadPages(long,int,int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.horcrux.svg.FilterRegion: double getRelativeOrDefault(com.horcrux.svg.VirtualView,com.horcrux.svg.SVGLength,float,double)
com.freeraspreactnative.FreeraspReactNativeModule: void isScreenCaptureBlocked(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(android.view.View,com.facebook.react.bridge.Dynamic)
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertReturnClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.swmansion.reanimated.NodesManager: boolean isAnimationRunning()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
app.notifee.core.model.NotificationAndroidActionModel: android.os.Bundle toBundle()
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void slice(java.lang.String,java.lang.String,int,int,com.facebook.react.bridge.Promise)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.runtime.ReactHostImpl: void lambda$oldDestroyReactInstanceAndContext$55(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
com.appmattus.certificatetransparency.internal.loglist.model.v3.State$Pending$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
com.shreemati.SecurityService.SecurityServiceManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(android.view.View,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewManager: void setAccessible(android.view.View,boolean)
com.appmattus.certificatetransparency.chaincleaner.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFilter(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext getContext()
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String getName()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.runtime.ReactHostImpl: void log(java.lang.String,java.lang.String)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
io.legere.pdfiumandroid.util.Config: int hashCode()
com.rnfs.RNFSManager: void reject(com.facebook.react.bridge.Promise,java.lang.String,java.lang.Exception)

com.freeraspreactnative.FreeraspReactNativeModule
com.freeraspreactnative.models.RNSuspiciousAppInfo$Companion
com.freeraspreactnative.R
com.freeraspreactnative.models.RNSuspiciousAppInfo
com.freeraspreactnative.models.RNPackageInfo$Companion
com.freeraspreactnative.FreeraspReactNativePackage
com.freeraspreactnative.models.RNPackageInfo
com.freeraspreactnative.FreeraspReactNativeModule: com.freeraspreactnative.FreeraspReactNativeModule$Companion Companion
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String MALWARE_CHANNEL_KEY
com.freeraspreactnative.models.RNPackageInfo: java.lang.String appName
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String THREAT_CHANNEL_NAME
com.freeraspreactnative.models.RNPackageInfo: java.lang.String version
com.freeraspreactnative.FreeraspReactNativeModule: android.os.HandlerThread backgroundHandlerThread
com.freeraspreactnative.models.RNPackageInfo: java.lang.String packageName
com.freeraspreactnative.FreeraspReactNativeModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.freeraspreactnative.FreeraspReactNativeModule: com.freeraspreactnative.FreeraspReactNativeModule$lifecycleListener$1 lifecycleListener
com.freeraspreactnative.models.RNPackageInfo: java.lang.String installerStore
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler mainHandler
com.freeraspreactnative.FreeraspReactNativeModule: com.aheaditec.talsec_security.security.api.ThreatListener listener
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String THREAT_CHANNEL_KEY
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler backgroundHandler
com.freeraspreactnative.models.RNPackageInfo: java.lang.String appIcon
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNSuspiciousAppInfo$Companion Companion
com.freeraspreactnative.FreeraspReactNativeModule: boolean talsecStarted
com.freeraspreactnative.FreeraspReactNativeModule: com.facebook.react.bridge.ReactApplicationContext appReactContext
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String NAME
com.freeraspreactnative.models.RNPackageInfo: com.freeraspreactnative.models.RNPackageInfo$Companion Companion
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNPackageInfo packageInfo
com.freeraspreactnative.models.RNSuspiciousAppInfo: java.lang.String reason
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNSuspiciousAppInfo copy$default(com.freeraspreactnative.models.RNSuspiciousAppInfo,com.freeraspreactnative.models.RNPackageInfo,java.lang.String,int,java.lang.Object)
com.freeraspreactnative.R: R()
com.freeraspreactnative.FreeraspReactNativeModule: void talsecStart(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.freeraspreactnative.models.RNSuspiciousAppInfo: RNSuspiciousAppInfo(com.freeraspreactnative.models.RNPackageInfo,java.lang.String)
com.freeraspreactnative.FreeraspReactNativePackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.freeraspreactnative.models.RNPackageInfo: RNPackageInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: com.aheaditec.talsec_security.security.api.TalsecConfig buildTalsecConfig(com.facebook.react.bridge.ReadableMap)
com.freeraspreactnative.models.RNSuspiciousAppInfo: int hashCode()
com.freeraspreactnative.FreeraspReactNativePackage: FreeraspReactNativePackage()
com.freeraspreactnative.models.RNPackageInfo: java.lang.String component1()
com.freeraspreactnative.FreeraspReactNativeModule: FreeraspReactNativeModule(com.facebook.react.bridge.ReactApplicationContext)
com.freeraspreactnative.models.RNPackageInfo: java.lang.String toString()
com.freeraspreactnative.models.RNSuspiciousAppInfo: java.lang.String toString()
com.freeraspreactnative.models.RNPackageInfo$Companion: RNPackageInfo$Companion()
com.freeraspreactnative.FreeraspReactNativeModule: void addListener(java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String access$getTHREAT_CHANNEL_KEY$cp()
com.freeraspreactnative.models.RNPackageInfo: java.lang.String getInstallerStore()
com.freeraspreactnative.models.RNPackageInfo: com.freeraspreactnative.models.RNPackageInfo copy$default(com.freeraspreactnative.models.RNPackageInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.freeraspreactnative.FreeraspReactNativeModule: void removeListeners(int)
com.freeraspreactnative.models.RNPackageInfo: RNPackageInfo(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.freeraspreactnative.FreeraspReactNativeModule: android.os.HandlerThread access$getBackgroundHandlerThread$cp()
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String access$getMALWARE_CHANNEL_KEY$cp()
com.freeraspreactnative.models.RNSuspiciousAppInfo: boolean equals(java.lang.Object)
com.freeraspreactnative.models.RNPackageInfo: java.lang.String getAppIcon()
com.freeraspreactnative.models.RNSuspiciousAppInfo: RNSuspiciousAppInfo(int,com.freeraspreactnative.models.RNPackageInfo,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.freeraspreactnative.models.RNPackageInfo: java.lang.String component5()
com.freeraspreactnative.FreeraspReactNativeModule: void blockScreenCapture$lambda$6(android.app.Activity,boolean,com.facebook.react.bridge.Promise)
com.freeraspreactnative.models.RNPackageInfo: boolean equals(java.lang.Object)
com.freeraspreactnative.FreeraspReactNativeModule: void getAppIcon$lambda$4(com.freeraspreactnative.FreeraspReactNativeModule,java.lang.String,com.facebook.react.bridge.Promise)
com.freeraspreactnative.FreeraspReactNativeModule: void addToWhitelist(java.lang.String,com.facebook.react.bridge.Promise)
com.freeraspreactnative.models.RNSuspiciousAppInfo: void write$Self(com.freeraspreactnative.models.RNSuspiciousAppInfo,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.freeraspreactnative.models.RNSuspiciousAppInfo$Companion: kotlinx.serialization.KSerializer serializer()
com.freeraspreactnative.models.RNPackageInfo: void write$Self(com.freeraspreactnative.models.RNPackageInfo,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.freeraspreactnative.models.RNPackageInfo: java.lang.String component3()
com.freeraspreactnative.FreeraspReactNativeModule: void access$setTalsecStarted$cp(boolean)
com.freeraspreactnative.FreeraspReactNativeModule: void getAppIcon(java.lang.String,com.facebook.react.bridge.Promise)
com.freeraspreactnative.FreeraspReactNativeModule: void blockScreenCapture(boolean,com.facebook.react.bridge.Promise)
com.freeraspreactnative.models.RNPackageInfo: java.lang.String getVersion()
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String access$getTHREAT_CHANNEL_NAME$cp()
com.freeraspreactnative.FreeraspReactNativeModule: boolean access$getTalsecStarted$cp()
com.freeraspreactnative.models.RNPackageInfo: java.lang.String component4()
com.freeraspreactnative.models.RNPackageInfo$Companion: kotlinx.serialization.KSerializer serializer()
com.freeraspreactnative.FreeraspReactNativeModule: java.lang.String getName()
com.freeraspreactnative.models.RNPackageInfo: java.lang.String component2()
com.freeraspreactnative.models.RNPackageInfo: int hashCode()
com.freeraspreactnative.FreeraspReactNativeModule: com.facebook.react.bridge.ReactApplicationContext access$getAppReactContext$cp()
com.freeraspreactnative.FreeraspReactNativeModule: void talsecStart$lambda$2(com.freeraspreactnative.FreeraspReactNativeModule,com.aheaditec.talsec_security.security.api.TalsecConfig,com.facebook.react.bridge.Promise)
com.freeraspreactnative.FreeraspReactNativeModule: void getThreatIdentifiers(com.facebook.react.bridge.Promise)
com.freeraspreactnative.FreeraspReactNativePackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.freeraspreactnative.models.RNPackageInfo: java.lang.String getAppName()
com.freeraspreactnative.FreeraspReactNativeModule: void onInvalidCallback()
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNPackageInfo getPackageInfo()
com.freeraspreactnative.models.RNPackageInfo: java.lang.String getPackageName()
com.freeraspreactnative.FreeraspReactNativeModule: void getThreatChannelData(com.facebook.react.bridge.Promise)
com.freeraspreactnative.models.RNSuspiciousAppInfo$Companion: RNSuspiciousAppInfo$Companion()
com.freeraspreactnative.FreeraspReactNativeModule: void getAppIcon$lambda$4$lambda$3(com.facebook.react.bridge.Promise,java.lang.String)
com.freeraspreactnative.models.RNSuspiciousAppInfo: java.lang.String getReason()
com.freeraspreactnative.FreeraspReactNativeModule: void talsecStart$lambda$2$lambda$1(com.freeraspreactnative.FreeraspReactNativeModule,com.facebook.react.bridge.Promise)
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNSuspiciousAppInfo copy(com.freeraspreactnative.models.RNPackageInfo,java.lang.String)
com.freeraspreactnative.FreeraspReactNativeModule: void isScreenCaptureBlocked(com.facebook.react.bridge.Promise)
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler access$getMainHandler$cp()
com.freeraspreactnative.models.RNPackageInfo: com.freeraspreactnative.models.RNPackageInfo copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.freeraspreactnative.models.RNSuspiciousAppInfo: com.freeraspreactnative.models.RNPackageInfo component1()
com.freeraspreactnative.FreeraspReactNativeModule: android.os.Handler access$getBackgroundHandler$cp()
com.freeraspreactnative.models.RNSuspiciousAppInfo: java.lang.String component2()
com.freeraspreactnative.FreeraspReactNativeModule: android.app.Activity access$getCurrentActivity(com.freeraspreactnative.FreeraspReactNativeModule)
